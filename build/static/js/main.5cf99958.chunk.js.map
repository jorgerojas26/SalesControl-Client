{"version":3,"sources":["actions/productActions.js","actions/categoriesActions.js","requests/products.js","helpers.js","globalComponents/Suggestions.jsx","globalComponents/SearchInput.jsx","components/Header.jsx","components/Navigation.jsx","components/ProductCategories.jsx","components/CategoryTitle.jsx","components/ProductList.jsx","components/BackToTopButton.jsx","requests/isAuthenticated.js","components/Login.jsx","requests/categories.js","adminComponents/Categories.jsx","requests/clients.js","adminComponents/Clients.jsx","adminComponents/ResourceTable.jsx","globalComponents/CustomSelect.jsx","adminComponents/Products.jsx","adminComponents/Sales.jsx","adminComponents/Suppliers.jsx","adminComponents/Supplyings.jsx","adminComponents/Users.jsx","adminComponents/Navigation.jsx","adminComponents/SalesControl.jsx","adminComponents/BetterSalesControl.jsx","adminComponents/Inventory.jsx","adminComponents/Reports.jsx","requests/debts.js","adminComponents/Debt.jsx","components/PrivateRoute.jsx","adminComponents/Dashboard.jsx","reducers/productReducer.js","reducers/categoriesReducer.js","reducers/index.js","store/configureStore.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","loadProducts","paginatedProducts","type","setLoading","loading","loadCategories","categories","setActiveCategoryId","categoryId","setActiveCategoryName","categoryName","fetchAll","async","response","fetch","headers","localStorage","getItem","json","fetchById","id","BASE_URL","fetchByName","name","roundUpProductPrice","price","val","toString","length","Math","ceil","Component","Navigation","ProductCategories","constructor","super","this","fetchProducts","bind","categoryHandler","componentDidMount","then","data","props","dispatch","categoriesActions","document","querySelector","getAttribute","innerText","event","preventDefault","target","className","includes","parentElement","classList","remove","add","page","limit","productActions","result","render","map","category","index","onClick","categoryid","key","connect","state","ownProps","activeCategory","CategoryTitle","activeCategoryName","ProductList","observer","IntersectionObserver","loadMoreProductsHandler","elementToObserve","React","createRef","componentDidUpdate","current","observe","actions","products","concat","entries","isIntersecting","next","product","src","imagePath","alt","style","maxWidth","defaultValue","value","push","ref","speed","viewBox","backgroundColor","foregroundColor","x","y","rx","ry","width","height","unshift","previous","isAuthenticated","token","res","auth","Login","onSubmitHandler","inputHandler","email","password","logginError","authenticated","history","setState","method","body","JSON","stringify","err","setItem","onSubmit","action","onChange","placeholder","functions","create","newCategory","update","require","Categories","fetchMessage","submitMessage","submitMessageType","submitLoading","categoryAction","selectedRowData","submitHandler","changeHandler","categoriesTable","addButton","text","attr","e","datatable","node","config","$","editButton","extend","row","selected","categoriesRequests","DataTable","columns","title","dom","buttons","select","edit","rows","rowData","error","setTimeout","tabindex","aria-labelledby","aria-hidden","data-dismiss","aria-label","htmlFor","required","role","clients","client","newClient","Clients","cedula","phoneNumber","clientAction","optionChangeHandler","clientTable","customSelectRef","clientRequests","console","log","order","selectedOption","actionType","selectedClient","jsZip","window","JSZip","ResourceTable","recordsTable","modal","sourceURL","changeSourceURL","newSourceURL","ajax","url","load","$recordsTable","_this","asyncTable","initComplete","api","every","column","dataSrc","header","append","on","splittedDataSrc","split","parameter","forEach","charAt","toUpperCase","slice","trim","footerCallback","totalDollars","reduce","a","b","pageTotalDollars","footer","html","Intl","NumberFormat","currency","format","totalBs","pageTotalBs","messageTop","customize","win","find","css","querySelectorAll","input","display","exportOptions","stripHtml","modifier","setModalAction","setSelectedRowData","confirm","status","reload","catch","discountId","discount","serverSide","results","count","productId","grossTotalBs","grossTotalDollars","dolarReference","netIncomeDollars","profitPercent","netIncomeBs","d","start","xhr","code","paging","lengthMenu","pageLength","columnDefs","ordering","sorting","tr","closest","child","isShown","hide","removeClass","childFormat","show","addClass","addEventListener","children","focus","tabIndex","modalStructure","CustomSelect","options","searchHandler","roundToNiceNumber","inputValue","callback","item","label","loadOptions","defaultOptions","autoFocus","inputId","isMulti","isClearable","innerRef","Products","selectedCategories","productImageFile","success","modalAction","discountPercent","discountStartDate","discountEndDate","discountSubmitHandler","CustomSelectRef","productForm","closeButton","selectedOptions","files","categoriesID","alert","formData","FormData","reset","click","percent","startDate","endDate","meta","disc","step","min","Sales","childRowInfo","saleProducts","saleProduct","quantity","defaultContent","Suppliers","rif","inputChangeHandler","draw","Supplyings","supplier","supplierChangeHandler","productChangeHandler","supplierSelect","productSelect","supplyingForm","supplierId","Users","permissions","form","clickHandler","logout","removeItem","activeNavLink","href","data-toggle","data-target","aria-controls","aria-expanded","to","SalesControl","selectedProduct","addedProducts","subtotalDollars","subtotalBs","stockError","submittingSale","productsHandler","onChangeHandler","saleSubmitButton","sendSaleForm","quantityInput","productsTableDiv","productsTable","bodySize","getBoundingClientRect","tableSize","tableMaxHeight","top","maxHeight","ctrlKey","Number","Authorization","stock","parseFloat","productFormatted","priceBs","totalFormattedDollars","totalFormattedBs","productExistsInTable","findIndex","Object","assign","scrollTop","scrollHeight","newProducts","totalToSubtractDollars","totalToSubtractBs","currentTarget","disabled","scope","productid","Inventory","moment","Reports","resource","parameters","reportForm","resourceTable","dateRangeFromValue","dateRangeToValue","greaterThanDate","lowerThanDate","equalDate","previousParameters","Date","subtract","prop","salesColumns","supplyingsColumns","defaultChecked","debts","debt","newDebt","Debt","debtType","debtTotal","debtAction","debtTable","total","debtsRequests","clientId","cancelled","class","PrivateRoute","component","rest","pathname","from","location","Dashboard","formattedDolareReference","newDolarReference","fetchDolarReference","dolarReferenceSubmitHandler","closeEditDolarModalButton","path","initialState","activeCategoryId","rootReducer","combineReducers","reducers","store","createStore","App","exact","Boolean","hostname","match","ReactDOM","Fragment","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.5cf99958.chunk.js","sourcesContent":["module.exports = {\r\n    loadProducts: function (paginatedProducts) {\r\n        return { type: \"LOAD_PRODUCTS\", paginatedProducts }\r\n    },\r\n    setLoading: function (loading) {\r\n        return { type: \"LOADING\", loading }\r\n    },\r\n}","module.exports = {\r\n    loadCategories: function (categories) {\r\n        return { type: \"LOAD_CATEGORIES\", categories }\r\n    },\r\n    setActiveCategoryId: function (categoryId) {\r\n        return { type: \"SET_ACTIVE_CATEGORY_ID\", categoryId }\r\n    },\r\n    setActiveCategoryName: function (categoryName) {\r\n        return { type: \"SET_ACTIVE_CATEGORY_NAME\", categoryName }\r\n    }\r\n}","const BASE_URL = \"/api/products\";\r\n\r\nmodule.exports = {\r\n    fetchAll: async function () {\r\n        let response = await fetch(BASE_URL, {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        })\r\n\r\n        let products = await response.json();\r\n\r\n        return products;\r\n    },\r\n    fetchById: async function (id) {\r\n        let response = await fetch(BASE_URL + `?id=${id}`, {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        })\r\n\r\n        let products = response.json();\r\n\r\n        return products;\r\n    },\r\n    fetchByName: async function (name) {\r\n        let response = await fetch(BASE_URL + `?name=${name}`, {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        })\r\n\r\n        let products = response.json();\r\n\r\n        return products;\r\n    }\r\n\r\n}","module.exports = {\r\n    roundUpProductPrice(price) {\r\n        var val = 0;\r\n        if (price.toString().length == 4) {\r\n            val = Math.ceil(price / 100) * 100\r\n        }\r\n        else if (price.toString().length > 4) {\r\n            val = Math.ceil(price / 1000) * 1000\r\n        }\r\n\r\n        return val;\r\n    }\r\n}","import React, { Component } from \"react\";\r\n\r\nclass Suggestions extends Component {\r\n\r\n    render() {\r\n        if (this.props.noResults) {\r\n            return (\r\n                <ul className=\"list-group position-absolute w-100\" >\r\n                    <li className=\"list-group-item text-justify\">No se encontraron resultados</li>\r\n                </ul>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <ul className=\"list-group position-absolute w-100 suggestionsBox\" >\r\n                    {this.props.suggestions.map(suggestion => {\r\n                        if (this.props.onlyName) {\r\n                            return <div onClick={this.props.clickHandler} key={suggestion.id} productid={suggestion.id} className=\"text-justify\">\r\n                                <li className=\"list-group-item\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-1\">\r\n                                            <img style={{ maxWidth: \"35px\" }} src={suggestion.imagePath} alt=\"IMG\" />\r\n                                        </div>\r\n                                        <div className=\"col-6 float-left\">\r\n                                            <h5 className=\"font-weight-bold\" id=\"productName\">{suggestion.name}</h5>\r\n                                        </div>\r\n                                    </div>\r\n                                </li>\r\n                            </div>\r\n                        }\r\n                        else {\r\n                            return <li onClick={this.props.clickHandler} key={suggestion.id} className=\"list-group-item text-justify\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12 col-sm-6 col-md-12 col-lg-12 col-xl-6\">\r\n                                        <img className=\"\" style={{ maxWidth: \"35px\" }} src={suggestion.imagePath} alt=\"IMG\" />\r\n                                        <span id=\"productName font-weight-bold\">{suggestion.name}</span>\r\n                                    </div>\r\n                                    <div className=\"col-6 col-sm-4 col-md-6 col-lg-6 col-xl-4\">\r\n                                        <div className=\"input-group \">\r\n                                            <input className=\"form-control text-center\" style={{ minWidth: \"45px\", maxWidth: \"70px\" }} type=\"number\" defaultValue=\"1\" name=\"numberOfItems\" id=\"numberOfItems\" />\r\n                                            <input className=\"bg-dark text-light\" type=\"button\" value=\"Comprar\" />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-6 col-sm-2 col-md-6 col-lg-6 col-xl-2 \">\r\n                                        <span className=\"text-danger\">{`${suggestion.price} Bs.`}</span>\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n                        }\r\n                    })}\r\n                </ul>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Suggestions","import React, { Component } from \"react\";\r\nimport OutsideClickHandler from 'react-outside-click-handler';\r\nimport Suggestions from \"./Suggestions\";\r\nimport debounce from \"lodash.debounce\";\r\n\r\nclass SearchInput extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {\r\n            showSuggestions: false,\r\n            suggestions: [],\r\n            noResults: false\r\n        };\r\n\r\n        this.searchHandler = debounce(this.searchHandler, 500);\r\n        this.headerContainer = React.createRef();\r\n        this.onBlurHandler = this.onBlurHandler.bind(this);\r\n    }\r\n\r\n    searchHandler(event) {\r\n        if (event.target.value.length > 0) {\r\n            fetch(`/api/products?name=${event.target.value}&page=1&limit=10`)\r\n                .then(result => result.json())\r\n                .then(result => {\r\n                    if (result.data.length > 0) {\r\n                        this.setState({\r\n                            showSuggestions: true,\r\n                            suggestions: result.data,\r\n                            noResults: false\r\n                        });\r\n                    }\r\n                    else {\r\n                        this.setState({\r\n                            showSuggestions: true,\r\n                            noResults: true\r\n                        });\r\n                    }\r\n\r\n                });\r\n        }\r\n        else {\r\n            this.setState({\r\n                showSuggestions: false,\r\n                suggestions: []\r\n            })\r\n        }\r\n    }\r\n    onBlurHandler() {\r\n        this.setState({\r\n            showSuggestions: false\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={this.props.parentClassName}>\r\n                <input onChange={event => {\r\n                    event.persist();\r\n                    this.searchHandler(event);\r\n                }} className={this.props.className} type=\"text\" placeholder=\"Buscar Producto\" id=\"searchInput\" />\r\n                <div ref={this.suggestionBox} className=\"\">\r\n                    {this.state.showSuggestions &&\r\n                        <OutsideClickHandler\r\n                            onOutsideClick={this.onBlurHandler}><Suggestions suggestions={this.state.suggestions} noResults={this.state.noResults} clickHandler={this.props.clickHandler} onlyName={this.props.onlyName}></Suggestions>\r\n                        </OutsideClickHandler>}\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchInput;","import React, { Component } from \"react\";\r\nimport SearchInput from \"../globalComponents/SearchInput\";\r\n\r\nclass Header extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.headerContainer = React.createRef();\r\n        this.scrollHandler = this.scrollHandler.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener(\"scroll\", this.scrollHandler);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"scroll\", this.scrollHandler);\r\n    }\r\n\r\n    scrollHandler() {\r\n        if (window.scrollY > 100) {\r\n            this.headerContainer.current.parentElement.style.backgroundColor = \"#3c4055\";\r\n            this.headerContainer.current.parentElement.style.outlineStyle = \"solid\";\r\n            this.headerContainer.current.parentElement.style.outlineWidth = \"2px\";\r\n            //this.headerContainer.current.querySelector(\"#brand-title\").classList.replace(\"text-danger\", \"text-light\")\r\n        }\r\n        else {\r\n            this.headerContainer.current.parentElement.style.backgroundColor = \"white\";\r\n            this.headerContainer.current.parentElement.style.outlineStyle = \"none\";\r\n            //this.headerContainer.current.querySelector(\"#brand-title\").classList.replace(\"text-light\", \"text-danger\")\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div ref={this.headerContainer} className=\"row\">\r\n                <div className=\"col-12 col-lg-5 brand-image-container\">\r\n                    <div className=\"brand-image h-100\" />\r\n                </div>\r\n                <SearchInput parentClassName={\"col-10 col-lg-4 my-auto\"} className={\"form-control\"} />\r\n                <div className=\"col-1 d-flex\">\r\n                    <img className=\"align-items-middle mx-auto\" src=\"/icons/shopping-cart.svg\" alt=\"Shopping Cart\" />\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component } from \"react\";\r\n\r\nclass Navigation extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row mt-3 mt-lg-0\">\r\n                <div className=\"col-12\">\r\n                    <nav className=\"navbar navbar-expand-md navbar-dark bg-dark pl-0 pr-0\">\r\n                        <button className=\"navbar-toggler col-sm-12\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                            <span className=\"navbar-toggler-icon\"></span>\r\n                        </button>\r\n                        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                            <ul className=\"navbar-nav mr-auto container\">\r\n                                <li className=\"nav-item\">\r\n                                    <a className=\"nav-link text-light font-weight-bold\" href=\"#\">HOME</a>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <a className=\"nav-link text-light font-weight-bold\" href=\"#\">PRODUCTOS</a>\r\n                                </li>\r\n\r\n                                <li className=\"nav-item\">\r\n                                    <a className=\"nav-link text-light font-weight-bold\" href=\"#\">SERVICIOS</a>\r\n                                </li>\r\n\r\n                                <li className=\"nav-item\">\r\n                                    <a className=\"nav-link text-light font-weight-bold\" href=\"#\">DESCUENTOS</a>\r\n                                </li>\r\n\r\n                                <li className=\"nav-item\">\r\n                                    <a className=\"nav-link text-light font-weight-bold\" href=\"#\">PROMOCIONES</a>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navigation","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as productActions from \"../actions/productActions\";\r\nimport * as categoriesActions from \"../actions/categoriesActions\";\r\n\r\nclass ProductCategories extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.fetchProducts = this.fetchProducts.bind(this);\r\n        this.categoryHandler = this.categoryHandler.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        fetch(\"/api/categories\")\r\n            .then(categories => categories.json())\r\n            .then(categories => {\r\n                if (categories.data.length > 0) {\r\n                    this.props.dispatch(categoriesActions.loadCategories(categories.data))\r\n                    this.props.dispatch(categoriesActions.setActiveCategoryId(document.querySelector(\".categoryItem, active\").getAttribute(\"categoryId\")))\r\n                    this.props.dispatch(categoriesActions.setActiveCategoryName(document.querySelector(\".categoryItem, active\").innerText));\r\n                }\r\n            });\r\n\r\n    }\r\n\r\n    categoryHandler(event) {\r\n        event.preventDefault();\r\n        if (!event.target.className.includes(\"active\")) {\r\n            event.target.parentElement.querySelector(\".active\").classList.remove(\"active\");\r\n            event.target.classList.add(\"active\");\r\n            this.props.dispatch(categoriesActions.setActiveCategoryId(event.target.getAttribute(\"categoryid\")))\r\n            this.props.dispatch(categoriesActions.setActiveCategoryName(event.target.innerText))\r\n            this.fetchProducts(1, 16, event.target.getAttribute(\"categoryid\"))\r\n        }\r\n    }\r\n\r\n    fetchProducts(page, limit, categories) {\r\n        this.props.dispatch(productActions.setLoading(true));\r\n        fetch(`/api/products?page=${page}&limit=${limit}&categories=${categories}`)\r\n            .then(result => result.json())\r\n            .then(paginatedProducts => {\r\n                this.props.dispatch(productActions.loadProducts(paginatedProducts));\r\n                this.props.dispatch(productActions.setLoading(false));\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"col-xs-6 col-sm-12 col-md-12 p-0 mt-0 mt-md-5 productcategoriesContainer\">\r\n                <div className=\"card rounded-0\">\r\n                    <div className=\"card-header\">\r\n                        <h5 className=\"card-title text-danger font-weight-bold\">Categorias</h5>\r\n                    </div>\r\n                    <div className=\"card-body p-0\">\r\n                        <div className=\"list-group\">\r\n                            {\r\n                                this.props.categories ?\r\n                                    this.props.categories.map((category, index) => {\r\n                                        if (index === 0) {\r\n                                            return <li onClick={this.categoryHandler} categoryid={category.id} key={category.id} className=\"categoryItem list-group-item active btn\">{category.name}</li>\r\n                                        }\r\n                                        else {\r\n                                            return <li onClick={this.categoryHandler} categoryid={category.id} key={category.id} className=\"categoryItem list-group-item btn\">{category.name}</li>\r\n                                        }\r\n                                    })\r\n                                    :\r\n                                    <span>No hay categorias</span>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\nfunction mapStateToProps(state, ownProps) {\r\n    return {\r\n        categories: state.categories.data,\r\n        activeCategory: state.categories.activeCategory\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(ProductCategories);","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass CategoryTitle extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <h3 className=\"float-left text-danger mt-2\">{this.props.activeCategory}</h3>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n    return {\r\n        activeCategory: state.categories.activeCategoryName\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(CategoryTitle);","import React, { Component } from \"react\";\r\nimport ContentLoader from 'react-content-loader'\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../actions/productActions\";\r\nimport CategoryTitle from \"../components/CategoryTitle\";\r\n\r\nclass ProductList extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.observer = new IntersectionObserver(this.loadMoreProductsHandler.bind(this));\r\n        this.elementToObserve = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchProducts(1, 16);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.elementToObserve.current) {\r\n            this.observer.observe(this.elementToObserve.current)\r\n        }\r\n    }\r\n\r\n    fetchProducts(page, limit, categories = 1) {\r\n        this.props.dispatch(actions.setLoading(true));\r\n        fetch(`/api/products?page=${page}&limit=${limit}&categories=${categories}`)\r\n            .then(result => result.json())\r\n            .then(paginatedProducts => {\r\n                paginatedProducts.data = this.props.products.concat(paginatedProducts.data);\r\n                this.props.dispatch(actions.loadProducts(paginatedProducts));\r\n                this.props.dispatch(actions.setLoading(false));\r\n            });\r\n    }\r\n\r\n    loadMoreProductsHandler(entries) {\r\n        if (entries[0].isIntersecting) {\r\n            if (this.props.next) {\r\n                this.fetchProducts(this.props.next.page, this.props.next.limit, this.props.activeCategory)\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.props.products.length > 0) {\r\n            let products = this.props.products.map((product, index) => {\r\n                return (\r\n                    <div className=\"col-6 col-sm-6 col-md-4 col-lg-3 p-0 pr-2 pb-2\" key={index}>\r\n                        <div className=\"card\">\r\n                            <img className=\"card-img-top productImage\" src={product.imagePath} alt=\"Imagen del producto\" />\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title font-weight-bold overflow-hidden text-truncate text-dark\">{product.name}</h5>\r\n                                <h5 className=\"text-danger\">Bs. {product.price}</h5>\r\n                            </div>\r\n                            <div className=\"card-footer\">\r\n                                <div className=\"input-group d-flex justify-content-center\">\r\n                                    <input className=\"form-control text-center\" style={{ maxWidth: \"35%\" }} type=\"number\" defaultValue=\"1\" name=\"numberOfItems\" id=\"numberOfItems\" />\r\n                                    <input className=\"bg-dark text-light\" type=\"button\" value=\"Comprar\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            });\r\n\r\n            if (this.props.next) {\r\n                products.push((\r\n                    <div className=\"col-xs-12 col-sm-6 col-md-4 col-lg-3 p-0 pr-2 pb-2\" key=\"contentLoader\" ref={this.elementToObserve}>\r\n                        <ContentLoader\r\n                            speed={1}\r\n                            viewBox=\"0 0 200 400\"\r\n                            backgroundColor=\"#f3f3f3\"\r\n                            foregroundColor=\"#ecebeb\"\r\n                        >\r\n                            <rect x=\"0\" y=\"6\" rx=\"0\" ry=\"0\" width=\"239\" height=\"250\" />\r\n                            <rect x=\"0\" y=\"292\" rx=\"0\" ry=\"0\" width=\"239\" height=\"15\" />\r\n                            <rect x=\"59\" y=\"291\" rx=\"0\" ry=\"0\" width=\"2\" height=\"0\" />\r\n                            <rect x=\"0\" y=\"313\" rx=\"0\" ry=\"0\" width=\"239\" height=\"15\" />\r\n                            <rect x=\"0\" y=\"361\" rx=\"0\" ry=\"0\" width=\"239\" height=\"36\" />\r\n                        </ContentLoader >\r\n                    </div>\r\n                ))\r\n            }\r\n            products.unshift(<div className=\"col-12\">\r\n                <CategoryTitle />\r\n            </div>)\r\n            return products\r\n        }\r\n        else if (this.props.loading) {\r\n            return <p>Loading</p>\r\n        }\r\n        else {\r\n            return <p>No hay productos</p>\r\n        }\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n    return {\r\n        products: state.products.data,\r\n        next: state.products.next,\r\n        previous: state.products.previous,\r\n        loading: state.products.loading,\r\n        activeCategory: state.categories.activeCategory\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ProductList);","import React, { Component } from \"react\";\r\n\r\nclass BackToTopButton extends Component {\r\n    constructor() {\r\n        super()\r\n        this.backToTopButton = React.createRef();\r\n\r\n        this.state = {\r\n            show: false\r\n        }\r\n\r\n        this.scrollHandler = this.scrollHandler.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener(\"scroll\", this.scrollHandler)\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener('scroll', this.scrollHandler);\r\n    }\r\n    scrollHandler() {\r\n        if (window.scrollY > 100) {\r\n            this.setState({\r\n                show: true\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                show: false\r\n            });\r\n        }\r\n    }\r\n\r\n    clickHandler() {\r\n        window.scrollTo(0, 0);\r\n    }\r\n    render() {\r\n        return this.state.show && <button ref={this.backToTopButton} onClick={this.clickHandler} id=\"back-to-top\" className=\"btn btn-secondary btn-lg back-to-top\">Back to Top</button>\r\n    }\r\n}\r\n\r\nexport default BackToTopButton","async function isAuthenticated() {\r\n    let token = localStorage.getItem(\"jwt\");\r\n    if (!token) return false;\r\n    return fetch(`/sessions/isAuthenticated?token=${token}`)\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            return res.auth;\r\n        });\r\n}\r\n\r\nexport default isAuthenticated","import React, { Component } from \"react\";\r\nimport isAuthenticated from \"../requests/isAuthenticated\"\r\nclass Login extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.onSubmitHandler = this.onSubmitHandler.bind(this);\r\n        this.inputHandler = this.inputHandler.bind(this);\r\n\r\n        this.state = {\r\n            email: null,\r\n            password: null,\r\n            logginError: null\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        isAuthenticated().then(authenticated => {\r\n            if (authenticated) {\r\n                this.props.history.push(\"/\")\r\n            }\r\n        })\r\n    }\r\n    onSubmitHandler(event) {\r\n        event.preventDefault();\r\n        this.setState({\r\n            logginError: null\r\n        })\r\n        fetch(\"/sessions\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                email: this.state.email,\r\n                password: this.state.password\r\n            })\r\n        }).then(result => result.json())\r\n            .then(result => {\r\n                if (result.err) {\r\n                    this.setState({\r\n                        logginError: result.err\r\n                    })\r\n                }\r\n                else {\r\n                    localStorage.setItem(\"jwt\", result.token);\r\n                    this.props.history.push(\"/\");\r\n                }\r\n            });\r\n    }\r\n\r\n    inputHandler(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row h-100\">\r\n                    <div className=\"col-10 col-md-5 my-auto mx-auto\">\r\n                        <form onSubmit={this.onSubmitHandler} className=\"col-12\" action=\"/sessions\" method=\"POST\">\r\n                            <div className=\"form-group\">\r\n                                <input onChange={this.inputHandler} type=\"text\" className=\"form-control\" name=\"email\" id=\"email\" placeholder=\"Email\" />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input onChange={this.inputHandler} type=\"password\" className=\"form-control\" name=\"password\" id=\"password\" placeholder=\"Password\" />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <button className=\"btn btn-primary\" type=\"submit\">Enviar</button>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <p className=\"text-danger\">{this.state.logginError}</p>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Login;","const BASE_URL = \"/api/categories\";\r\n\r\nconst functions = {\r\n    fetchAll: async function () {\r\n        let categories = await fetch(BASE_URL, {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        })\r\n\r\n        let response = await categories.json();\r\n\r\n        return response;\r\n    },\r\n    fetchById: async function (id) {\r\n        let category = await fetch(BASE_URL + `?id=${id}`, {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        })\r\n\r\n        let response = await category.json();\r\n\r\n        return response;\r\n    },\r\n    fetchByName: async function (name) {\r\n        let categories = await fetch(BASE_URL + `?name=${name}`, {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        })\r\n\r\n        let response = await categories.json();\r\n\r\n        return response;\r\n    },\r\n    create: async function (category) {\r\n        let newCategory = await fetch(BASE_URL, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(category)\r\n        })\r\n\r\n        let response = await newCategory.json();\r\n\r\n        return response;\r\n    },\r\n    update: async function (category) {\r\n        let newCategory = await fetch(BASE_URL + `/${category.id}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify()\r\n        })\r\n\r\n        let response = await newCategory.json();\r\n\r\n        return response;\r\n    }\r\n}\r\n\r\nexport default functions","import React, { Component } from \"react\";\r\nimport categoriesRequests from \"../requests/categories\";\r\n\r\nimport $ from \"jquery\";\r\nrequire(\"datatables.net\")\r\nclass Categories extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            fetchMessage: null,\r\n            submitMessage: null,\r\n            submitMessageType: null,\r\n            submitLoading: false,\r\n            categoryName: null,\r\n            categoryAction: null,\r\n            selectedRowData: null\r\n        }\r\n        this.submitHandler = this.submitHandler.bind(this);\r\n        this.changeHandler = this.changeHandler.bind(this);\r\n\r\n        this.categoriesTable = React.createRef();\r\n\r\n        this.addButton = {\r\n            text: 'Add',\r\n            name: 'add',\r\n            className: \"btn btn-success\",\r\n            attr: {\r\n                \"data-toggle\": \"modal\",\r\n                \"data-target\": \"#categoryModal\"\r\n            },\r\n            action: (e, datatable, node, config) => {\r\n                $(\".modal-title\").text(\"Add new category\");\r\n                $(\"#categoryName\").val(\"\");\r\n                this.setState({\r\n                    categoryAction: \"Add\"\r\n                })\r\n            }\r\n        }\r\n\r\n        this.editButton = {\r\n            text: 'Edit',\r\n            name: 'edit',\r\n            className: \"btn btn-secondary\",\r\n            extend: \"selected\",\r\n            attr: {\r\n                \"data-toggle\": \"modal\",\r\n                \"data-target\": \"#categoryModal\"\r\n            },\r\n            action: (e, datatable, node, config) => {\r\n                let selectedRowData = datatable.row({ selected: true }).data();\r\n                $(\".modal-title\").text(\"Edit category\");\r\n                $(\"#categoryName\").val(selectedRowData.name);\r\n                this.setState({\r\n                    categoryAction: \"Edit\",\r\n                    selectedRowData\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let response = await categoriesRequests.fetchAll();\r\n        if (response.data) {\r\n            $(this.categoriesTable.current).DataTable({\r\n                data: response.data,\r\n                columns: [\r\n                    { title: \"ID\", data: \"id\" },\r\n                    { title: \"Nombre\", data: \"name\" },\r\n                    { title: \"Fecha creación\", data: \"createdAt\" }\r\n                ],\r\n                dom: \"Blftip\",\r\n                buttons: [this.addButton, this.editButton],\r\n                select: \"single\",\r\n\r\n            })\r\n        }\r\n        else { //error\r\n            this.setState({\r\n                fetchMessage: response.toString()\r\n            })\r\n        }\r\n    }\r\n\r\n    changeHandler(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    submitHandler(event) {\r\n        event.preventDefault();\r\n\r\n        var response = null;\r\n\r\n        this.setState({\r\n            submitLoading: true\r\n        }, async () => {\r\n            if (this.state.categoryAction == \"Add\") {\r\n                response = await categoriesRequests.create({\r\n                    name: this.state.categoryName\r\n                });\r\n\r\n\r\n            }\r\n            else if (this.state.categoryAction == \"Edit\") {\r\n                response = await categoriesRequests.edit({\r\n                    id: this.state.selectedRowData.id,\r\n                    name: this.state.categoryName\r\n                });\r\n\r\n\r\n                let rowData = $(this.categoriesTable.current).DataTable().rows().data();\r\n                rowData.map((row, index) => {\r\n                    if (row.id == this.state.selectedRowData.id) {\r\n                        let row = $(this.categoriesTable.current).DataTable().row(index);\r\n                        let rowData = row.data();\r\n                        row.data({\r\n                            ...rowData,\r\n                            name: this.state.categoryName\r\n                        })\r\n                    }\r\n                })\r\n\r\n            }\r\n\r\n            if (response.error) {\r\n                this.setState({\r\n                    submitMessage: response.error,\r\n                    submitMessageType: \"Error\",\r\n                    submitLoading: false\r\n                })\r\n            }\r\n            else {\r\n                this.setState({\r\n                    submitMessage: \"Se ha registrado con éxito\",\r\n                    submitMessageType: \"Success\",\r\n                    submitLoading: false\r\n                })\r\n                setTimeout(() => {\r\n                    this.setState({\r\n                        submitMessage: null,\r\n                        submitMessageType: null\r\n                    })\r\n                }, 3000);\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.fetchMessage && <span className=\"text-danger\">{this.state.fetchMessage}</span>}\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1 className=\"text-danger float-left\">Categorías</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-3\">\r\n                    <div className=\"col-md-12\">\r\n                        <table ref={this.categoriesTable} id=\"categoriesTable\" name=\"categoriesTable\" className=\"table table-bordered\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal fade\" id=\"categoryModal\" tabindex=\"-1\" aria-labelledby=\"categoryModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog modal-dialog-centered\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"categoryModalLabel\">Add new category</h5>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                    <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n                            <form onSubmit={this.submitHandler}>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"name\">Category Name: </label>\r\n                                        <input onChange={this.changeHandler} className=\"form-control\" type=\"text\" name=\"categoryName\" id=\"categoryName\" required />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Cerrar</button>\r\n                                    <button type=\"submit\" className=\"btn btn-primary\">\r\n                                        {this.state.submitLoading && <span className=\"spinner-border spinner-border-sm mr-2\" role=\"status\" aria-hidden=\"true\" />}\r\n                                        Enviar</button>\r\n                                </div>\r\n                                {this.state.submitMessage && <span className={(this.state.submitMessageType == \"Error\") ? \"text-danger\" : \"text-success\"}>{this.state.submitMessage}</span>}\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\nexport default Categories;","const BASE_URL = \"/api/clients\";\r\n\r\nconst functions = {\r\n    fetchAll: async function () {\r\n        let clients = await fetch(BASE_URL, {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        })\r\n\r\n        let response = await clients.json();\r\n\r\n        return response;\r\n    },\r\n    fetchById: async function (id) {\r\n        let client = await fetch(BASE_URL + `?id=${id}`, {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        })\r\n\r\n        let response = await client.json();\r\n\r\n        return response;\r\n    },\r\n    fetchByName: async function (name) {\r\n        let clients = await fetch(BASE_URL + `?name=${name}`, {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        })\r\n\r\n        let response = await clients.json();\r\n\r\n        return response;\r\n    },\r\n    create: async function (client) {\r\n        let newClient = await fetch(BASE_URL, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(client)\r\n        })\r\n\r\n        let response = await newClient.json();\r\n\r\n        return response;\r\n    },\r\n    update: async function (client) {\r\n        let response = await fetch(BASE_URL + `/${client.id}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(client)\r\n        })\r\n\r\n        let clients = await response.json();\r\n\r\n        return clients;\r\n    }\r\n}\r\n\r\nexport default functions","import React, { Component } from \"react\";\r\nimport clientRequests from \"../requests/clients\";\r\nimport $ from \"jquery\";\r\n\r\nrequire(\"datatables.net\")\r\nclass Clients extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            fetchMessage: null,\r\n            submitMessage: null,\r\n            submitMessageType: null,\r\n            submitLoading: false,\r\n            name: null,\r\n            cedula: null,\r\n            phoneNumber: null,\r\n            selectedRowData: null,\r\n            clientAction: null\r\n\r\n        }\r\n        this.submitHandler = this.submitHandler.bind(this);\r\n        this.changeHandler = this.changeHandler.bind(this);\r\n        this.optionChangeHandler = this.optionChangeHandler.bind(this);\r\n\r\n        this.clientTable = React.createRef();\r\n        this.customSelectRef = React.createRef();\r\n\r\n        this.addButton = {\r\n            text: 'Add',\r\n            name: 'add',\r\n            className: \"btn btn-success\",\r\n            attr: {\r\n                \"data-toggle\": \"modal\",\r\n                \"data-target\": \"#clientModal\"\r\n            },\r\n            action: (e, datatable, node, config) => {\r\n                $(\".modal-title\").text(\"Add new client\");\r\n                $(\"#name\").val(\"\");\r\n                $(\"#cedula\").val(\"\");\r\n                $(\"#phoneNumber\").val(\"\");\r\n                this.setState({\r\n                    clientAction: \"Add\"\r\n                })\r\n            }\r\n        }\r\n\r\n        this.editButton = {\r\n            text: 'Edit',\r\n            name: 'edit',\r\n            className: \"btn btn-secondary\",\r\n            extend: \"selected\",\r\n            attr: {\r\n                \"data-toggle\": \"modal\",\r\n                \"data-target\": \"#clientModal\"\r\n            },\r\n            action: (e, datatable, node, config) => {\r\n                let selectedRowData = datatable.row({ selected: true }).data();\r\n                $(\".modal-title\").text(\"Edit client\");\r\n                $(\"#name\").val(selectedRowData.name);\r\n                $(\"#cedula\").val(selectedRowData.cedula);\r\n                $(\"#phoneNumber\").val(selectedRowData.phoneNumber);\r\n                this.setState({\r\n                    clientAction: \"Edit\",\r\n                    selectedRowData,\r\n                    name: selectedRowData.name,\r\n                    cedula: selectedRowData.cedula,\r\n                    phoneNumber: selectedRowData.phoneNumber\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let response = await clientRequests.fetchAll();\r\n        if (response.data) {\r\n            console.log(response.data);\r\n            $(this.clientTable.current).DataTable({\r\n                data: response.data,\r\n                columns: [\r\n                    { title: \"ID\", data: \"id\" },\r\n                    { title: \"Nombre\", data: \"name\" },\r\n                    { title: \"Cédula\", data: \"cedula\" },\r\n                    { title: \"Teléfono\", data: \"phoneNumber\" },\r\n                    { title: \"Fecha creación\", data: \"createdAt\" }\r\n                ],\r\n                dom: \"Blftip\",\r\n                buttons: [this.addButton, this.editButton],\r\n                select: \"single\",\r\n                order: [0, \"DESC\"]\r\n            })\r\n        }\r\n        else { //error\r\n            this.setState({\r\n                fetchMessage: response.toString()\r\n            })\r\n        }\r\n    }\r\n\r\n    changeHandler(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    optionChangeHandler(selectedOption, actionType) {\r\n        this.setState({\r\n            selectedClient: selectedOption\r\n        })\r\n    }\r\n\r\n    submitHandler(event) {\r\n        event.preventDefault();\r\n\r\n        var response = null;\r\n\r\n        this.setState({\r\n            submitLoading: true\r\n        }, async () => {\r\n            if (this.state.clientAction == \"Add\") {\r\n                response = await clientRequests.create({\r\n                    name: this.state.name,\r\n                    cedula: this.state.cedula,\r\n                    phoneNumber: this.state.phoneNumber\r\n                });\r\n            }\r\n            else if (this.state.clientAction == \"Edit\") {\r\n                console.log(this.state);\r\n                response = await clientRequests.update({\r\n                    id: this.state.selectedRowData.id,\r\n                    name: this.state.name,\r\n                    cedula: this.state.cedula,\r\n                    phoneNumber: this.state.phoneNumber\r\n                });\r\n                let rowData = $(this.clientTable.current).DataTable().rows().data();\r\n                rowData.map((row, index) => {\r\n                    if (row.id == this.state.selectedRowData.id) {\r\n                        let row = $(this.clientTable.current).DataTable().row(index);\r\n                        let rowData = row.data();\r\n                        row.data({\r\n                            ...rowData,\r\n                            name: this.state.name,\r\n                            cedula: this.state.cedula,\r\n                            phoneNumber: this.state.phoneNumber\r\n                        })\r\n                    }\r\n                })\r\n\r\n            }\r\n\r\n            if (response && response.error) {\r\n                this.setState({\r\n                    submitMessage: JSON.stringify(response.error),\r\n                    submitMessageType: \"Error\",\r\n                    submitLoading: false\r\n                })\r\n            }\r\n            else {\r\n                this.setState({\r\n                    submitMessage: \"Se ha registrado con éxito\",\r\n                    submitMessageType: \"Success\",\r\n                    submitLoading: false\r\n                })\r\n                setTimeout(() => {\r\n                    this.setState({\r\n                        submitMessage: null,\r\n                        submitMessageType: null\r\n                    })\r\n                }, 3000);\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.fetchMessage && <span className=\"text-danger\">{this.state.fetchMessage}</span>}\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1 className=\"text-danger float-left\">Clientes</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-3\">\r\n                    <div className=\"col-md-12\">\r\n                        <table ref={this.clientTable} id=\"clientTable\" name=\"clientTable\" className=\"table table-bordered\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal fade\" id=\"clientModal\" tabindex=\"-1\" aria-labelledby=\"clientModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog modal-dialog-centered\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"clientModalLabel\">Add new client</h5>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                    <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n                            <form onSubmit={this.submitHandler}>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>Nombre: </label>\r\n                                        <input onChange={this.changeHandler} type=\"text\" className=\"form-control\" name=\"name\" id=\"name\" required />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Cédula: </label>\r\n                                        <input onChange={this.changeHandler} type=\"text\" className=\"form-control\" name=\"cedula\" id=\"cedula\" required />\r\n                                    </div>\r\n                                    <label htmlFor=\"debtTotal\">Teléfono: </label>\r\n                                    <input onChange={this.changeHandler} type=\"text\" className=\"form-control\" name=\"phoneNumber\" id=\"phoneNumber\" />\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Cerrar</button>\r\n                                    <button type=\"submit\" className=\"btn btn-primary\">\r\n                                        {this.state.submitLoading && <span className=\"spinner-border spinner-border-sm mr-2\" role=\"status\" aria-hidden=\"true\" />}\r\n                                        Enviar</button>\r\n                                </div>\r\n                                {this.state.submitMessage && <span className={(this.state.submitMessageType == \"Error\") ? \"text-danger\" : \"text-success\"}>{this.state.submitMessage}</span>}\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\nexport default Clients;","import React, { Component } from \"react\";\r\nimport debounce from \"lodash.debounce\";\r\n\r\n\r\nconst $ = require('jquery');\r\nconst DataTable = require('datatables.net');\r\nconst jsZip = require('jszip');\r\nrequire('pdfmake');\r\nrequire('datatables.net-buttons-dt');\r\nrequire('datatables.net-buttons/js/buttons.html5.js');\r\nrequire('datatables.net-buttons/js/buttons.print.js');\r\nrequire('datatables.net-buttons/js/buttons.colVis.js');\r\nrequire('datatables.net-select-dt');\r\nwindow.JSZip = jsZip;\r\n\r\nclass ResourceTable extends Component {\r\n\r\n    constructor(props) {\r\n        super();\r\n\r\n        this.recordsTable = React.createRef();\r\n        this.modal = React.createRef();\r\n\r\n        this.state = {\r\n            selectedRowData: null,\r\n            sourceURL: props.sourceURL\r\n        }\r\n\r\n    }\r\n\r\n    changeSourceURL(newSourceURL) {\r\n        let recordsTable = this.recordsTable.current;\r\n        let $recordsTable = $(recordsTable);\r\n\r\n        $recordsTable.DataTable().ajax.url(newSourceURL).load();\r\n    }\r\n\r\n    componentDidMount() {\r\n        let recordsTable = this.recordsTable.current;\r\n        let $recordsTable = $(recordsTable);\r\n        var _this = this;\r\n        if (this.props.asyncTable) {\r\n            $recordsTable = $recordsTable.DataTable({\r\n                initComplete: function () {\r\n                    this.api().columns().every(function () {\r\n                        var column = this;\r\n                        if (column.dataSrc() == \"createdAt\" || column.dataSrc() == \"updatedAt\") {\r\n                            $(this.header()).append(\"<br><input class='p-0 m-0 h-100' type='date' />\");\r\n                        }\r\n                        else {\r\n                            $(this.header()).append(\"<br><input class='p-0 m-0 h-100' type='text' placeholder='Filtrar'/>\");\r\n                        }\r\n                        $('input', this.header()).on(\"keyup change\", function () {\r\n                            let splittedDataSrc = column.dataSrc().split(\".\");\r\n                            let parameter = \"\";\r\n                            splittedDataSrc.forEach((split, index) => {\r\n                                if (index == 0) {\r\n                                    parameter = splittedDataSrc[0];\r\n                                }\r\n                                else {\r\n                                    parameter += splittedDataSrc[index].charAt(0).toUpperCase() + splittedDataSrc[index].slice(1);\r\n                                }\r\n                            });\r\n                            if (_this.props.sourceURL.includes(\"?\")) {\r\n                                $recordsTable.ajax.url(`${_this.props.sourceURL}&${parameter}=${this.value.trim()}`).load();\r\n                            }\r\n                            else {\r\n                                $recordsTable.ajax.url(`${_this.props.sourceURL}?${parameter}=${this.value.trim()}`).load();\r\n\r\n                            }\r\n                        });\r\n\r\n                    });\r\n                },\r\n                footerCallback: function (row, data) {\r\n                    var api = this.api();\r\n                    api.columns().every(function () {\r\n                        var column = this;\r\n                        if (column.dataSrc() == \"grossTotalDollars\") {\r\n                            let totalDollars = api\r\n                                .column(3)\r\n                                .data()\r\n                                .reduce(function (a, b) {\r\n                                    return a + b\r\n                                }, 0);\r\n                            let pageTotalDollars = api\r\n                                .column(3, { page: 'current' })\r\n                                .data()\r\n                                .reduce(function (a, b) {\r\n                                    return a + b\r\n                                }, 0);\r\n\r\n                            if (totalDollars) {\r\n                                $(column.footer()).html(\r\n                                    `${Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(pageTotalDollars)} <br>\r\n                                            <span class=\"text-danger\">(${Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(totalDollars)} Total)</span>`\r\n                                );\r\n                            }\r\n                            else {\r\n                                $(column.footer()).html(\"\");\r\n                            }\r\n\r\n                        }\r\n                        if (column.dataSrc() == \"grossTotalBs\") {\r\n                            let totalBs = api\r\n                                .column(4)\r\n                                .data()\r\n                                .reduce(function (a, b) {\r\n                                    return a + b\r\n                                }, 0);\r\n\r\n                            let pageTotalBs = api\r\n                                .column(4, { page: 'current' })\r\n                                .data()\r\n                                .reduce(function (a, b) {\r\n                                    return a + b\r\n                                }, 0);\r\n                            if (pageTotalBs) {\r\n                                $(column.footer()).html(\r\n                                    `${Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(pageTotalBs)} <br>\r\n                                        <span class=\"text-danger\">(${Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(totalBs)} Total)</span>`\r\n                                );\r\n                            } else {\r\n                                $(column.footer()).html(\"\");\r\n                            }\r\n                        }\r\n                        if (column.dataSrc() == \"netIncomeDollars\") {\r\n                            let totalDollars = api\r\n                                .column(5)\r\n                                .data()\r\n                                .reduce(function (a, b) {\r\n                                    return a + b\r\n                                }, 0);\r\n\r\n                            let pageTotalDollars = api\r\n                                .column(5, { page: 'current' })\r\n                                .data()\r\n                                .reduce(function (a, b) {\r\n                                    return a + b\r\n                                }, 0);\r\n                            if (pageTotalDollars) {\r\n                                $(column.footer()).html(\r\n                                    `${Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(pageTotalDollars)} <br>\r\n                                        <span class=\"text-danger\">(${Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(totalDollars)} Total)</span>`\r\n                                );\r\n                            } else {\r\n                                $(column.footer()).html(\"\");\r\n                            }\r\n                        }\r\n                        if (column.dataSrc() == \"netIncomeBs\") {\r\n                            let totalBs = api\r\n                                .column(6)\r\n                                .data()\r\n                                .reduce(function (a, b) {\r\n                                    return a + b\r\n                                }, 0);\r\n\r\n                            let pageTotalBs = api\r\n                                .column(6, { page: 'current' })\r\n                                .data()\r\n                                .reduce(function (a, b) {\r\n                                    return a + b\r\n                                }, 0);\r\n                            if (pageTotalBs) {\r\n                                $(column.footer()).html(\r\n                                    `${Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(pageTotalBs)} <br>\r\n                                        <span class=\"text-danger\">(${Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(totalBs)} Total)</span>`\r\n                                );\r\n                            } else {\r\n                                $(column.footer()).html(\"\");\r\n                            }\r\n                        }\r\n                    })\r\n                },\r\n                dom: 'Brltip',\r\n                select: \"single\",\r\n                buttons: [{\r\n                    text: \"Imprimir\",\r\n                    name: \"imprimir\",\r\n                    className: \"btn btn-secondary float-right\",\r\n                    extend: \"print\",\r\n                    messageTop: \"Lista de precios\",\r\n                    footer: true,\r\n                    title: (_this.props.sourceURL.includes(\"productss\")) ? \"Lista de precios\" : \"\",\r\n                    customize: function (win) {\r\n                        $(win.document.body).find('#messageTop').css('text-align', 'center');\r\n                        win.document.body.querySelector(\"table\").querySelector(\"thead\").querySelectorAll(\"input\").forEach(input => {\r\n                            input.style.display = \"none\"\r\n                        })\r\n                    },\r\n                    exportOptions: {\r\n                        stripHtml: false,\r\n                        modifier: {\r\n                            page: 'all'\r\n                        },\r\n                        columns: (_this.props.sourceURL.includes(\"products\")) ? [1, 3] : \":visible\"\r\n                    }\r\n                }].concat(this.props.actions.map(action => {\r\n                    if (action == \"add\") {\r\n                        return {\r\n                            text: 'Add',\r\n                            name: 'add',\r\n                            className: \"btn btn-success\",\r\n                            attr: {\r\n                                \"data-toggle\": \"modal\",\r\n                                \"data-target\": \"#exampleModal\"\r\n                            },\r\n                            action: function () {\r\n                                _this.props.setModalAction(\"add\")\r\n                            }\r\n                        }\r\n                    }\r\n                    if (action == \"edit\") {\r\n                        return {\r\n                            text: 'Edit',\r\n                            name: 'edit',\r\n                            className: \"btn btn-secondary\",\r\n                            extend: \"selected\",\r\n                            attr: {\r\n                                \"data-toggle\": \"modal\",\r\n                                \"data-target\": \"#exampleModal\"\r\n                            },\r\n                            action: (e, datatable, node, config) => {\r\n                                var selectedRowData = datatable.row({ selected: true }).data();\r\n                                _this.props.setSelectedRowData(selectedRowData);\r\n                                _this.props.setModalAction(\"edit\");\r\n                            }\r\n                        };\r\n                    }\r\n                    if (action == \"delete\") {\r\n                        return {\r\n                            text: 'Delete',\r\n                            name: 'delete',\r\n                            className: \"btn btn-danger\",\r\n                            extend: \"selected\",\r\n                            action: function (e, datatable, node, config) {\r\n                                var selectedRowData = datatable.row({ selected: true }).data();\r\n                                var r = window.confirm(\"¿Está seguro que desea eliminar este registro?\");\r\n                                if (r == true) {\r\n                                    fetch(`${_this.props.sourceURL}/${selectedRowData.id}`, {\r\n                                        method: \"DELETE\",\r\n                                        headers: {\r\n                                            \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n                                        }\r\n                                    })\r\n                                        .then(res => {\r\n                                            if (res.status == 204) {\r\n                                                datatable.ajax.reload();\r\n                                            }\r\n                                            else {\r\n                                                res.json().then(error => {\r\n                                                    _this.setState({\r\n                                                        error\r\n                                                    })\r\n                                                })\r\n                                            }\r\n                                        })\r\n                                        .catch(error => {\r\n                                            _this.setState({\r\n                                                error\r\n                                            })\r\n                                        })\r\n                                }\r\n\r\n                            }\r\n                        }\r\n                    }\r\n                    if (action == \"date-range\") {\r\n                        return {\r\n                            text: 'Reload',\r\n                            name: 'reload',\r\n                            className: \"btn btn-primary\",\r\n                            action: function (e, datatable, node, config) {\r\n                                datatable.ajax.url(_this.state.sourceURL).load();\r\n                            }\r\n                        }\r\n                    }\r\n                    if (action == \"discount\") {\r\n                        return [\r\n                            {\r\n                                text: 'Apply Discount',\r\n                                name: 'discountButton',\r\n                                className: \"btn btn-primary\",\r\n                                attr: {\r\n                                    \"data-toggle\": \"modal\",\r\n                                    \"data-target\": \"#discountModal\"\r\n                                },\r\n                                extend: \"selected\",\r\n                                action: function (e, datatable, node, config) {\r\n                                    var selectedRowData = datatable.row({ selected: true }).data();\r\n                                    _this.props.setSelectedRowData(selectedRowData);\r\n                                    _this.props.setModalAction(\"applyDiscount\")\r\n\r\n                                }\r\n\r\n                            },\r\n                            {\r\n                                text: 'Cancel Discount',\r\n                                name: 'cancelDiscountButton',\r\n                                className: \"btn btn-danger\",\r\n                                extend: \"selected\",\r\n                                action: function (e, datatable, node, config) {\r\n                                    let response = window.confirm(\"¿Seguro que desea eliminar el descuento?\");\r\n                                    if (response == true) {\r\n                                        let selectedRowData = datatable.row({ selected: true }).data();\r\n                                        let discountId = selectedRowData.discount[0].id;\r\n                                        fetch(`/api/discounts/${discountId}`, {\r\n                                            headers: {\r\n                                                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n                                            },\r\n                                            method: \"DELETE\"\r\n                                        })\r\n                                            .then(res => {\r\n                                                if (res.status == 204) {\r\n                                                    datatable.ajax.reload();\r\n                                                }\r\n                                            })\r\n                                    }\r\n                                    else {\r\n\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                        ]\r\n                    }\r\n\r\n                })),\r\n                serverSide: true,\r\n                ajax: {\r\n                    url: this.state.sourceURL,\r\n                    dataSrc: function (results) {\r\n                        if (typeof results.count == \"object\") {\r\n                            results.data.forEach((row, index) => {\r\n                                if (row.productId == results.count[index].id) {\r\n                                    row.count = results.count[index].count\r\n                                }\r\n                            })\r\n                        }\r\n\r\n                        if (_this.props.sourceURL.includes(\"/api/sales\") && _this.props.sourceURL.includes(\"group=true\")) {\r\n                            results.data.forEach((row, index) => {\r\n                                row.product = row.product[0];\r\n                                //row.transactions = results.count.reverse()[index].count;\r\n                                row.grossTotalBs = row.grossTotalDollars * row.dolarReference;\r\n\r\n                                row.netIncomeDollars = row.grossTotalDollars * (row.product.profitPercent / 100);\r\n                                row.netIncomeBs = row.netIncomeDollars * row.dolarReference;\r\n                            })\r\n                        }\r\n                        else if (_this.props.sourceURL.includes(\"/api/supplyings\") && _this.props.sourceURL.includes(\"group=true\")) {\r\n                            results.data.forEach((row, index) => {\r\n                                //row.transactions = results.count.reverse()[index].count;\r\n                                row.grossTotalBs = row.grossTotalDollars * row.dolarReference;\r\n                            })\r\n                        }\r\n                        return results.data;\r\n                    },\r\n                    headers: { 'Authorization': `Bearer ${localStorage.getItem(\"jwt\")}` },\r\n                    data: function (d) {\r\n                        if (d.length != -1) {\r\n                            d.page = d.start / d.length + 1;\r\n                            d.limit = d.length;\r\n                        }\r\n                        else {\r\n                            d.page = 1;\r\n                            d.limit = 0;\r\n                        }\r\n\r\n                    },\r\n                    error: function (xhr, error, code) {\r\n                        //alert(code)\r\n                    }\r\n                },\r\n                paging: true,\r\n                lengthMenu: [[10, 25, 50, 100, 1000000000000000], [10, 25, 50, 100, \"All\"]],\r\n                pageLength: (this.props.sourceURL.includes(\"group=true\")) ? 1000000000000000 : 10,\r\n                columns: this.props.columns,\r\n                columnDefs: (this.props.sourceURL.includes(\"products\")) ? [\r\n                    { width: \"30%\", \"targets\": 1 }\r\n                ] : null,\r\n                ordering: false,\r\n                order: _this.props.sorting || [[0, \"desc\"]]\r\n            });\r\n\r\n            if (this.props.actions.includes(\"date-range\")) {\r\n                $(\".dt-buttons\").append(`<div class=\"d-flex justify-content-end\">\r\n                    <label class=\"mr-2\" for=\"dateFrom\">From:</label>\r\n                    <input type=\"date\" id=\"dateFrom\" name=\"dateFrom\">\r\n                    <label class=\"mr-2 ml-2\" for=\"dateTo\">To:</label>\r\n                    <input type=\"date\" id=\"dateTo\" name=\"dateTo\">\r\n                    </div>`)\r\n\r\n                $(\".dt-buttons input[type=date]\").on(\"change\", function () {\r\n                    $recordsTable.ajax.url(`${_this.state.sourceURL}?from=${$(\"#dateFrom\").val()}&to=${$(\"#dateTo\").val()}`).load();\r\n                })\r\n            }\r\n\r\n            $('#resourceTable tbody').on('click', 'td.details-control', function () {\r\n                var tr = $(this).closest('tr');\r\n                var row = $recordsTable.row(tr);\r\n\r\n                if (row.child.isShown()) {\r\n                    // This row is already open - close it\r\n                    row.child.hide();\r\n                    tr.removeClass('shown');\r\n                }\r\n                else {\r\n                    // Open this row\r\n                    row.child(_this.props.childFormat(row.data())).show();\r\n                    tr.addClass('shown');\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            $recordsTable = $recordsTable.DataTable({\r\n                dom: \"\",\r\n                data: this.props.data,\r\n                columns: this.props.columns,\r\n\r\n            });\r\n        }\r\n\r\n\r\n\r\n        this.modal.current.addEventListener(\"focus\", () => {\r\n            this.modal.current.querySelector(\".form-group\").children[0].focus();\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"bg-light table-responsive\">\r\n                <table id=\"resourceTable\" className=\"table table-bordered\" ref={this.recordsTable} >\r\n                    <thead></thead>\r\n                    <tbody></tbody>\r\n                    <tfoot>\r\n                        <tr>\r\n                            {this.props.columns.map((column, index) => {\r\n                                return <td key={index}></td>\r\n                            })}\r\n                        </tr>\r\n                    </tfoot>\r\n                </table>\r\n                {this.state.error && <span className=\"text-danger\">{this.state.error}</span>}\r\n                <div ref={this.modal} className=\"modal\" id=\"exampleModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n                        <div className=\"modal-content\">\r\n                            {this.props.modalStructure}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ResourceTable;","import React, { Component } from \"react\";\r\nimport Async from 'react-select/async';\r\n\r\nclass CustomSelect extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            options: []\r\n        }\r\n\r\n        this.searchHandler = this.searchHandler.bind(this);\r\n    }\r\n\r\n    roundToNiceNumber(value) {\r\n        var val = 0;\r\n        if (value.toString().length == 4) {\r\n            val = Math.ceil(value / 100) * 100\r\n        }\r\n        else if (value.toString().length > 4) {\r\n            val = Math.ceil(value / 1000) * 1000\r\n        }\r\n\r\n        return val;\r\n    }\r\n\r\n    searchHandler(inputValue, callback) {\r\n        fetch(this.props.sourceURL || `/api/products?name=${inputValue}`, {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        })\r\n            .then(result => result.json())\r\n            .then(results => {\r\n                if (results.data.length > 0) {\r\n                    results.data.forEach(item => {\r\n                        item.value = item.name;\r\n                        if (item.imagePath) {\r\n                            item.label = [<img className=\"img img-fluid\" style={{ maxWidth: \"40px\" }} src={item.imagePath} />, `${item.name} (${Intl.NumberFormat(\"es-VE\", { style: \"currency\", currency: \"VES\" }).format(this.roundToNiceNumber(item.price * this.props.dolarReference))})`];\r\n                        }\r\n                        else {\r\n                            item.label = `${item.name} (${Intl.NumberFormat(\"es-VE\", { style: \"currency\", currency: \"VES\" }).format(this.roundToNiceNumber(item.price * this.props.dolarReference))})`\r\n                        }\r\n                    });\r\n                    callback(results.data)\r\n                }\r\n            });\r\n    }\r\n    render() {\r\n        return (\r\n            <Async\r\n                loadOptions={this.searchHandler}\r\n                defaultOptions\r\n                placeholder=\"Buscar\"\r\n                autoFocus\r\n                inputId=\"selectedProduct\"\r\n                isMulti={this.props.isMulti}\r\n                isClearable\r\n                ref={this.props.innerRef}\r\n                name={this.props.name}\r\n                onChange={this.props.changeHandler}\r\n                value={this.props.value}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default CustomSelect;","import React, { Component } from \"react\";\r\nimport ResourceTable from \"./ResourceTable\";\r\nimport CustomSelect from \"../globalComponents/CustomSelect\";\r\n\r\n\r\nimport moment from \"moment\";\r\nimport $ from \"jquery\";\r\nconst DataTable = require('datatables.net');\r\n\r\nclass Products extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {\r\n            selectedCategories: null,\r\n            name: null,\r\n            productImageFile: null,\r\n            profitPercent: null,\r\n            success: null,\r\n            error: null,\r\n            modalAction: null,\r\n            discountPercent: null,\r\n            discountStartDate: null,\r\n            discountEndDate: null,\r\n            selectedRowData: null\r\n        }\r\n\r\n        this.submitHandler = this.submitHandler.bind(this);\r\n        this.discountSubmitHandler = this.discountSubmitHandler.bind(this);\r\n        this.optionChangeHandler = this.optionChangeHandler.bind(this);\r\n        this.changeHandler = this.changeHandler.bind(this);\r\n        this.setModalAction = this.setModalAction.bind(this);\r\n        this.setSelectedRowData = this.setSelectedRowData.bind(this);\r\n\r\n        this.CustomSelectRef = React.createRef();\r\n        this.productForm = React.createRef();\r\n        this.closeButton = React.createRef();\r\n    }\r\n\r\n    setModalAction(modalAction) {\r\n        this.setState({\r\n            modalAction\r\n        })\r\n    }\r\n\r\n    setSelectedRowData(selectedRowData) {\r\n        let categories = [];\r\n        selectedRowData.category.forEach(category => {\r\n            categories.push({ id: category.id, label: category.name, value: category.name });\r\n        })\r\n\r\n        this.setState({\r\n            selectedRowData,\r\n            selectedCategories: categories,\r\n            name: selectedRowData.name,\r\n            profitPercent: selectedRowData.profitPercent,\r\n        }, () => {\r\n            $(\"#name\").val(this.state.selectedRowData.name);\r\n            $(\"#profitPercent\").val(this.state.selectedRowData.profitPercent);\r\n        })\r\n    }\r\n\r\n    optionChangeHandler(selectedOptions, actionType) {\r\n        this.setState({\r\n            selectedCategories: selectedOptions\r\n        });\r\n    }\r\n\r\n    changeHandler(event) {\r\n        this.setState({\r\n            [event.target.name]: (event.target.type == \"file\") ? event.target.files[0] : event.target.value\r\n        });\r\n    }\r\n\r\n    submitHandler(event) {\r\n        event.preventDefault();\r\n        var categoriesID = \"\";\r\n        if (this.state.selectedCategories) {\r\n            this.state.selectedCategories.forEach((category, index) => {\r\n                categoriesID += category.id\r\n                if (index != this.state.selectedCategories.length - 1) {\r\n                    categoriesID += \",\"\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            alert(\"Seleccione las categorías\")\r\n        }\r\n\r\n        var formData = new FormData();\r\n\r\n        formData.append(\"productImageFile\", this.state.productImageFile);\r\n        formData.append(\"name\", this.state.name);\r\n        formData.append(\"profitPercent\", this.state.profitPercent);\r\n        formData.append(\"categories\", categoriesID);\r\n\r\n        fetch((this.state.modalAction == \"add\") ? \"/api/products\" : `/api/products/${this.state.selectedRowData.id}`, {\r\n            method: (this.state.modalAction == \"add\") ? \"POST\" : \"PATCH\",\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n                \"Accept\": \"application/json\"\r\n            },\r\n            body: formData\r\n        })\r\n            .then(res => {\r\n                if (res.status == 200) {\r\n                    this.setState({\r\n                        success: \"El producto se ha registrado con exito\",\r\n                        productImageFile: null\r\n                    });\r\n                    this.productForm.current.reset();\r\n                    this.closeButton.current.click();\r\n                    $(\"#resourceTable\").DataTable().ajax.reload(null, false);\r\n                }\r\n                else if (res.status == 409) {\r\n                    res.json().then(response => {\r\n                        this.setState({\r\n                            error: response.error || response.err,\r\n                        })\r\n                    })\r\n\r\n                }\r\n            })\r\n            .catch(error => {\r\n                this.setState({\r\n                    error: error\r\n                })\r\n            })\r\n    }\r\n\r\n    discountSubmitHandler(event) {\r\n        event.preventDefault();\r\n        if (this.state.discountPercent && this.state.discountStartDate && this.state.discountEndDate) {\r\n            fetch(\"/api/discounts\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                    productId: this.state.selectedRowData.id,\r\n                    percent: this.state.discountPercent,\r\n                    startDate: this.state.discountStartDate,\r\n                    endDate: this.state.discountEndDate\r\n                })\r\n            })\r\n                .then(res => {\r\n                    if (res.status == 200) {\r\n                        this.setState({\r\n                            success: \"Se ha registrado con éxito\"\r\n                        })\r\n                    } else {\r\n                        res.json().then(res => {\r\n                            this.setState({\r\n                                error: res.error || res.err\r\n                            })\r\n                        })\r\n                    }\r\n                })\r\n        }\r\n        else {\r\n            alert(\"Rellene todos los campos\")\r\n        }\r\n    }\r\n\r\n    roundToNiceNumber(value) {\r\n        var val = 0;\r\n        if (value.toString().length == 4) {\r\n            val = Math.ceil(value / 100) * 100\r\n        }\r\n        else if (value.toString().length > 4) {\r\n            val = Math.ceil(value / 1000) * 1000\r\n        }\r\n\r\n        return val;\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1 className=\"text-danger float-left\">Productos</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-3\">\r\n                    <div className=\"col-md-12\">\r\n                        <ResourceTable asyncTable={true} setSelectedRowData={this.setSelectedRowData} setModalAction={this.setModalAction} sourceURL={\"/api/products\"} columns={[\r\n                            { title: \"ID\", data: \"id\" },\r\n                            {\r\n                                render: function (data, type, row, meta) {\r\n                                    if (row.imagePath) {\r\n                                        return `<span class=\"p-0\"><img class=\"img-responsive m-0 p-0\" src=\"${row.imagePath}\" style=\"max-width:40px;\"></img>${data}</span>`\r\n                                    }\r\n                                    else {\r\n                                        return data\r\n                                    }\r\n                                },\r\n                                title: \"Nombre\", data: \"name\"\r\n                            },\r\n                            { title: \"Precio $\", data: \"price\" },\r\n                            {\r\n                                render: (data) => {\r\n                                    return Intl.NumberFormat(\"es-Ve\", { style: \"currency\", currency: \"VES\" }).format(this.roundToNiceNumber(data * this.props.dolarReference))\r\n                                }, title: \"Precio Bs\", data: \"price\"\r\n                            },\r\n                            {\r\n                                render: function (data) {\r\n                                    return data + \"%\"\r\n                                }, title: \"Porcentaje de Ganancia\", data: \"profitPercent\"\r\n                            },\r\n                            {\r\n                                render: function (data, type, row, meta) {\r\n                                    let disc = data.map(discount => {\r\n                                        return discount.percent\r\n                                    })\r\n\r\n                                    return (disc.length) ? disc + \"%\" : 0 + \"%\"\r\n                                }, title: \"Descuento\", data: \"discount\"\r\n                            },\r\n                            /*\r\n                            {\r\n                                title: \"Descuento desde\", data: \"discount[0].startDate\"\r\n                            },\r\n                            {\r\n                                title: \"Descuento hasta\", data: \"discount[0].endDate\"\r\n                            },\r\n                            */\r\n                            { title: \"Fecha creación\", data: \"createdAt\" },\r\n                            { title: \"Fecha actualización\", data: \"updatedAt\" }\r\n                        ]} actions={[\"add\", \"edit\", \"delete\", \"discount\"]} modalStructure={\r\n                            <form ref={this.productForm} onSubmit={this.submitHandler} className=\"float-left\">\r\n                                <div className=\"modal-header\">\r\n                                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">New Product</h5>\r\n                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                        <span aria-hidden=\"true\">&times;</span>\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"name\">Product Name: </label>\r\n                                        <input onChange={this.changeHandler} className=\"form-control\" type=\"text\" name=\"name\" id=\"name\" required />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"profitPercent\">Profit Percent: </label>\r\n                                        <div className=\"input-group\">\r\n                                            <div className=\"input-group-prepend\">\r\n                                                <div className=\"input-group-text\">%</div>\r\n                                            </div>\r\n                                            <input onChange={this.changeHandler} className=\"form-control\" type=\"number\" step=\"0.1\" name=\"profitPercent\" id=\"profitPercent\" required />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"productImageFile\">Imagen: </label>\r\n                                        <div className=\"custom-file\">\r\n                                            <input onChange={this.changeHandler} type=\"file\" className=\"custom-file-input\" id=\"productImageFile\" name=\"productImageFile\" />\r\n                                            <label className=\"custom-file-label\" htmlFor=\"image\">Choose file</label>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"price\">Categorías: </label>\r\n                                        <CustomSelect sourceURL=\"/api/categories\"\r\n                                            isMulti={true}\r\n                                            innerRef={this.CustomSelectRef}\r\n                                            changeHandler={this.optionChangeHandler}\r\n                                            value={this.state.selectedCategories}\r\n                                            required />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button ref={this.closeButton} type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Cerrar</button>\r\n                                    <button type=\"submit\" className=\"btn btn-primary\">Enviar</button>\r\n                                </div>\r\n                                {this.state.success && <span className=\"text-success\">{this.state.success}</span>}\r\n                                {this.state.error && <span className=\"text-danger\">{this.state.error}</span>}\r\n                            </form>\r\n                        } />\r\n                        <div id=\"discountModal\" className=\"modal\" tabIndex=\"-1\">\r\n                            <div className=\"modal-dialog\">\r\n                                <div className=\"modal-content\">\r\n                                    <div className=\"modal-header\">\r\n                                        <h5 className=\"modal-title\"></h5>\r\n                                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                            <span aria-hidden=\"true\">&times;</span>\r\n                                        </button>\r\n                                    </div>\r\n                                    <form onSubmit={this.discountSubmitHandler}>\r\n                                        <div className=\"modal-body\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"discountPercent\">Discount Percent: </label>\r\n                                                <div className=\"input-group\">\r\n                                                    <input onChange={this.changeHandler} className=\"form-control\" type=\"number\" step=\"0.01\" min=\"0\" name=\"discountPercent\" id=\"discountPercent\" required />\r\n                                                    <div className=\"input-group-append\">\r\n                                                        <div className=\"input-group-text\">%</div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <label htmlFor=\"discountStartDate\">Start Date:</label>\r\n                                                <div className=\"input-group\">\r\n                                                    <input onChange={this.changeHandler} className=\"form-control\" type=\"date\" name=\"discountStartDate\" id=\"discountStartDate\" required />\r\n                                                </div>\r\n                                                <label htmlFor=\"discountEndDate\">End Date:</label>\r\n                                                <div className=\"input-group\">\r\n                                                    <input onChange={this.changeHandler} className=\"form-control\" type=\"date\" name=\"discountEndDate\" id=\"discountEndDate\" required />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"modal-footer\">\r\n                                            <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Cerrar</button>\r\n                                            <button type=\"submit\" className=\"btn btn-primary\">Enviar</button>\r\n                                        </div>\r\n                                        {this.state.success && <span className=\"text-success\">{this.state.success}</span>}\r\n                                        {this.state.error && <span className=\"text-danger\">{this.state.error}</span>}\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Products;","import React, { Component } from \"react\";\r\n\r\nimport moment from \"moment\";\r\nimport ResourceTable from \"./ResourceTable\";\r\nclass Sales extends Component {\r\n    constructor() {\r\n        super()\r\n        this.submitHandler = this.submitHandler.bind(this);\r\n        this.roundToNiceNumber = this.roundToNiceNumber.bind(this);\r\n        this.childFormat = this.childFormat.bind(this);\r\n    }\r\n\r\n    submitHandler(event) {\r\n        event.preventDefault()\r\n        console.log(\"hola\");\r\n    }\r\n\r\n    roundToNiceNumber(value) {\r\n        var val = 0;\r\n        if (value.toString().length == 4) {\r\n            val = Math.ceil(value / 100) * 100\r\n        }\r\n        else if (value.toString().length > 4) {\r\n            val = Math.ceil(value / 1000) * 1000\r\n        }\r\n\r\n        return val;\r\n    }\r\n\r\n    childFormat(d) {\r\n        let childRowInfo = \"\";\r\n        d.saleProducts.forEach(saleProduct => {\r\n            childRowInfo += `\r\n            <div class='form-row align-items-center'>\r\n                    <div class=\"col-1\">\r\n                        <label for=\"productId\">Product ID</label>\r\n                        <input class=\"form-control\" id=\"productId\" value=\"${saleProduct.productId}\" disabled/>\r\n                    </div>\r\n                    <div class=\"col-4\">\r\n                        <label for=\"productName\">Name</label>\r\n                        <input class=\"form-control\" id=\"productName\" value=\"${saleProduct.product[0].name}\" disabled/>\r\n                    </div>\r\n                    <div class=\"col-1\">\r\n                        <label for=\"productPrice\">Price $</label>\r\n                        <input class=\"form-control\" id=\"productPrice\" value=\"$${saleProduct.price}\" disabled/>\r\n                    </div>\r\n                    <div class=\"col-1\">\r\n                        <label for=\"productPriceBs\">Price Bs</label>\r\n                        <input class=\"form-control\" id=\"productPriceBs\" value=\"Bs.S ${this.roundToNiceNumber(saleProduct.price * saleProduct.dolarReference)}\" disabled/>\r\n                    </div>\r\n                    <div class=\"col-1\">\r\n                        <label for=\"discount\">Discount</label>\r\n                        <input class=\"form-control\" id=\"discount\" value=\"${saleProduct.discount}%\" disabled/>\r\n                    </div>\r\n                    <div class=\"col-1\">\r\n                        <label for=\"productQuantity\">Quantity</label>\r\n                        <input class=\"form-control\" id=\"productQuantity\" value=\"${saleProduct.quantity}\" disabled/>\r\n                    </div>\r\n                    <div class=\"col-2\">\r\n                        <label for=\"dolarValue\">Dolar value</label>\r\n                        <input class=\"form-control\" id=\"dolarValue\" value=\"${Intl.NumberFormat(\"es-VE\", { style: \"currency\", currency: \"VES\" }).format(saleProduct.dolarReference)}\" disabled/>\r\n                    </div>\r\n            </div>\r\n            `\r\n        })\r\n        childRowInfo += \"\"\r\n        return childRowInfo\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1 className=\"text-danger float-left\">Ventas</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-3\">\r\n                    <div className=\"col-md-12\">\r\n                        <ResourceTable asyncTable={true} childFormat={this.childFormat} sourceURL={\"/api/sales\"} columns={[\r\n                            { title: \"ID\", data: \"id\" },\r\n                            {\r\n                                \"title\": \"Productos\",\r\n                                \"className\": 'details-control',\r\n                                \"orderable\": false,\r\n                                \"data\": \"productName\",\r\n                                defaultContent: '<button class=\"btn btn-success\">Ver Productos</button>'\r\n                            },\r\n                            { title: \"Fecha creación\", data: \"createdAt\" }\r\n\r\n                        ]} actions={[\"edit\", \"delete\"]} />\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Sales;","import React, { Component } from \"react\";\r\nimport moment from \"moment\";\r\nimport ResourceTable from \"./ResourceTable\";\r\n\r\nimport $ from \"jquery\";\r\nimport DataTable from \"datatables.net\";\r\nclass Suppliers extends Component {\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {\r\n            name: null,\r\n            rif: null,\r\n            success: null,\r\n            error: null\r\n        }\r\n        this.submitHandler = this.submitHandler.bind(this);\r\n        this.inputChangeHandler = this.inputChangeHandler.bind(this);\r\n        this.setModalAction = this.setModalAction.bind(this);\r\n\r\n    }\r\n\r\n    setModalAction(modalAction) {\r\n        this.setState({\r\n            modalAction\r\n        })\r\n    }\r\n\r\n    submitHandler(event) {\r\n        event.preventDefault();\r\n        if (this.state.name && this.state.rif) {\r\n            fetch(\"/api/suppliers\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                    name: this.state.name,\r\n                    rif: this.state.rif\r\n                })\r\n            })\r\n                .then(res => {\r\n                    if (res.status == 200) {\r\n                        this.setState({\r\n                            success: \"Se ha registrado de forma exitosa.\"\r\n                        });\r\n                        $(\"#resourceTable\").DataTable().draw();\r\n                    }\r\n                    else {\r\n                        res.text().then(error => {\r\n                            this.setState({\r\n                                error\r\n                            })\r\n                        })\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n    inputChangeHandler(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1 className=\"text-danger float-left\">Proveedores</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-3\">\r\n                    <div className=\"col-md-12\">\r\n                        <ResourceTable asyncTable={true} setModalAction={this.setModalAction} sourceURL={\"/api/suppliers\"} columns={[\r\n                            { title: \"ID\", data: \"id\" },\r\n                            { title: \"Nombre\", data: \"name\" },\r\n                            { title: \"RIF\", data: \"rif\" },\r\n                            { title: \"Fecha creación\", data: \"createdAt\" }\r\n\r\n                        ]} actions={[\"add\", \"edit\", \"delete\"]} modalStructure={\r\n                            <form onSubmit={this.submitHandler} className=\"float-left\">\r\n                                <div className=\"modal-header\">\r\n                                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">New Supplier</h5>\r\n                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                        <span aria-hidden=\"true\">&times;</span>\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"name\">Supplier Name: </label>\r\n                                        <input onChange={this.inputChangeHandler} className=\"form-control\" type=\"text\" name=\"name\" id=\"name\" required />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"rif\">RIF: </label>\r\n                                        <input onChange={this.inputChangeHandler} className=\"form-control\" type=\"text\" name=\"rif\" id=\"rif\" required />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Cerrar</button>\r\n                                    <button type=\"submit\" className=\"btn btn-primary\">Enviar</button>\r\n                                </div>\r\n                                {this.state.success && <span className=\"text-success\">{this.state.success}</span>}\r\n                                {this.state.error && <span className=\"text-danger\">{this.state.error}</span>}\r\n                            </form>\r\n                        } />\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Suppliers;","import React, {Component} from \"react\";\r\nimport moment from \"moment\";\r\nimport ResourceTable from \"./ResourceTable\";\r\nimport CustomSelect from \"../globalComponents/CustomSelect\";\r\n\r\nimport $ from \"jquery\";\r\nconst DataTable = require('datatables.net');\r\n\r\nclass Supplyings extends Component {\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {\r\n            supplier: null,\r\n            product: null,\r\n            price: null,\r\n            quantity: null,\r\n            success: null,\r\n            error: null\r\n        }\r\n        this.submitHandler = this.submitHandler.bind(this);\r\n        this.supplierChangeHandler = this.supplierChangeHandler.bind(this);\r\n        this.productChangeHandler = this.productChangeHandler.bind(this);\r\n        this.inputChangeHandler = this.inputChangeHandler.bind(this);\r\n        this.setModalAction = this.setModalAction.bind(this);\r\n\r\n        this.supplierSelect = React.createRef();\r\n        this.productSelect = React.createRef();\r\n        this.supplyingForm = React.createRef();\r\n\r\n    }\r\n\r\n    setModalAction(modalAction) {\r\n        this.setState({\r\n            modalAction\r\n        })\r\n    }\r\n\r\n    supplierChangeHandler(selectedOption) {\r\n        this.setState({\r\n            supplier: selectedOption\r\n        });\r\n    }\r\n\r\n    productChangeHandler(selectedOption) {\r\n        this.setState({\r\n            product: selectedOption\r\n        });\r\n    }\r\n\r\n    inputChangeHandler(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n    submitHandler(event) {\r\n        event.preventDefault();\r\n        if (this.state.supplier && this.state.product && this.state.price && this.state.quantity) {\r\n            fetch(\"/api/supplyings\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                    supplierId: this.state.supplier.id,\r\n                    productId: this.state.product.id,\r\n                    price: this.state.price,\r\n                    quantity: this.state.quantity,\r\n                    dolarReference: this.props.dolarReference\r\n                })\r\n            }).then(res => {\r\n                if (res.status == 200) {\r\n                    this.setState({\r\n                        success: \"Se ha registrado el abastecimiento con éxito\"\r\n                    })\r\n                    this.supplyingForm.current.reset();\r\n                    $(\"#resourceTable\").DataTable().draw();\r\n                }\r\n                else {\r\n                    res.text().then(error => {\r\n                        this.setState({\r\n                            error\r\n                        })\r\n                    })\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            alert(\"Por favor rellene todos los campos\")\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1 className=\"text-danger float-left\">Abastecimiento</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-3\">\r\n                    <div className=\"col-md-12\">\r\n                        <ResourceTable asyncTable={true} setModalAction={this.setModalAction} sourceURL={\"/api/supplyings\"} columns={[\r\n                            {title: \"ID\", data: \"id\"},\r\n                            {title: \"ID Proveedor\", data: \"supplierId\"},\r\n                            {title: \"Nombre Proveedor\", data: \"supplier.name\"},\r\n                            {title: \"ID Product\", data: \"productId\"},\r\n                            {title: \"Nombre Producto\", data: \"product.name\"},\r\n                            {\r\n                                render: function (data) {\r\n                                    return \"$\" + data\r\n                                }, title: \"Precio de Compra\", data: \"price\"\r\n                            },\r\n                            {\r\n                                render: function (data) {\r\n                                    return (data > 1) ? data + \" Unidades\" : data + \" Unidad\"\r\n                                }, title: \"Cantidad\", data: \"quantity\"\r\n                            },\r\n                            {title: \"Fecha creación\", data: \"createdAt\"},\r\n                            {title: \"Fecha actualización\", data: \"updatedAt\"}\r\n\r\n                        ]} actions={[\"add\", \"edit\", \"delete\"]} modalStructure={\r\n                            <form ref={this.supplyingForm} onSubmit={this.submitHandler} className=\"float-left\">\r\n                                <div className=\"modal-header\">\r\n                                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">New Supplying</h5>\r\n                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                        <span aria-hidden=\"true\">&times;</span>\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"supplierId\">Supplier ID: </label>\r\n                                        <CustomSelect sourceURL=\"/api/suppliers\"\r\n                                            isMulti={false}\r\n                                            innerRef={this.supplierSelect}\r\n                                            changeHandler={this.supplierChangeHandler} required />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"productId\">Product ID: </label>\r\n                                        <CustomSelect\r\n                                            isMulti={false}\r\n                                            innerRef={this.productSelect}\r\n                                            changeHandler={this.productChangeHandler} required />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"price\">Price: </label>\r\n                                        <input onChange={this.inputChangeHandler} className=\"form-control\" type=\"number\" step=\"0.00000000000000001\" name=\"price\" id=\"price\" required />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"quantity\">Quantity: </label>\r\n                                        <input onChange={this.inputChangeHandler} className=\"form-control\" type=\"number\" step=\"0.001\" name=\"quantity\" id=\"quantity\" required />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Cerrar</button>\r\n                                    <button type=\"submit\" className=\"btn btn-primary\">Enviar</button>\r\n                                </div>\r\n                                {this.state.success && <span className=\"text-success\">{this.state.success}</span>}\r\n                                {this.state.error && <span className=\"text-danger\">{this.state.error}</span>}\r\n                            </form>\r\n                        } />\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Supplyings;\r\n","import React, { Component } from \"react\";\r\nimport moment from \"moment\";\r\nimport ResourceTable from \"./ResourceTable\";\r\n\r\nimport $ from \"jquery\";\r\nimport DataTable from \"datatables.net\";\r\n\r\nclass Users extends Component {\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {\r\n            email: null,\r\n            password: null,\r\n            permissions: null,\r\n            success: null,\r\n            error: null\r\n        }\r\n\r\n        this.submitHandler = this.submitHandler.bind(this);\r\n\r\n        this.inputChangeHandler = this.inputChangeHandler.bind(this);\r\n\r\n        this.form = React.createRef();\r\n    }\r\n\r\n    submitHandler(event) {\r\n        event.preventDefault();\r\n\r\n        if (this.state.email && this.state.password && this.state.permissions) {\r\n\r\n            fetch(\"/api/users\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                    email: this.state.email,\r\n                    password: this.state.password,\r\n                    permissions: this.state.permissions\r\n                })\r\n            }).then(res => {\r\n                if (res.status == 200) {\r\n                    this.setState({\r\n                        success: \"Se ha registrado con éxito\"\r\n                    });\r\n                    this.form.current.reset();\r\n                    $(\"resourceTable\").DataTable().draw();\r\n                }\r\n                else {\r\n                    res.text().then(error => {\r\n                        this.setState({\r\n                            error\r\n                        })\r\n                    })\r\n                }\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    inputChangeHandler(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1 className=\"text-danger float-left\">Usuarios</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-3\">\r\n                    <div className=\"col-md-12\">\r\n                        <ResourceTable asyncTable={true} sourceURL={\"/api/users\"} columns={[\r\n                            { title: \"ID\", data: \"id\" },\r\n                            { title: \"Email\", data: \"email\" },\r\n                            { title: \"Permisos\", data: \"permissions\" },\r\n                            { title: \"Fecha creación\", data: \"createdAt\" }\r\n\r\n                        ]} actions={[\"add\", \"delete\"]} modalStructure={\r\n                            <form ref={this.form} onSubmit={this.submitHandler} className=\"float-left\">\r\n                                <div className=\"modal-header\">\r\n                                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">New Supplier</h5>\r\n                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                        <span aria-hidden=\"true\">&times;</span>\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"email\">Email: </label>\r\n                                        <input onChange={this.inputChangeHandler} className=\"form-control\" type=\"text\" name=\"email\" id=\"email\" required />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"password\">Password: </label>\r\n                                        <input onChange={this.inputChangeHandler} className=\"form-control\" type=\"password\" name=\"password\" id=\"password\" required />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"permissions\">Permissions: </label>\r\n                                        <input onChange={this.inputChangeHandler} className=\"form-control\" type=\"text\" name=\"permissions\" id=\"permissions\" required />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Cerrar</button>\r\n                                    <button type=\"submit\" className=\"btn btn-primary\">Enviar</button>\r\n                                </div>\r\n                                {this.state.success && <span className=\"text-success\">{this.state.success}</span>}\r\n                                {this.state.error && <span className=\"text-danger\">{this.state.error}</span>}\r\n                            </form>\r\n                        } />\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Users;","import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nclass Navigation extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.clickHandler = this.clickHandler.bind(this);\r\n        this.logout = this.logout.bind(this);\r\n    }\r\n\r\n    logout() {\r\n        localStorage.removeItem(\"jwt\");\r\n    }\r\n\r\n    clickHandler(event) {\r\n        this.setState({\r\n            activeNavLink: event.target.innerText\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark flex-lg-column flex-xl-row\">\r\n                <a className=\"navbar-brand text-danger\" href=\"/\">Supermercado Melquisedec</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n\r\n                <div className=\"collapse navbar-collapse row p-0 m-0\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav flex-lg-row mx-auto container-fluid p-0 m-0\">\r\n                        <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\r\n                            <NavLink className=\"nav-link\" onClick={this.clickHandler} to=\"/control-de-ventas\"><span className=\"d-md-inline\">Control de Ventas</span></NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\r\n                            <NavLink className=\"nav-link\" onClick={this.clickHandler} to=\"/inventario\"><span className=\"d-md-inline\">Inventario</span></NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\r\n                            <NavLink className=\"nav-link\" onClick={this.clickHandler} to=\"/reportes\"><span className=\"d-md-inline\">Reportes</span></NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\r\n                            <NavLink className=\"nav-link\" onClick={this.clickHandler} to=\"/deuda\"><span className=\"d-md-inline\">Deuda</span></NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\r\n                            <NavLink className=\"nav-link\" onClick={this.clickHandler} to=\"/categorias\"><span className=\"d-md-inline\">Categorías</span></NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\r\n                            <NavLink className=\"nav-link\" onClick={this.clickHandler} to=\"/clientes\"><span className=\"d-md-inline\">Clientes</span></NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\r\n                            <NavLink className=\"nav-link\" onClick={this.clickHandler} to=\"/productos\"><span className=\"d-md-inline\">Productos</span></NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\r\n                            <NavLink className=\"nav-link\" onClick={this.clickHandler} to=\"/ventas\"><span className=\"d-md-inline\">Ventas</span></NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\r\n                            <NavLink className=\"nav-link\" onClick={this.clickHandler} to=\"/abastecimiento\"><span className=\"d-md-inline\">Abastecimiento</span></NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\r\n                            <NavLink className=\"nav-link\" onClick={this.clickHandler} to=\"/proveedores\"><span className=\"d-md-inline\">Proveedores</span></NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\r\n                            <NavLink className=\"nav-link\" onClick={this.clickHandler} to=\"/usuarios\"><span className=\"d-md-inline\">Usuarios</span></NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\r\n                            <NavLink className=\"nav-link btn btn-danger px-0\" onClick={this.logout} to=\"/signin\">Cerrar Sesión</NavLink>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navigation;","import React, {Component} from 'react';\r\n\r\nimport CustomSelect from '../globalComponents/CustomSelect';\r\nimport $ from 'jquery';\r\n\r\nclass SalesControl extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            selectedProduct: null,\r\n            addedProducts: [],\r\n            subtotalDollars: null,\r\n            subtotalBs: null,\r\n            totalDollars: null,\r\n            totalBs: null,\r\n            quantity: 1,\r\n            stockError: '',\r\n            error: '',\r\n            success: '',\r\n            submittingSale: false,\r\n        };\r\n        this.productsHandler = this.productsHandler.bind(this);\r\n        this.submitHandler = this.submitHandler.bind(this);\r\n        this.optionChangeHandler = this.optionChangeHandler.bind(this);\r\n        this.onChangeHandler = this.onChangeHandler.bind(this);\r\n        this.clickHandler = this.clickHandler.bind(this);\r\n\r\n        this.saleSubmitButton = React.createRef();\r\n\r\n        this.sendSaleForm = React.createRef();\r\n        this.quantityInput = React.createRef();\r\n        this.CustomSelectRef = React.createRef();\r\n        this.productsTableDiv = React.createRef();\r\n        this.productsTable = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        let bodySize = document.body.getBoundingClientRect();\r\n        let tableSize = this.productsTableDiv.current.getBoundingClientRect();\r\n        let tableMaxHeight = bodySize.height - tableSize.top - tableSize.height - 30;\r\n        this.productsTableDiv.current.style.maxHeight = tableMaxHeight;\r\n\r\n        document.body.addEventListener('keyup', event => {\r\n            let key = event.key;\r\n            if (event.ctrlKey && key == 'Enter') {\r\n                if (this.saleSubmitButton.current) this.saleSubmitButton.current.click();\r\n            }\r\n        });\r\n    }\r\n\r\n    optionChangeHandler(selectedOption, actionType) {\r\n        if (actionType.action == 'select-option') {\r\n            this.quantityInput.current.focus();\r\n            this.quantityInput.current.select();\r\n        }\r\n        this.setState({\r\n            selectedProduct: selectedOption,\r\n        });\r\n    }\r\n    onChangeHandler(event) {\r\n        if (event.target.id == 'quantityInput') {\r\n            this.setState({\r\n                quantity: new Number(event.target.value),\r\n            });\r\n        } else {\r\n            this.setState({\r\n                [event.target.name]: event.target.value,\r\n            });\r\n        }\r\n    }\r\n    productsHandler(event) {\r\n        event.preventDefault();\r\n\r\n        if (this.state.selectedProduct != null) {\r\n            fetch(`/api/inventory/${this.state.selectedProduct.id}`, {\r\n                headers: {\r\n                    Authorization: 'Bearer ' + localStorage.getItem('jwt'),\r\n                },\r\n            })\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    let stock = parseFloat(res.data[0].stock);\r\n                    if (stock > 0 && stock >= this.state.quantity) {\r\n                        let product = this.state.selectedProduct;\r\n\r\n                        let productFormatted = {};\r\n\r\n                        let discount = 0;\r\n                        if (product.discount.length) {\r\n                            discount = product.discount[0].percent;\r\n                        }\r\n\r\n                        product.discount = discount;\r\n                        product.quantity = this.state.quantity || 1;\r\n\r\n                        product.totalDollars = product.price * product.quantity - product.price * (discount / 100);\r\n                        product.priceBs = this.roundToNiceNumber(product.price * this.props.dolarReference);\r\n                        product.totalBs = this.roundToNiceNumber(product.priceBs * product.quantity - product.priceBs * (discount / 100));\r\n\r\n                        if (discount) {\r\n                            product.totalFormattedDollars = <span className={discount ? 'text-danger' : ''}>{Intl.NumberFormat('es-VE', {style: 'currency', currency: 'USD'}).format(product.totalDollars) + ` (-${discount}%)`}</span>;\r\n                            product.totalFormattedBs = <span className={discount ? 'text-danger' : ''}>{Intl.NumberFormat('es-VE', {style: 'currency', currency: 'VES'}).format(product.totalBs) + ` (-${discount}%)`}</span>;\r\n                        } else {\r\n                            product.totalFormattedDollars = Intl.NumberFormat('en-US', {style: 'currency', currency: 'USD'}).format(product.totalDollars);\r\n                            product.totalFormattedBs = Intl.NumberFormat('es-VE', {style: 'currency', currency: 'VES'}).format(product.totalBs);\r\n                        }\r\n\r\n                        productFormatted = {\r\n                            id: product.id,\r\n                            name: product.name,\r\n                            price: product.price,\r\n                            priceBs: product.priceBs,\r\n                            quantity: product.quantity,\r\n                            totalDollars: product.totalDollars,\r\n                            totalBs: product.totalBs,\r\n                            imagePath: product.imagePath,\r\n                            totalFormattedDollars: product.totalFormattedDollars,\r\n                            totalFormattedBs: product.totalFormattedBs,\r\n                            discount: product.discount,\r\n                        };\r\n\r\n                        this.CustomSelectRef.current.select.state.value = [];\r\n                        this.quantityInput.current.value = 1;\r\n                        this.CustomSelectRef.current.focus();\r\n\r\n                        let productExistsInTable = false;\r\n\r\n                        this.state.addedProducts.forEach(product => {\r\n                            if (productFormatted.id == product.id) {\r\n                                productExistsInTable = true;\r\n                                product.quantity += productFormatted.quantity;\r\n                            }\r\n                        });\r\n\r\n                        if (!productExistsInTable) {\r\n                            this.setState(\r\n                                {\r\n                                    addedProducts: this.state.addedProducts.concat(productFormatted),\r\n                                    quantity: 1,\r\n                                    selectedProduct: null,\r\n                                    stockError: '',\r\n                                },\r\n                                function () {\r\n                                    let totalDollars = 0;\r\n                                    let totalBs = 0;\r\n                                    this.state.addedProducts.map(product => {\r\n                                        totalDollars += parseFloat(product.totalDollars);\r\n                                        totalBs += parseFloat(product.totalBs);\r\n                                    });\r\n                                    this.setState({\r\n                                        subtotalDollars: totalDollars,\r\n                                        subtotalBs: totalBs,\r\n                                        totalDollars,\r\n                                        totalBs,\r\n                                    });\r\n                                    this.productsTable.current.parentElement.scrollTop = this.productsTable.current.scrollHeight;\r\n                                },\r\n                            );\r\n                        } else {\r\n                            var index = this.state.addedProducts.findIndex(product => product.id === productFormatted.id);\r\n                            this.setState(\r\n                                {\r\n                                    addedProducts: [...this.state.addedProducts.slice(0, index), Object.assign({}, this.state.addedProducts[index], {...productFormatted}), ...this.state.addedProducts.slice(index + 1)],\r\n                                    quantity: 1,\r\n                                    selectedProduct: null,\r\n                                    stockError: '',\r\n                                },\r\n                                function () {\r\n                                    console.log(this.state.addedProducts);\r\n                                    let totalDollars = 0;\r\n                                    let totalBs = 0;\r\n                                    this.state.addedProducts.map(product => {\r\n                                        totalDollars += parseFloat(product.totalDollars);\r\n                                        totalBs += parseFloat(product.totalBs);\r\n                                    });\r\n                                    this.setState({\r\n                                        subtotalDollars: totalDollars,\r\n                                        subtotalBs: totalBs,\r\n                                        totalDollars,\r\n                                        totalBs,\r\n                                    });\r\n                                },\r\n                            );\r\n                        }\r\n                    } else {\r\n                        this.setState({\r\n                            stockError: 'No hay productos suficientes en el inventario',\r\n                        });\r\n                    }\r\n                });\r\n        } else {\r\n            this.setState({\r\n                stockError: 'Seleccione un producto',\r\n            });\r\n        }\r\n    }\r\n    clickHandler(event) {\r\n        let newProducts = [];\r\n        let totalToSubtractDollars = 0;\r\n        let totalToSubtractBs = 0;\r\n\r\n        this.state.addedProducts.forEach(product => {\r\n            if (product.id != event.currentTarget.parentElement.parentElement.getAttribute('productid')) {\r\n                newProducts.push(product);\r\n            } else {\r\n                totalToSubtractDollars += product.totalDollars;\r\n                totalToSubtractBs += product.totalBs;\r\n            }\r\n        });\r\n        this.setState({\r\n            addedProducts: newProducts,\r\n            subtotalDollars: this.state.subtotalDollars - totalToSubtractDollars,\r\n            subtotalBs: this.state.subtotalBs - totalToSubtractBs,\r\n            totalDollars: this.state.totalDollars - totalToSubtractDollars,\r\n            totalBs: this.state.totalBs - totalToSubtractBs,\r\n        });\r\n        this.CustomSelectRef.current.focus();\r\n    }\r\n\r\n    submitHandler() {\r\n        if (!this.state.addedProducts.length) {\r\n            this.setState({\r\n                stockError: 'Seleccione un producto',\r\n            });\r\n            return;\r\n        }\r\n        if (!this.state.submittingSale) {\r\n            this.setState(\r\n                {\r\n                    submittingSale: true,\r\n                },\r\n                () => {\r\n                    let saleProducts = [];\r\n                    this.state.addedProducts.forEach(product => {\r\n                        saleProducts.push({\r\n                            id: product.id,\r\n                            quantity: product.quantity,\r\n                            price: product.price,\r\n                            dolarReference: this.props.dolarReference,\r\n                            discount: product.discount,\r\n                        });\r\n                    });\r\n                    fetch('/api/sales', {\r\n                        method: 'POST',\r\n                        headers: {\r\n                            Authorization: 'Bearer ' + localStorage.getItem('jwt'),\r\n                            'Content-Type': 'application/json',\r\n                        },\r\n                        body: JSON.stringify({\r\n                            products: saleProducts,\r\n                        }),\r\n                    })\r\n                        .then(res => res.json())\r\n                        .then(res => {\r\n                            if (res.err || res.error) {\r\n                                this.setState({\r\n                                    error: res.err,\r\n                                });\r\n                            } else {\r\n                                this.setState({\r\n                                    success: 'La venta se ha realizado con éxito',\r\n                                    selectedProduct: null,\r\n                                    addedProducts: [],\r\n                                    subtotalDollars: null,\r\n                                    subtotalBs: null,\r\n                                    totalDollars: null,\r\n                                    totalBs: null,\r\n                                    quantity: 1,\r\n                                    stockError: '',\r\n                                    error: '',\r\n                                    submittingSale: false,\r\n                                });\r\n                                setTimeout(() => {\r\n                                    this.setState({\r\n                                        success: '',\r\n                                    });\r\n                                }, 3000);\r\n                                this.CustomSelectRef.current.select.state.value = [];\r\n                                this.quantityInput.current.value = 1;\r\n                                this.CustomSelectRef.current.focus();\r\n                                this.saleSubmitButton.current.disabled = false;\r\n                            }\r\n                        });\r\n                },\r\n            );\r\n        } else {\r\n            this.setState({\r\n                error: 'Se está ejecutando una venta, por favor espere...',\r\n            });\r\n        }\r\n    }\r\n\r\n    roundToNiceNumber(value) {\r\n        var val = 0;\r\n        if (value.toString().length == 4) {\r\n            val = Math.ceil(value / 100) * 100;\r\n        } else if (value.toString().length > 4) {\r\n            val = Math.ceil(value / 1000) * 1000;\r\n        }\r\n\r\n        return val;\r\n    }\r\n    render() {\r\n        var _this = this;\r\n        return (\r\n            <div className=\"container-fluid\" id=\"container\">\r\n                <div className=\"row d-none d-lg-inline-block\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1 className=\"text-danger\">Control de Ventas</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-0 mt-lg-5\">\r\n                    <div className=\"col-12\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <span className=\"text-danger\">{this.state.stockError}</span>\r\n                                <span className=\"text-danger h3\">{this.state.error}</span>\r\n                                <span className=\"text-success h3\">{this.state.success}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\"></div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <form className=\"\" onSubmit={this.productsHandler}>\r\n                                    <div className=\"row mb-3\">\r\n                                        <div className=\"col-12 col-lg-7 mt-2\">\r\n                                            <CustomSelect dolarReference={_this.props.dolarReference} isMulti={false} innerRef={this.CustomSelectRef} changeHandler={this.optionChangeHandler} name={'ProductSelect'} />\r\n                                        </div>\r\n                                        <div className=\"col-12 col-lg-3 mt-2\">\r\n                                            <input onChange={this.onChangeHandler} ref={this.quantityInput} step=\"0.001\" type=\"number\" className=\"form-control\" placeholder=\"Cantidad\" id=\"quantity\" name=\"quantity\" defaultValue=\"1\" />\r\n                                        </div>\r\n                                        <div className=\"col-12 col-lg-2 mt-2\">\r\n                                            <input type=\"submit\" className=\"form-control btn btn-info\" value=\"Enviar\" />\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-lg-2\">\r\n                        <div className=\"form-group\">\r\n                            <input ref={this.saleSubmitButton} onClick={this.submitHandler} type=\"button\" className=\"form-control btn btn-primary\" value=\"Procesar venta\" />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input ref={this.saleSubmitButton} onClick={this.submitHandler} type=\"button\" className=\"form-control btn btn-warning\" value=\"Enviar a deuda\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-lg-10\">\r\n                        <div ref={this.productsTableDiv} className=\"table-responsive\">\r\n                            <table ref={this.productsTable} className=\"table table-dark table-striped overflow-auto\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"col\">Count</th>\r\n                                        <th scope=\"col\">Product ID</th>\r\n                                        <th scope=\"col\">Nombre</th>\r\n                                        <th scope=\"col\">Precio $</th>\r\n                                        <th scope=\"col\">Precio Bs</th>\r\n                                        <th scope=\"col\">Cantidad</th>\r\n                                        <th scope=\"col\">\r\n                                            Total<span className=\"font-weight-bold text-warning\">{' ' + Intl.NumberFormat('en-US', {style: 'currency', currency: 'USD'}).format(this.state.totalDollars)}</span>\r\n                                        </th>\r\n                                        <th scope=\"col\">\r\n                                            Total<span className=\"font-weight-bold text-warning\">{' ' + Intl.NumberFormat('es-VE', {style: 'currency', currency: 'VES'}).format(this.state.totalBs)}</span>\r\n                                        </th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {this.state.addedProducts.map((product, index) => {\r\n                                        return (\r\n                                            <tr key={index} productid={product.id}>\r\n                                                <th>{index + 1}</th>\r\n                                                <th>{product.id}</th>\r\n                                                <th>\r\n                                                    <img className=\"\" style={{maxWidth: '40px'}} src={product.imagePath} />\r\n                                                    {product.name}\r\n                                                </th>\r\n                                                <th>{Intl.NumberFormat('en-US', {style: 'currency', currency: 'USD'}).format(product.price)}</th>\r\n                                                <th>{Intl.NumberFormat('es-VE', {style: 'currency', currency: 'VES'}).format(product.priceBs)}</th>\r\n                                                <th>{product.quantity}</th>\r\n                                                <th>{product.totalFormattedDollars}</th>\r\n                                                <th>{product.totalFormattedBs}</th>\r\n                                                <th>\r\n                                                    <button onClick={this.clickHandler} className=\"btn btn-danger p-0\">\r\n                                                        Delete\r\n                                                    </button>\r\n                                                </th>\r\n                                            </tr>\r\n                                        );\r\n                                    })}\r\n                                </tbody>\r\n                                <tfoot></tfoot>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SalesControl;\r\n\r\n/*\r\n<div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <div className=\"d-flex flex-column align-items-end\">\r\n                            <label className=\"font-weight-bold h4\">{\"Subtotal Bs: \"}\r\n                                <span className=\"font-weight-bold h4 text-danger\">{Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(this.state.subtotalBs)}</span>\r\n                            </label>\r\n                            <label className=\"font-weight-bold h4\">{\"Total Bs: \"}\r\n                                <span className=\"font-weight-bold h4 text-danger\">{Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(this.state.totalBs)}</span>\r\n                            </label>\r\n                            <hr className=\"w-100\" />\r\n                            <label className=\"font-weight-bold h4\">{\"Subtotal $: \"}\r\n                                <span className=\"font-weight-bold h4 text-danger\">{Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(this.state.subtotalDollars)}</span>\r\n                            </label>\r\n                            <label className=\"font-weight-bold h4\">{\"Total $: \"}\r\n                                <span className=\"font-weight-bold h4 text-danger\">{Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(this.state.totalDollars)}</span>\r\n                            </label>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n                */\r\n\r\n","import React, { Component } from \"react\";\r\nimport AsyncSelect from 'react-select/async';\r\nimport { roundUpProductPrice } from \"../helpers\";\r\nimport products from \"../requests/products\";\r\nimport productsRequests from \"../requests/products\";\r\nimport inventoryRequests from \"../requests/inventory\";\r\nclass BetterSalesControl extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            messageInfo: {\r\n                type: null,\r\n                message: null\r\n            },\r\n            productsToSell: [],\r\n            currentSelectedProduct: null,\r\n            quantity: 1,\r\n            totalDollars: 0,\r\n            totalBs: 0\r\n        }\r\n\r\n\r\n        this.productsTableDiv = React.createRef();\r\n        this.productsTable = React.createRef();\r\n        this.productSelect = React.createRef();\r\n        this.saleSubmitButton = React.createRef();\r\n        this.quantityInput = React.createRef();\r\n\r\n        this.productSelectionHandler = this.productSelectionHandler.bind(this);\r\n        this.searchProductsHandler = this.searchProductsHandler.bind(this);\r\n        this.onInputChangeHandler = this.onInputChangeHandler.bind(this);\r\n        this.onFocusHandler = this.onFocusHandler.bind(this);\r\n        this.addProductToTableHandler = this.addProductToTableHandler.bind(this);\r\n        this.editProductQuantityHandler = this.editProductQuantityHandler.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    async searchProductsHandler(inputValue) {\r\n        let results = await inventoryRequests.fetchByProductName(inputValue);\r\n        if (results.data.length > 0) {\r\n            results.data.forEach(product => {\r\n                product.value = product;\r\n                product.label =\r\n                    <div className=\"row\">\r\n                        <div className=\"mx-auto\">\r\n                            <img className=\"my-auto\" style={{ maxWidth: \"40px\", }} src={product.imagePath} />\r\n                            <span className=\"my-auto\">{product.name}</span>\r\n                        </div>\r\n                        <span className=\"my-auto mr-5\">{Intl.NumberFormat(\"es-VE\", { style: \"currency\", currency: \"VES\" }).format(roundUpProductPrice(product.price * this.props.dolarReference))}</span>\r\n                    </div>\r\n                    ;\r\n                if (product.stock == 0) product.isDisabled = true;\r\n\r\n            });\r\n        }\r\n        return results.data;\r\n    }\r\n\r\n    productSelectionHandler(selectedProduct, actionType) {\r\n        if (actionType.action == \"select-option\") {\r\n            this.quantityInput.current.select();\r\n        }\r\n        this.setState({\r\n            currentSelectedProduct: selectedProduct\r\n        })\r\n    }\r\n\r\n    onFocusHandler(event) {\r\n        event.target.select();\r\n    }\r\n\r\n    async onInputChangeHandler(event) {\r\n        if (event.target.name == \"quantity\") {\r\n            this.setState({\r\n                quantity: Number(event.target.value)\r\n            })\r\n        }\r\n        else if (event.target.id == \"productQuantity\") {\r\n            let productId = event.target.parentElement.parentElement.getAttribute(\"productId\");\r\n            let quantity = Number(event.target.value);\r\n\r\n            if (await this.isProductStockEnough(productId, quantity)) {\r\n                let productsToSell = this.state.productsToSell;\r\n                productsToSell.map(product => {\r\n                    if (product.id == productId) {\r\n                        product = this.updateProductTotal(product, quantity);\r\n                    }\r\n                })\r\n                this.setState({\r\n                    productsToSell\r\n                })\r\n            }\r\n            else {\r\n                event.preventDefault();\r\n            }\r\n\r\n        }\r\n        else {\r\n            this.setState({\r\n                [event.target.name]: event.target.value\r\n            })\r\n        }\r\n    }\r\n\r\n    async isProductStockEnough(id, quantity) {\r\n        let productInfo = await inventoryRequests.fetchByProductId(id);\r\n        if (productInfo.data) {\r\n            let stock = Number(productInfo.data[0].stock);\r\n            if (stock <= 0 || quantity > stock) {\r\n                this.setState({\r\n                    messageInfo: {\r\n                        type: \"error\",\r\n                        message: `No hay suficientes productos en el inventario`\r\n                    }\r\n                })\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    async addProductToTableHandler(event) {\r\n        event.preventDefault();\r\n        let productInfo = await inventoryRequests.fetchByProductId(this.state.currentSelectedProduct.id);\r\n        if (productInfo.data) {\r\n            let stock = parseInt(productInfo.data[0].stock);\r\n            let quantityToSell = parseInt(this.state.quantity);\r\n            if (stock <= 0 || quantityToSell > stock) {\r\n                this.setState({\r\n                    messageInfo: {\r\n                        type: \"error\",\r\n                        message: `No hay suficientes productos en el inventario`\r\n                    }\r\n                })\r\n            }\r\n            else {\r\n                let productsToSell = this.state.productsToSell;\r\n\r\n                let alreadyInTable = false;\r\n\r\n                productsToSell.forEach(productToSell => {\r\n                    if (this.state.currentSelectedProduct.id == productToSell.id) {\r\n                        alreadyInTable = true;\r\n                    }\r\n                })\r\n\r\n                if (!alreadyInTable) {\r\n                    let newProduct = {\r\n                        id: this.state.currentSelectedProduct.id,\r\n                        imagePath: this.state.currentSelectedProduct.imagePath,\r\n                        name: this.state.currentSelectedProduct.name,\r\n                        unitPriceDollars: this.state.currentSelectedProduct.price,\r\n                        unitPriceBs: this.state.currentSelectedProduct.price * this.props.dolarReference,\r\n                        quantity: this.state.quantity\r\n                    }\r\n                    newProduct.totalBs = newProduct.unitPriceDollars * newProduct.quantity * this.props.dolarReference;\r\n                    newProduct.totalDollars = newProduct.unitPriceDollars * newProduct.quantity;\r\n\r\n                    this.setState({\r\n                        productsToSell: this.state.productsToSell.concat(newProduct)\r\n                    })\r\n                }\r\n                else {\r\n                    productsToSell.map(product => {\r\n                        if (product.id == this.state.currentSelectedProduct.id) {\r\n                            product = this.updateProductTotal(product, this.state.quantity);\r\n                        }\r\n                    });\r\n\r\n                    this.setState({\r\n                        productsToSell\r\n                    })\r\n                }\r\n                this.updateSaleTotal();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    updateProductTotal(product, quantity) {\r\n        if (product != null && quantity != null) {\r\n            product.quantity = quantity;\r\n            product.totalBs = product.unitPriceDollars * product.quantity * this.props.dolarReference;\r\n            product.totalDollars = product.unitPriceDollars * product.quantity;\r\n        }\r\n        return product;\r\n    }\r\n\r\n    updateSaleTotal() {\r\n        let totalBs = 0;\r\n        let totalDollars = 0;\r\n        this.state.productsToSell.forEach(product => {\r\n            totalBs += product.totalBs;\r\n            totalDollars += product.totalDollars;\r\n        });\r\n        this.setState({\r\n            totalBs,\r\n            totalDollars\r\n        })\r\n    }\r\n\r\n    async editProductQuantityHandler(event) {\r\n        let quantity = window.prompt(\"Ingrese la cantidad: \");\r\n        if (quantity != null && quantity != \"\") {\r\n            let productId = event.target.parentElement.getAttribute(\"productId\");\r\n            if (await this.isProductStockEnough(productId, quantity)) {\r\n                let productsToSell = this.state.productsToSell;\r\n                productsToSell.forEach(product => {\r\n                    if (product.id == productId) {\r\n                        product = this.updateProductTotal(product, quantity);\r\n                        this.setState({\r\n                            productsToSell\r\n                        }, () => {\r\n                            this.updateSaleTotal()\r\n                        })\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    submitSaleHandler() {\r\n\r\n    }\r\n\r\n    deleteFromTable() {\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <h1 className=\"text-danger\">Control de Ventas</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-lg-7 mt-2\">\r\n                        <label className=\"font-weight-bold\">Productos</label>\r\n                    </div>\r\n                    <div className=\"col-12 col-lg-3 mt-2\">\r\n                        <label className=\"font-weight-bold\">Cantidad</label>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <form onSubmit={this.addProductToTableHandler}>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12 col-lg-7 mt-2\">\r\n                                    <AsyncSelect\r\n                                        loadOptions={this.searchProductsHandler}\r\n                                        ref={this.productSelect}\r\n                                        defaultOptions\r\n                                        cacheOptions\r\n                                        placeholder=\"Buscar producto\"\r\n                                        autoFocus\r\n                                        isClearable\r\n                                        inputId=\"selectedProduct\"\r\n                                        onChange={this.productSelectionHandler}\r\n                                        styles={{\r\n                                            option: (styles, { data, isDisabled, isFocused, isSelected }) => ({\r\n                                                ...styles,\r\n                                                color: data.stock > 0 && data.stock <= 10\r\n                                                    ? \"orange\"\r\n                                                    : data.stock > 0\r\n                                                        ? \"green\"\r\n                                                        : \"red\",\r\n                                                cursor: data.stock == 0\r\n                                                    ? \"not-allowed\"\r\n                                                    : \"pointer\"\r\n                                            }),\r\n                                            singleValue: (styles, { data }) => ({\r\n                                                ...styles,\r\n                                                width: \"100%\"\r\n                                            }),\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"col-12 col-lg-3 mt-2\">\r\n                                    <input onFocus={this.onFocusHandler} ref={this.quantityInput} onChange={this.onInputChangeHandler} type=\"number\" className=\"form-control\" placeholder=\"Cantidad\" id=\"quantity\" name=\"quantity\" defaultValue=\"1\" />\r\n                                </div>\r\n                                <div className=\"col-12 col-lg-2 mt-2\">\r\n                                    <input type=\"submit\" className=\"form-control btn btn-info\" value=\"Enviar\" />\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mb-2 mt-0\">\r\n                    <div className=\"col\">\r\n                        <span className={(this.state.messageInfo.type == \"error\") ? \"text-danger\" : \"text-success\"}>\r\n                            {this.state.messageInfo.message}\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-lg-2\">\r\n                        <div className=\"form-group\">\r\n                            <input ref={this.saleSubmitButton} onClick={this.submitSaleHandler} type=\"button\" className=\"form-control btn btn-primary\" value=\"Procesar venta\" />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input ref={this.saleSubmitButton} type=\"button\" className=\"form-control btn btn-warning\" value=\"Enviar a deuda\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-lg-10\">\r\n                        <div ref={this.productsTableDiv} className=\"table-responsive\" >\r\n                            <table ref={this.productsTable} className=\"table table-dark table-striped overflow-auto\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"col\">Product ID</th>\r\n                                        <th scope=\"col\">Nombre</th>\r\n                                        <th scope=\"col\">Precio Bs</th>\r\n                                        <th scope=\"col\">Cantidad</th>\r\n                                        <th scope=\"col\">Total<span className=\"font-weight-bold text-warning\">{\" \" + Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(this.state.totalBs)}</span>\r\n                                        </th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        this.state.productsToSell.map((product, index) => {\r\n                                            return (\r\n                                                <tr key={index} productid={product.id}>\r\n                                                    <th>{product.id}</th>\r\n                                                    <th><img style={{ maxWidth: \"40px\" }} src={product.imagePath} />{product.name}</th>\r\n                                                    <th>{Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(product.unitPriceBs)}</th>\r\n                                                    <th onClick={this.editProductQuantityHandler} className=\"bg-dark border\" style={{ cursor: \"pointer\" }} data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Editar Cantidad\">{product.quantity}</th>\r\n                                                    <th>{Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(product.totalBs)}</th>\r\n                                                    <th>\r\n                                                        <button onClick={this.deleteFromTable} className=\"btn btn-danger p-0\">Delete</button>\r\n                                                    </th>\r\n                                                </tr>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BetterSalesControl;","import React, { Component } from \"react\";\r\n\r\nimport ResourceTable from \"./ResourceTable\";\r\n\r\nclass Inventory extends Component {\r\n\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1 className=\"text-danger float-left\">Inventario</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-3\">\r\n                    <div className=\"col-md-12\">\r\n                        <ResourceTable asyncTable={true} sourceURL={\"/api/inventory\"} columns={[\r\n                            { title: \"Product ID\", data: \"id\" },\r\n                            { title: \"Nombre Producto\", data: \"name\" },\r\n                            {\r\n                                title: \"Inventario\", data: \"stock\", render: function (data, type, row) {\r\n                                    if (data <= 0) {\r\n                                        return `<span class=\"text-danger\">${data}</span>`\r\n                                    }\r\n                                    return `<span class=\"text-success\">${data}</span>`\r\n                                }\r\n                            },\r\n                            { title: \"Total productos vendidos\", data: \"salesTotal\" },\r\n                            { title: \"Total productos comprados\", data: \"supplyingsTotal\" }\r\n                        ]} actions={[]} />\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Inventory;","import React, { Component } from \"react\"\r\nimport ResourceTable from \"./ResourceTable\";\r\n\r\nconst moment = require(\"moment\");\r\n\r\nconst $ = require(\"jquery\");\r\nconst DataTable = require(\"datatables.net\");\r\n\r\nclass Reports extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            resource: \"sales\",\r\n            parameters: \"\"\r\n        }\r\n\r\n        this.submitHandler = this.submitHandler.bind(this);\r\n        this.changeHandler = this.changeHandler.bind(this);\r\n\r\n        this.reportForm = React.createRef();\r\n        this.resourceTable = React.createRef();\r\n    }\r\n\r\n    changeHandler(event) {\r\n        let dateRangeFromValue = document.body.querySelector(\"#rangeDateFrom\").value;\r\n        let dateRangeToValue = document.body.querySelector(\"#rangeDateTo\").value;\r\n        let greaterThanDate = document.body.querySelector(\"#greaterThanDate\").value;\r\n        let lowerThanDate = document.body.querySelector(\"#lowerThanDate\").value;\r\n        let equalDate = document.body.querySelector(\"#equalDate\").value;\r\n\r\n        var previousParameters = this.state.parameters;\r\n        var parameters = \"\";\r\n        if (event.target.name == \"dateRadios\") {\r\n            $(\"form\").find(\"input[type=date]\").val(\"\");\r\n            switch (event.target.id) {\r\n                case \"today\":\r\n                    parameters = `from=${moment(new Date()).format(\"YYYY-MM-DD\")}&to=${moment(new Date()).format(\"YYYY-MM-DD\")}`\r\n                    break;\r\n                case \"yesterday\":\r\n                    parameters = `from=${moment(new Date()).subtract(1, \"days\").format(\"YYYY-MM-DD\")}&to=${moment(new Date()).subtract(1, \"days\").format(\"YYYY-MM-DD\")}`\r\n                    break;\r\n                case \"lastWeek\":\r\n                    parameters = `from=${moment(new Date()).subtract(7, \"days\").format(\"YYYY-MM-DD\")}&to=${moment(new Date()).format(\"YYYY-MM-DD\")}`\r\n                    break;\r\n                case \"fortnight\":\r\n                    parameters = `from=${moment(new Date()).subtract(15, \"days\").format(\"YYYY-MM-DD\")}&to=${moment(new Date()).format(\"YYYY-MM-DD\")}`\r\n                    break;\r\n                case \"month\":\r\n                    parameters = `from=${moment(new Date()).subtract(1, \"months\").format(\"YYYY-MM-DD\")}&to=${moment(new Date()).format(\"YYYY-MM-DD\")}`\r\n                    break;\r\n                case \"quarter\":\r\n                    parameters = `from=${moment(new Date()).subtract(3, \"months\").format(\"YYYY-MM-DD\")}&to=${moment(new Date()).format(\"YYYY-MM-DD\")}`\r\n                    break;\r\n                case \"semester\":\r\n                    parameters = `from=${moment(new Date()).subtract(6, \"months\").format(\"YYYY-MM-DD\")}&to=${moment(new Date()).format(\"YYYY-MM-DD\")}`\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            parameters += \"&group=true\"\r\n        }\r\n        else if (event.target.name == \"reportType\") {\r\n            this.setState({\r\n                resource: event.target.id,\r\n                parameters: \"\"\r\n            }, function () {\r\n                this.setState({\r\n                    parameters: previousParameters\r\n                })\r\n            });\r\n            return;\r\n        }\r\n        else {\r\n            $(\"form\").find(\"input[name=dateRadios]\").prop(\"checked\", false);\r\n            $(\"form\").find(\"input[type=date]\").val(\"\");\r\n            switch (event.target.id) {\r\n                case \"greaterThanDate\":\r\n                    parameters = `createdAt=${greaterThanDate}&operation=gte`\r\n                    event.target.value = greaterThanDate;\r\n                    break;\r\n                case \"lowerThanDate\":\r\n                    parameters = `createdAt=${lowerThanDate}&operation=lte`\r\n                    event.target.value = lowerThanDate;\r\n                    break;\r\n                case \"equalDate\":\r\n                    parameters = `createdAt=${equalDate}&operation=eq`\r\n                    event.target.value = equalDate;\r\n                    break;\r\n                case \"rangeDateFrom\":\r\n                    if (dateRangeToValue) {\r\n                        parameters = `from=${moment(dateRangeFromValue || \"\").format(\"YYYY-MM-DD\")}&to=${dateRangeToValue}`\r\n                    }\r\n                    else {\r\n                        parameters = `from=${moment(dateRangeFromValue || \"\").format(\"YYYY-MM-DD\")}`\r\n                    }\r\n                    event.target.value = dateRangeFromValue;\r\n                    $(\"#rangeDateTo\").val(dateRangeToValue);\r\n                    break;\r\n                case \"rangeDateTo\":\r\n                    if (dateRangeFromValue) {\r\n                        parameters = `from=${dateRangeFromValue}&to=${moment(dateRangeToValue || \"\").format(\"YYYY-MM-DD\")}`\r\n                    }\r\n                    else {\r\n                        parameters = `to=${moment(dateRangeToValue || \"\").format(\"YYYY-MM-DD\")}`\r\n                    }\r\n                    event.target.value = dateRangeToValue;\r\n                    $(\"#rangeDateFrom\").val(dateRangeFromValue);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            parameters += \"&group=true\"\r\n        }\r\n        this.setState({\r\n            parameters\r\n        });\r\n    }\r\n    componentDidUpdate() {\r\n        if (this.resourceTable.current) {\r\n            this.resourceTable.current.changeSourceURL(`/api/${this.state.resource}?${this.state.parameters}`);\r\n        }\r\n    }\r\n    submitHandler(event) {\r\n        event.preventDefault();\r\n        this.reportForm.current.reset();\r\n    }\r\n    render() {\r\n        var salesColumns = [\r\n            /*\r\n            {\r\n                render: function (data, type, row, meta) {\r\n                    return `<img src=\"${row.product.imagePath}\" style=\"max-width:35px;\"/>`\r\n                },\r\n                title: \"Imagen\", data: \"product.imagePath\"\r\n            },\r\n            */\r\n            { title: \"Product ID\", data: \"product.id\" },\r\n            { title: \"Nombre\", data: \"product.name\" },\r\n            //{ title: \"Transacciones\", data: \"transactions\" },\r\n            { title: \"Cantidad de productos\", data: \"salesTotal\" },\r\n            {\r\n                render: function (data, type, row, meta) {\r\n                    return Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(row.grossTotalDollars)\r\n                }, title: (this.state.resource == \"sales\") ? \"Ganancia bruta $\" : \"Costo bruto $\", data: \"grossTotalDollars\"\r\n            },\r\n            {\r\n                render: function (data, type, row, meta) {\r\n                    return Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(row.grossTotalBs)\r\n                }, title: (this.state.resource == \"sales\") ? \"Ganancia bruta Bs\" : \"Costo bruto Bs\", data: \"grossTotalBs\"\r\n            },\r\n            {\r\n                render: function (data, type, row, meta) {\r\n                    return Intl.NumberFormat('en-US', {\r\n                        style: 'currency',\r\n                        currency: 'USD',\r\n                    }).format(row.netIncomeDollars)\r\n                }, title: (this.state.resource == \"sales\") ? \"Ganancia Neta $\" : \"Ganancia neta $\", data: \"netIncomeDollars\"\r\n            },\r\n            {\r\n                render: function (data, type, row, meta) {\r\n                    return Intl.NumberFormat('es-VE', {\r\n                        style: 'currency',\r\n                        currency: 'VES',\r\n                    }).format(row.netIncomeBs)\r\n                }, title: (this.state.resource == \"sales\") ? \"Ganancia Neta Bs\" : \"Ganancia Neta Bs\", data: \"netIncomeBs\"\r\n            }\r\n        ];\r\n\r\n        var supplyingsColumns = [\r\n            /*\r\n            {\r\n                render: function (data, type, row, meta) {\r\n                    return `<img src=\"${row.product.imagePath}\" style=\"max-width:35px;\"/>`\r\n                },\r\n                title: \"Imagen\", data: \"product.imagePath\"\r\n            },\r\n            */\r\n            { title: \"Product ID\", data: \"product.id\" },\r\n            { title: \"Nombre\", data: \"product.name\" },\r\n            //{ title: \"Transacciones\", data: \"transactions\" },\r\n            { title: \"Cantidad de productos\", data: \"quantity\" },\r\n            {\r\n                render: function (data, type, row, meta) {\r\n                    return Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(row.grossTotalDollars)\r\n                }, title: (this.state.resource == \"sales\") ? \"Ganancia bruta $\" : \"Costo bruto $\", data: \"grossTotalDollars\"\r\n            },\r\n            {\r\n                render: function (data, type, row, meta) {\r\n                    return Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(row.grossTotalBs)\r\n                }, title: (this.state.resource == \"sales\") ? \"Ganancia bruta Bs\" : \"Costo bruto Bs\", data: \"grossTotalBs\"\r\n            }\r\n        ];\r\n\r\n        return (\r\n            <div className=\"\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1 className=\"text-danger float-left\">Reportes</h1>\r\n                    </div>\r\n                </div>\r\n                <hr />\r\n                <form ref={this.reportForm} onSubmit={this.submitHandler}>\r\n                    <div className=\"col-12\">\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <h3 className=\"mr-4\">Tipo de reporte:</h3>\r\n                        </div>\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input onChange={this.changeHandler} className=\"form-check-input\" type=\"radio\" name=\"reportType\" id=\"supplyings\" value=\"supplyingRadio\" />\r\n                            <label className=\"form-check-label\" htmlFor=\"supplyingRadio\">Compra</label>\r\n                        </div>\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input onChange={this.changeHandler} className=\"form-check-input\" type=\"radio\" name=\"reportType\" id=\"sales\" value=\"saleRadio\" defaultChecked />\r\n                            <label className=\"form-check-label\" htmlFor=\"saleRadio\">Venta</label>\r\n                        </div>\r\n                    </div>\r\n                    <hr className=\"col-12 p-0\" />\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 col-lg-2\">\r\n                            <h5 className=\"mr-4\">Rango de fechas:</h5>\r\n                            <div className=\"form-group\">\r\n                                <input onChange={this.changeHandler} type=\"date\" name=\"rangeDateFrom\" id=\"rangeDateFrom\" />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input onChange={this.changeHandler} type=\"date\" name=\"rangeDateTo\" id=\"rangeDateTo\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12 col-lg-4\">\r\n                            <div className=\"form-check form-check-inline\">\r\n                                <label className=\"btn btn-secondary\" htmlFor=\"semester\" name=\"labelDateRadios\">\r\n                                    <input onChange={this.changeHandler} className=\"form-check-input\" type=\"radio\" name=\"dateRadios\" id=\"semester\" />\r\n                                    6 meses\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"form-check form-check-inline\">\r\n                                <label className=\"btn btn-secondary\" htmlFor=\"quarter\" name=\"labelDateRadios\">\r\n                                    <input onChange={this.changeHandler} className=\"form-check-input\" type=\"radio\" name=\"dateRadios\" id=\"quarter\" />\r\n                                3 meses\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"form-check form-check-inline\">\r\n                                <label className=\"btn btn-secondary\" htmlFor=\"month\" name=\"labelDateRadios\">\r\n                                    <input onChange={this.changeHandler} className=\"form-check-input\" type=\"radio\" name=\"dateRadios\" id=\"month\" />\r\n                                1 mes\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"form-check form-check-inline\">\r\n                                <label className=\"btn btn-secondary\" htmlFor=\"fortnight\" name=\"labelDateRadios\">\r\n                                    <input onChange={this.changeHandler} className=\"form-check-input\" type=\"radio\" name=\"dateRadios\" id=\"fortnight\" />\r\n                                15 días\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"form-check form-check-inline\">\r\n                                <label className=\"btn btn-secondary\" htmlFor=\"lastWeek\" name=\"labelDateRadios\">\r\n                                    <input onChange={this.changeHandler} className=\"form-check-input\" type=\"radio\" name=\"dateRadios\" id=\"lastWeek\" />\r\n                                Útima semana\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"form-check form-check-inline\">\r\n                                <label className=\"btn btn-secondary\" htmlFor=\"yesterday\" name=\"labelDateRadios\">\r\n                                    <input onChange={this.changeHandler} className=\"form-check-input\" type=\"radio\" name=\"dateRadios\" id=\"yesterday\" />\r\n                                Ayer\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"form-check form-check-inline\">\r\n                                <label className=\"btn btn-secondary\" htmlFor=\"today\" name=\"labelDateRadios\">\r\n                                    <input onChange={this.changeHandler} className=\"form-check-input\" type=\"radio\" name=\"dateRadios\" id=\"today\" />\r\n                                Hoy\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12 col-lg-2\">\r\n                            <div className=\"\">\r\n                                <h5 className=\"\">Fecha mayor o igual a:</h5>\r\n                                <input onChange={this.changeHandler} type=\"date\" name=\"greaterThanDate\" id=\"greaterThanDate\" />\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className=\"col-12 col-lg-2\">\r\n                            <div className=\"\">\r\n                                <h5 className=\"\">Fecha menor o igual a:</h5>\r\n                                <input onChange={this.changeHandler} type=\"date\" name=\"lowerThanDate\" id=\"lowerThanDate\" />\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className=\"col-12 col-lg-2\">\r\n                            <div className=\"\">\r\n                                <h5 className=\"\">Fecha igual a:</h5>\r\n                                <input onChange={this.changeHandler} type=\"date\" name=\"equalDate\" id=\"equalDate\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <hr />\r\n                </form>\r\n\r\n                <div className=\"row mt-3\">\r\n                    <div className=\"col-md-12\">\r\n                        {this.state.parameters != \"\" && <ResourceTable ref={this.resourceTable} asyncTable={true} sourceURL={`/api/${this.state.resource}?${this.state.parameters}`} columns={\r\n                            (this.state.resource == \"sales\") ? salesColumns : supplyingsColumns\r\n                        } actions={[]} dolarReference={this.props.dolarReference} />}\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Reports;","const BASE_URL = \"/api/debts\";\r\n\r\nconst functions = {\r\n    fetchAll: async function () {\r\n        let debts = await fetch(BASE_URL, {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        })\r\n\r\n        let response = await debts.json();\r\n\r\n        return response;\r\n    },\r\n    fetchById: async function (id) {\r\n        let debt = await fetch(BASE_URL + `?id=${id}`, {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        })\r\n\r\n        let response = await debt.json();\r\n\r\n        return response;\r\n    },\r\n    fetchByName: async function (name) {\r\n        let debts = await fetch(BASE_URL + `?name=${name}`, {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        })\r\n\r\n        let response = await debts.json();\r\n\r\n        return response;\r\n    },\r\n    create: async function (debt) {\r\n        let newDebt = await fetch(BASE_URL, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(debt)\r\n        })\r\n\r\n        let response = await newDebt.json();\r\n\r\n        return response;\r\n    },\r\n    update: async function (debt) {\r\n        let newDebt = await fetch(BASE_URL + `/${debt.id}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(debt)\r\n        })\r\n\r\n        let response = await newDebt.json();\r\n\r\n        return response;\r\n    }\r\n}\r\n\r\nexport default functions","import React, { Component } from \"react\";\r\nimport debtsRequests from \"../requests/debts\";\r\nimport CustomSelect from \"../globalComponents/CustomSelect\";\r\nimport $ from \"jquery\";\r\nrequire(\"datatables.net\")\r\nclass Debt extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            fetchMessage: null,\r\n            submitMessage: null,\r\n            submitMessageType: null,\r\n            submitLoading: false,\r\n            debtType: 0,\r\n            debtTotal: null,\r\n            debtAction: null,\r\n            selectedRowData: null,\r\n            selectedClient: null\r\n        }\r\n        this.submitHandler = this.submitHandler.bind(this);\r\n        this.changeHandler = this.changeHandler.bind(this);\r\n        this.optionChangeHandler = this.optionChangeHandler.bind(this);\r\n\r\n        this.debtTable = React.createRef();\r\n\r\n        this.addButton = {\r\n            text: 'Add',\r\n            name: 'add',\r\n            className: \"btn btn-success\",\r\n            attr: {\r\n                \"data-toggle\": \"modal\",\r\n                \"data-target\": \"#debtModal\"\r\n            },\r\n            action: (e, datatable, node, config) => {\r\n                $(\".modal-title\").text(\"Add new debt\");\r\n                $(\"#debtTotal\").val(\"\");\r\n                this.setState({\r\n                    debtAction: \"Add\",\r\n                    selectedClient: null\r\n                })\r\n            }\r\n        }\r\n\r\n        this.editButton = {\r\n            text: 'Edit',\r\n            name: 'edit',\r\n            className: \"btn btn-secondary\",\r\n            extend: \"selected\",\r\n            attr: {\r\n                \"data-toggle\": \"modal\",\r\n                \"data-target\": \"#debtModal\"\r\n            },\r\n            action: (e, datatable, node, config) => {\r\n                let selectedRowData = datatable.row({ selected: true }).data();\r\n                $(\".modal-title\").text(\"Edit debt\");\r\n                $(\"#debtTotal\").val(selectedRowData.total);\r\n\r\n                this.setState({\r\n                    debtAction: \"Edit\",\r\n                    selectedRowData,\r\n                    selectedClient: {\r\n                        label: selectedRowData.client.name,\r\n                        value: selectedRowData.client\r\n                    },\r\n                    debtType: selectedRowData.type,\r\n                    debtTotal: selectedRowData.total\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let response = await debtsRequests.fetchAll();\r\n        if (response.data) {\r\n            $(this.debtTable.current).DataTable({\r\n                data: response.data,\r\n                columns: [\r\n                    { title: \"ID\", data: \"id\" },\r\n                    { title: \"Client ID\", data: \"client.id\" },\r\n                    { title: \"Nombre\", data: \"client.name\" },\r\n                    { title: \"Cédula\", data: \"client.cedula\" },\r\n                    { title: \"Teléfono\", data: \"client.phoneNumber\" },\r\n                    {\r\n                        render: function (data) {\r\n                            return (data == 0) ? \"Deuda\" : \"Credito\"\r\n                        }, title: \"Tipo\", data: \"type\"\r\n                    },\r\n                    {\r\n                        render: function (data) {\r\n                            return Intl.NumberFormat(\"es-VE\", { style: \"currency\", currency: \"VES\" }).format(data)\r\n                        }, title: \"Total\", data: \"total\"\r\n                    },\r\n                    {\r\n                        render: function (data) {\r\n                            return (data == 0) ? `<span class=\"text-danger\">SIN PAGAR</span>` : `<span class=\"text-success\">PAGADO</span>`\r\n                        }, title: \"Estado\", data: \"cancelled\"\r\n                    },\r\n                    { title: \"Fecha creación\", data: \"createdAt\" },\r\n                    { title: \"Fecha actualización\", data: \"updatedAt\" }\r\n                ],\r\n                dom: \"Blftip\",\r\n                buttons: [this.addButton, this.editButton],\r\n                select: \"single\",\r\n                order: [0, \"DESC\"]\r\n            })\r\n        }\r\n        else { //error\r\n            this.setState({\r\n                fetchMessage: response.toString()\r\n            })\r\n        }\r\n    }\r\n\r\n    changeHandler(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    optionChangeHandler(selectedOption, actionType) {\r\n        this.setState({\r\n            selectedClient: selectedOption\r\n        })\r\n    }\r\n\r\n    submitHandler(event) {\r\n        event.preventDefault();\r\n\r\n        var response = null;\r\n        this.setState({\r\n            submitLoading: true\r\n        }, async () => {\r\n            if (this.state.debtAction == \"Add\") {\r\n                response = await debtsRequests.create({\r\n                    clientId: this.state.selectedRowData.client.id,\r\n                    type: this.state.debtType,\r\n                    total: this.state.debtTotal\r\n                });\r\n            }\r\n            else if (this.state.debtAction == \"Edit\") {\r\n                response = await debtsRequests.update({\r\n                    id: this.state.selectedRowData.id,\r\n                    clientId: this.state.selectedRowData.clientId,\r\n                    type: this.state.debtType,\r\n                    total: this.state.debtTotal,\r\n                    cancelled: this.state.selectedRowData.cancelled\r\n                });\r\n                let rowData = $(this.debtTable.current).DataTable().rows().data();\r\n                rowData.map((row, index) => {\r\n                    if (row.id == this.state.selectedRowData.id) {\r\n                        let row = $(this.debtTable.current).DataTable().row(index);\r\n                        let rowData = row.data();\r\n                        row.data({\r\n                            ...rowData,\r\n                            type: this.state.debtType,\r\n                            total: this.state.debtTotal\r\n                        })\r\n                    }\r\n                })\r\n\r\n            }\r\n\r\n            if (response.error) {\r\n                this.setState({\r\n                    submitMessage: response.error,\r\n                    submitMessageType: \"Error\",\r\n                    submitLoading: false\r\n                })\r\n            }\r\n            else {\r\n                this.setState({\r\n                    submitMessage: \"Se ha registrado con éxito\",\r\n                    submitMessageType: \"Success\",\r\n                    submitLoading: false\r\n                })\r\n                setTimeout(() => {\r\n                    this.setState({\r\n                        submitMessage: null,\r\n                        submitMessageType: null\r\n                    })\r\n                }, 3000);\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.fetchMessage && <span className=\"text-danger\">{this.state.fetchMessage}</span>}\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1 className=\"text-danger float-left\">Deuda</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-3\">\r\n                    <div className=\"col-md-12\">\r\n                        <table ref={this.debtTable} id=\"debtTable\" name=\"debtTable\" className=\"table table-bordered\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal fade\" id=\"debtModal\" tabindex=\"-1\" aria-labelledby=\"debtModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog modal-dialog-centered\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"debtModalLabel\">Add new debt</h5>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                    <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n                            <form onSubmit={this.submitHandler}>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>Client: </label>\r\n                                        <CustomSelect\r\n                                            sourceURL=\"/api/clients\"\r\n                                            value={this.state.selectedClient}\r\n                                            changeHandler={this.optionChangeHandler} />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Type: </label>\r\n                                        <select onChange={this.changeHandler} className=\"form-control\" name=\"debtType\" id=\"debtType\">\r\n                                            <option value=\"0\">DEUDA</option>\r\n                                            <option value=\"1\">CREDITO</option>\r\n                                        </select>\r\n                                    </div>\r\n                                    <label htmlFor=\"debtTotal\">Total: </label>\r\n                                    <div className=\"input-group\">\r\n                                        <div class=\"input-group-prepend\">\r\n                                            <div class=\"input-group-text\">Bs</div>\r\n                                        </div>\r\n                                        <input onChange={this.changeHandler} className=\"form-control\" type=\"number\" step=\"0.01\" name=\"debtTotal\" id=\"debtTotal\" />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Cerrar</button>\r\n                                    <button type=\"submit\" className=\"btn btn-primary\">\r\n                                        {this.state.submitLoading && <span className=\"spinner-border spinner-border-sm mr-2\" role=\"status\" aria-hidden=\"true\" />}\r\n                                        Enviar</button>\r\n                                </div>\r\n                                {this.state.submitMessage && <span className={(this.state.submitMessageType == \"Error\") ? \"text-danger\" : \"text-success\"}>{this.state.submitMessage}</span>}\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\nexport default Debt;","import React, { Component } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport isAuthenticated from \"../requests/isAuthenticated\";\r\n\r\nclass PrivateRoute extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            loading: true,\r\n            isAuthenticated: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        isAuthenticated().then(isAuthenticated => {\r\n            this.setState({\r\n                loading: false,\r\n                isAuthenticated\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { component: Component, ...rest } = this.props\r\n        return (\r\n            <Route\r\n                render={props =>\r\n                    this.state.isAuthenticated ? (\r\n                        <Component {...props} {...rest} />\r\n                    ) : (\r\n                            this.state.loading ? (\r\n                                <div>LOADING</div>\r\n                            ) : (\r\n                                    <Redirect to={{ pathname: '/signin', state: { from: this.props.location } }} />\r\n                                )\r\n                        )\r\n                }\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default PrivateRoute;","import React, { Component } from \"react\";\r\n\r\nimport Categories from \"./Categories\";\r\nimport Clients from \"./Clients\";\r\nimport Products from \"./Products\";\r\nimport Sales from \"./Sales\";\r\nimport Suppliers from \"./Suppliers\";\r\nimport Supplyings from \"./Supplyings\";\r\nimport Users from \"./Users\";\r\nimport Navigation from \"./Navigation\";\r\nimport SalesControl from \"./SalesControl\";\r\nimport BetterSalesControl from \"./BetterSalesControl\";\r\nimport Inventory from \"./Inventory\";\r\nimport Reports from \"./Reports\";\r\nimport Debt from \"./Debt\";\r\nimport PrivateRoute from \"../components/PrivateRoute\";\r\n\r\nimport { Route } from \"react-router-dom\";\r\n\r\nimport $ from \"jquery\";\r\nclass Dashboard extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            formattedDolareReference: \"\",\r\n            dolarReference: 0,\r\n            loading: false,\r\n            newDolarReference: null\r\n        }\r\n\r\n        this.fetchDolarReference = this.fetchDolarReference.bind(this);\r\n        this.dolarReferenceSubmitHandler = this.dolarReferenceSubmitHandler.bind(this);\r\n        this.changeHandler = this.changeHandler.bind(this);\r\n        this.closeEditDolarModalButton = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchDolarReference();\r\n    }\r\n\r\n    fetchDolarReference() {\r\n        this.setState({\r\n            loading: true\r\n        });\r\n        fetch(\"/api/dolarReference\", {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if (res.data) {\r\n                    this.setState({\r\n                        dolarReference: res.data.price,\r\n                        formattedDolareReference: Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(res.data.price),\r\n                        loading: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        dolarReference: 0,\r\n                        formattedDolareReference: Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(0),\r\n                        loading: false\r\n                    })\r\n                }\r\n            })\r\n    }\r\n\r\n    changeHandler(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    dolarReferenceSubmitHandler(event) {\r\n        event.preventDefault();\r\n\r\n        fetch(\"/api/dolarReference\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({ price: this.state.newDolarReference })\r\n        })\r\n            .then(res => {\r\n                if (res.status == 204) {\r\n                    window.location.reload();\r\n                } else {\r\n                    alert(\"Error\")\r\n                }\r\n            })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row sticky-top\">\r\n                    <div className=\"col-md-12 p-0\">\r\n                        <Navigation />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"bg-danger text-light col-12\">\r\n                        Precio del Dolar <span id=\"dolarReference\" className=\"badge badge-light\">{(this.state.loading) ? \"Loading...\" : this.state.formattedDolareReference}</span>\r\n                        <button className=\"btn btn-secondary ml-4\" data-toggle=\"modal\" data-target=\"#dolarEditModal\" >Editar</button>\r\n                    </div>\r\n\r\n                </div>\r\n                <main className=\"mt-5\">\r\n                    <Route path=\"/control-de-ventas\" render={(props) => (<SalesControl {...props} dolarReference={this.state.dolarReference} />)} />\r\n                    <Route path=\"/inventario\" component={Inventory} />\r\n                    <Route path=\"/reportes\" render={(props) => (<Reports {...props} dolarReference={this.state.dolarReference} />)} />\r\n                    <Route path=\"/deuda\" render={(props) => (<Debt {...props} dolarReference={this.state.dolarReference} />)} />\r\n                    <Route path=\"/categorias\" component={Categories} />\r\n                    <Route path=\"/clientes\" component={Clients} />\r\n                    <Route path=\"/productos\" render={(props) => (<Products {...props} dolarReference={this.state.dolarReference} />)} />\r\n                    <Route path=\"/ventas\" component={Sales} />\r\n                    <Route path=\"/abastecimiento\" render={(props) => (<Supplyings {...props} dolarReference={this.state.dolarReference} />)} />\r\n                    <Route path=\"/proveedores\" component={Suppliers} />\r\n                    <Route path=\"/usuarios\" component={Users} />\r\n                </main>\r\n                <div className=\"modal fade\" id=\"dolarEditModal\" tabindex=\"-1\" aria-labelledby=\"dolarEditModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"dolarEditModalLabel\">Nuevo precio del dolar</h5>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                    <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n                            <form onSubmit={this.dolarReferenceSubmitHandler}>\r\n                                <div className=\"modal-body\">\r\n                                    <input name=\"newDolarReference\" onChange={this.changeHandler} className=\"form-control\" type=\"number\" placeholder=\"Ingrese el nuevo precio del dolar. Ej: 400000\" />\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button ref={this.closeEditDolarModalButton} type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                    <button type=\"submit\" className=\"btn btn-primary\">Save changes</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Dashboard;","const initialState = {\r\n    data: [],\r\n    next: {},\r\n    previous: {},\r\n    loading: false\r\n};\r\nexport default function productReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case \"LOAD_PRODUCTS\":\r\n            return {\r\n                ...state,\r\n                data: action.paginatedProducts.data,\r\n                next: action.paginatedProducts.next,\r\n                previous: action.paginatedProducts.previous\r\n            }\r\n        case \"LOADING\":\r\n            return { ...state, loading: action.loading }\r\n        default:\r\n            return state;\r\n    }\r\n}","\r\nconst initialState = {\r\n    activeCategoryId: 0,\r\n    activeCategoryName: \"\",\r\n    data: []\r\n}\r\nexport default function categoriesReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case \"LOAD_CATEGORIES\":\r\n            return { ...state, data: action.categories }\r\n        case \"SET_ACTIVE_CATEGORY_ID\":\r\n            return { ...state, activeCategoryId: action.categoryId }\r\n        case \"SET_ACTIVE_CATEGORY_NAME\":\r\n            return { ...state, activeCategoryName: action.categoryName }\r\n        default:\r\n            return state;\r\n    }\r\n}","import products from \"./productReducer\";\r\nimport categories from \"./categoriesReducer\";\r\n\r\nexport default { products, categories }","import { createStore, combineReducers } from \"redux\";\r\nimport reducers from \"../reducers\";\r\n\r\nconst rootReducer = combineReducers({\r\n    ...reducers\r\n})\r\nexport default function configureStore() {\r\n    return createStore(rootReducer);\r\n}","import React from 'react';\r\nimport './App.css';\r\n\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\r\n\r\nimport Header from \"./components/Header\";\r\nimport Navigation from \"./components/Navigation\";\r\nimport ProductCategories from \"./components/ProductCategories\";\r\nimport ProductList from \"./components/ProductList\";\r\nimport BackToTopButton from \"./components/BackToTopButton\";\r\nimport Login from \"./components/Login\";\r\nimport Dashboard from \"./adminComponents/Dashboard\";\r\n\r\nimport PrivateRoute from \"./components/PrivateRoute\";\r\n\r\nimport configureStore from \"./store/configureStore\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nconst store = configureStore();\r\n\r\nfunction App() {\r\n\r\n  /*\r\n  <Route path=\"/\">\r\n              <div className=\"container-fluid\">\r\n                <div className=\"row bg-dark\" style={{ height: \"30px\" }} />\r\n                <div className=\"row sticky-top\">\r\n                  <div className=\"col-12\">\r\n                    <Header />\r\n                  </div>\r\n                </div>\r\n                <Navigation />\r\n\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-12 mt-2\">\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-3 mt-2\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-12\">\r\n                        <ProductCategories />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-12 d-flex flex-column align-items-center\">\r\n                        <BackToTopButton />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-8 mt-2 d-flex flex-wrap justify-content-start\">\r\n                    <ProductList />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Route>\r\n  */\r\n  return (\r\n    <Provider store={store}>\r\n      <div className=\"App\">\r\n        <Router>\r\n          <Switch>\r\n            <Route exact path=\"/signin\" component={Login} />\r\n            <PrivateRoute path=\"/\" component={Dashboard} />\r\n          </Switch>\r\n        </Router>\r\n      </div>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.Fragment>\r\n    <App />\r\n  </React.Fragment>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
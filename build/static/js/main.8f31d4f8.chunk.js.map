{"version":3,"sources":["globalComponents/Suggestions.jsx","globalComponents/SearchInput.jsx","components/Header.jsx","components/Navigation.jsx","components/ProductCategories.jsx","components/CategoryTitle.jsx","components/ProductList.jsx","components/BackToTopButton.jsx","requests/isAuthenticated.js","components/Login.jsx","adminComponents/ResourceTable.jsx","adminComponents/Categories.jsx","adminComponents/Clients.jsx","globalComponents/CustomSelect.jsx","adminComponents/Products.jsx","adminComponents/Sales.jsx","adminComponents/Suppliers.jsx","adminComponents/Supplyings.jsx","adminComponents/Users.jsx","adminComponents/Navigation.jsx","adminComponents/SalesControl.jsx","adminComponents/Inventory.jsx","adminComponents/Reports.jsx","components/PrivateRoute.jsx","adminComponents/Dashboard.jsx","reducers/productReducer.js","reducers/categoriesReducer.js","reducers/index.js","store/configureStore.js","App.js","serviceWorker.js","index.js","actions/productActions.js","actions/categoriesActions.js"],"names":["Suggestions","this","props","noResults","className","suggestions","map","suggestion","onlyName","onClick","clickHandler","key","id","productid","style","maxWidth","src","imagePath","alt","name","minWidth","type","defaultValue","value","price","Component","SearchInput","state","showSuggestions","searchHandler","debounce","headerContainer","React","createRef","onBlurHandler","bind","event","target","length","fetch","then","result","json","data","setState","parentClassName","onChange","persist","placeholder","ref","suggestionBox","onOutsideClick","ProductCategories","fetchProducts","categoryHandler","categories","dispatch","categoriesActions","document","querySelector","getAttribute","innerText","preventDefault","includes","parentElement","classList","remove","add","page","limit","productActions","paginatedProducts","category","index","categoryid","connect","ownProps","activeCategory","CategoryTitle","activeCategoryName","ProductList","observer","IntersectionObserver","loadMoreProductsHandler","elementToObserve","current","observe","actions","products","concat","entries","isIntersecting","next","product","push","speed","viewBox","backgroundColor","foregroundColor","x","y","rx","ry","width","height","unshift","loading","previous","a","token","localStorage","getItem","res","auth","isAuthenticated","Login","onSubmitHandler","inputHandler","email","password","logginError","authenticated","history","method","headers","body","JSON","stringify","err","setItem","onSubmit","action","$","require","jsZip","window","JSZip","ResourceTable","recordsTable","modal","selectedRowData","sourceURL","newSourceURL","DataTable","ajax","url","load","$recordsTable","_this","asyncTable","initComplete","api","columns","every","column","dataSrc","header","append","on","splittedDataSrc","split","parameter","forEach","charAt","toUpperCase","slice","trim","footerCallback","row","totalDollars","reduce","b","pageTotalDollars","footer","html","Intl","NumberFormat","currency","format","totalBs","pageTotalBs","dom","select","buttons","text","extend","messageTop","exportOptions","modifier","attr","setModalAction","e","datatable","node","config","selected","setSelectedRowData","confirm","status","reload","error","catch","discountId","discount","serverSide","results","count","console","log","productId","grossTotalBs","grossTotalDollars","dolarReference","netIncomeDollars","profitPercent","netIncomeBs","d","start","xhr","code","paging","lengthMenu","pageLength","ordering","order","sorting","val","tr","closest","child","isShown","hide","removeClass","childFormat","show","addClass","addEventListener","children","focus","tabIndex","role","aria-labelledby","aria-hidden","modalStructure","Categories","submitSuccess","submitError","modalAction","submitHandler","editCategoryHandler","categoryName","draw","title","data-dismiss","aria-label","htmlFor","required","Clients","autoFocus","CustomSelect","options","toString","Math","ceil","inputValue","callback","item","label","roundToNiceNumber","loadOptions","defaultOptions","inputId","isMulti","isClearable","innerRef","changeHandler","Products","selectedCategories","productImageFile","success","discountPercent","discountStartDate","discountEndDate","discountSubmitHandler","optionChangeHandler","CustomSelectRef","productForm","closeButton","selectedOptions","actionType","files","categoriesID","alert","formData","FormData","reset","click","response","percent","startDate","endDate","render","meta","disc","step","min","Sales","childRowInfo","saleProducts","saleProduct","quantity","defaultContent","Suppliers","rif","inputChangeHandler","Supplyings","supplier","supplierChangeHandler","productChangeHandler","supplierSelect","productSelect","supplyingForm","selectedOption","supplierId","Users","permissions","form","Navigation","logout","removeItem","activeNavLink","href","data-toggle","data-target","aria-controls","aria-expanded","to","SalesControl","selectedProduct","addedProducts","subtotalDollars","subtotalBs","stockError","productsHandler","onChangeHandler","saleSubmitButton","sendSaleForm","quantityInput","productsTable","ctrlKey","stock","productFormatted","priceBs","totalFormattedDollars","totalFormattedBs","productExistsInTable","findIndex","Object","assign","parseFloat","scrollTop","scrollHeight","newProducts","totalToSubtractDollars","totalToSubtractBs","currentTarget","disabled","setTimeout","hidden","scope","Inventory","moment","Reports","resource","parameters","reportForm","resourceTable","dateRangeFromValue","dateRangeToValue","greaterThanDate","lowerThanDate","equalDate","previousParameters","find","Date","subtract","prop","changeSourceURL","salesColumns","supplyingsColumns","defaultChecked","PrivateRoute","component","rest","pathname","from","location","Dashboard","formattedDolareReference","newDolarReference","fetchDolarReference","dolarReferenceSubmitHandler","closeEditDolarModalButton","path","tabindex","initialState","activeCategoryId","categoryId","rootReducer","combineReducers","reducers","store","createStore","App","exact","Boolean","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports","loadProducts","setLoading","loadCategories","setActiveCategoryId","setActiveCategoryName"],"mappings":"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","file":"static/js/main.8f31d4f8.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Suggestions extends Component {\r\n\r\n    render() {\r\n        if (this.props.noResults) {\r\n            return (\r\n                <ul className=\"list-group position-absolute w-100\" >\r\n                    <li className=\"list-group-item text-justify\">No se encontraron resultados</li>\r\n                </ul>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <ul className=\"list-group position-absolute w-100 suggestionsBox\" >\r\n                    {this.props.suggestions.map(suggestion => {\r\n                        if (this.props.onlyName) {\r\n                            return <div onClick={this.props.clickHandler} key={suggestion.id} productid={suggestion.id} className=\"text-justify\">\r\n                                <li className=\"list-group-item\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-1\">\r\n                                            <img style={{ maxWidth: \"35px\" }} src={suggestion.imagePath} alt=\"IMG\" />\r\n                                        </div>\r\n                                        <div className=\"col-6 float-left\">\r\n                                            <h5 className=\"font-weight-bold\" id=\"productName\">{suggestion.name}</h5>\r\n                                        </div>\r\n                                    </div>\r\n                                </li>\r\n                            </div>\r\n                        }\r\n                        else {\r\n                            return <li onClick={this.props.clickHandler} key={suggestion.id} className=\"list-group-item text-justify\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12 col-sm-6 col-md-12 col-lg-12 col-xl-6\">\r\n                                        <img className=\"\" style={{ maxWidth: \"35px\" }} src={suggestion.imagePath} alt=\"IMG\" />\r\n                                        <span id=\"productName font-weight-bold\">{suggestion.name}</span>\r\n                                    </div>\r\n                                    <div className=\"col-6 col-sm-4 col-md-6 col-lg-6 col-xl-4\">\r\n                                        <div className=\"input-group \">\r\n                                            <input className=\"form-control text-center\" style={{ minWidth: \"45px\", maxWidth: \"70px\" }} type=\"number\" defaultValue=\"1\" name=\"numberOfItems\" id=\"numberOfItems\" />\r\n                                            <input className=\"bg-dark text-light\" type=\"button\" value=\"Comprar\" />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-6 col-sm-2 col-md-6 col-lg-6 col-xl-2 \">\r\n                                        <span className=\"text-danger\">{`${suggestion.price} Bs.`}</span>\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n                        }\r\n                    })}\r\n                </ul>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Suggestions","import React, { Component } from \"react\";\r\nimport OutsideClickHandler from 'react-outside-click-handler';\r\nimport Suggestions from \"./Suggestions\";\r\nimport debounce from \"lodash.debounce\";\r\n\r\nclass SearchInput extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {\r\n            showSuggestions: false,\r\n            suggestions: [],\r\n            noResults: false\r\n        };\r\n\r\n        this.searchHandler = debounce(this.searchHandler, 500);\r\n        this.headerContainer = React.createRef();\r\n        this.onBlurHandler = this.onBlurHandler.bind(this);\r\n    }\r\n\r\n    searchHandler(event) {\r\n        if (event.target.value.length > 0) {\r\n            fetch(`/api/products?name=${event.target.value}&page=1&limit=10`)\r\n                .then(result => result.json())\r\n                .then(result => {\r\n                    if (result.data.length > 0) {\r\n                        this.setState({\r\n                            showSuggestions: true,\r\n                            suggestions: result.data,\r\n                            noResults: false\r\n                        });\r\n                    }\r\n                    else {\r\n                        this.setState({\r\n                            showSuggestions: true,\r\n                            noResults: true\r\n                        });\r\n                    }\r\n\r\n                });\r\n        }\r\n        else {\r\n            this.setState({\r\n                showSuggestions: false,\r\n                suggestions: []\r\n            })\r\n        }\r\n    }\r\n    onBlurHandler() {\r\n        this.setState({\r\n            showSuggestions: false\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={this.props.parentClassName}>\r\n                <input onChange={event => {\r\n                    event.persist();\r\n                    this.searchHandler(event);\r\n                }} className={this.props.className} type=\"text\" placeholder=\"Buscar Producto\" id=\"searchInput\" />\r\n                <div ref={this.suggestionBox} className=\"\">\r\n                    {this.state.showSuggestions &&\r\n                        <OutsideClickHandler\r\n                            onOutsideClick={this.onBlurHandler}><Suggestions suggestions={this.state.suggestions} noResults={this.state.noResults} clickHandler={this.props.clickHandler} onlyName={this.props.onlyName}></Suggestions>\r\n                        </OutsideClickHandler>}\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchInput;","import React, { Component } from \"react\";\r\nimport SearchInput from \"../globalComponents/SearchInput\";\r\n\r\nclass Header extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.headerContainer = React.createRef();\r\n        this.scrollHandler = this.scrollHandler.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener(\"scroll\", this.scrollHandler);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"scroll\", this.scrollHandler);\r\n    }\r\n\r\n    scrollHandler() {\r\n        if (window.scrollY > 100) {\r\n            this.headerContainer.current.parentElement.style.backgroundColor = \"#3c4055\";\r\n            this.headerContainer.current.parentElement.style.outlineStyle = \"solid\";\r\n            this.headerContainer.current.parentElement.style.outlineWidth = \"2px\";\r\n            //this.headerContainer.current.querySelector(\"#brand-title\").classList.replace(\"text-danger\", \"text-light\")\r\n        }\r\n        else {\r\n            this.headerContainer.current.parentElement.style.backgroundColor = \"white\";\r\n            this.headerContainer.current.parentElement.style.outlineStyle = \"none\";\r\n            //this.headerContainer.current.querySelector(\"#brand-title\").classList.replace(\"text-light\", \"text-danger\")\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div ref={this.headerContainer} className=\"row\">\r\n                <div className=\"col-12 col-lg-5 brand-image-container\">\r\n                    <div className=\"brand-image h-100\" />\r\n                </div>\r\n                <SearchInput parentClassName={\"col-10 col-lg-4 my-auto\"} className={\"form-control\"} />\r\n                <div className=\"col-1 d-flex\">\r\n                    <img className=\"align-items-middle mx-auto\" src=\"/icons/shopping-cart.svg\" alt=\"Shopping Cart\" />\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component } from \"react\";\r\n\r\nclass Navigation extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row mt-3 mt-lg-0\">\r\n                <div className=\"col-12\">\r\n                    <nav className=\"navbar navbar-expand-md navbar-dark bg-dark pl-0 pr-0\">\r\n                        <button className=\"navbar-toggler col-sm-12\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                            <span className=\"navbar-toggler-icon\"></span>\r\n                        </button>\r\n                        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                            <ul className=\"navbar-nav mr-auto container\">\r\n                                <li className=\"nav-item\">\r\n                                    <a className=\"nav-link text-light font-weight-bold\" href=\"#\">HOME</a>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <a className=\"nav-link text-light font-weight-bold\" href=\"#\">PRODUCTOS</a>\r\n                                </li>\r\n\r\n                                <li className=\"nav-item\">\r\n                                    <a className=\"nav-link text-light font-weight-bold\" href=\"#\">SERVICIOS</a>\r\n                                </li>\r\n\r\n                                <li className=\"nav-item\">\r\n                                    <a className=\"nav-link text-light font-weight-bold\" href=\"#\">DESCUENTOS</a>\r\n                                </li>\r\n\r\n                                <li className=\"nav-item\">\r\n                                    <a className=\"nav-link text-light font-weight-bold\" href=\"#\">PROMOCIONES</a>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navigation","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as productActions from \"../actions/productActions\";\r\nimport * as categoriesActions from \"../actions/categoriesActions\";\r\n\r\nclass ProductCategories extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.fetchProducts = this.fetchProducts.bind(this);\r\n        this.categoryHandler = this.categoryHandler.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        fetch(\"/api/categories\")\r\n            .then(categories => categories.json())\r\n            .then(categories => {\r\n                if (categories.data.length > 0) {\r\n                    this.props.dispatch(categoriesActions.loadCategories(categories.data))\r\n                    this.props.dispatch(categoriesActions.setActiveCategoryId(document.querySelector(\".categoryItem, active\").getAttribute(\"categoryId\")))\r\n                    this.props.dispatch(categoriesActions.setActiveCategoryName(document.querySelector(\".categoryItem, active\").innerText));\r\n                }\r\n            });\r\n\r\n    }\r\n\r\n    categoryHandler(event) {\r\n        event.preventDefault();\r\n        if (!event.target.className.includes(\"active\")) {\r\n            event.target.parentElement.querySelector(\".active\").classList.remove(\"active\");\r\n            event.target.classList.add(\"active\");\r\n            this.props.dispatch(categoriesActions.setActiveCategoryId(event.target.getAttribute(\"categoryid\")))\r\n            this.props.dispatch(categoriesActions.setActiveCategoryName(event.target.innerText))\r\n            this.fetchProducts(1, 16, event.target.getAttribute(\"categoryid\"))\r\n        }\r\n    }\r\n\r\n    fetchProducts(page, limit, categories) {\r\n        this.props.dispatch(productActions.setLoading(true));\r\n        fetch(`/api/products?page=${page}&limit=${limit}&categories=${categories}`)\r\n            .then(result => result.json())\r\n            .then(paginatedProducts => {\r\n                this.props.dispatch(productActions.loadProducts(paginatedProducts));\r\n                this.props.dispatch(productActions.setLoading(false));\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"col-xs-6 col-sm-12 col-md-12 p-0 mt-0 mt-md-5 productcategoriesContainer\">\r\n                <div className=\"card rounded-0\">\r\n                    <div className=\"card-header\">\r\n                        <h5 className=\"card-title text-danger font-weight-bold\">Categorias</h5>\r\n                    </div>\r\n                    <div className=\"card-body p-0\">\r\n                        <div className=\"list-group\">\r\n                            {\r\n                                this.props.categories ?\r\n                                    this.props.categories.map((category, index) => {\r\n                                        if (index === 0) {\r\n                                            return <li onClick={this.categoryHandler} categoryid={category.id} key={category.id} className=\"categoryItem list-group-item active btn\">{category.name}</li>\r\n                                        }\r\n                                        else {\r\n                                            return <li onClick={this.categoryHandler} categoryid={category.id} key={category.id} className=\"categoryItem list-group-item btn\">{category.name}</li>\r\n                                        }\r\n                                    })\r\n                                    :\r\n                                    <span>No hay categorias</span>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\nfunction mapStateToProps(state, ownProps) {\r\n    return {\r\n        categories: state.categories.data,\r\n        activeCategory: state.categories.activeCategory\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(ProductCategories);","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass CategoryTitle extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <h3 className=\"float-left text-danger mt-2\">{this.props.activeCategory}</h3>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n    return {\r\n        activeCategory: state.categories.activeCategoryName\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(CategoryTitle);","import React, { Component } from \"react\";\r\nimport ContentLoader from 'react-content-loader'\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../actions/productActions\";\r\nimport CategoryTitle from \"../components/CategoryTitle\";\r\n\r\nclass ProductList extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.observer = new IntersectionObserver(this.loadMoreProductsHandler.bind(this));\r\n        this.elementToObserve = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchProducts(1, 16);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.elementToObserve.current) {\r\n            this.observer.observe(this.elementToObserve.current)\r\n        }\r\n    }\r\n\r\n    fetchProducts(page, limit, categories = 1) {\r\n        this.props.dispatch(actions.setLoading(true));\r\n        fetch(`/api/products?page=${page}&limit=${limit}&categories=${categories}`)\r\n            .then(result => result.json())\r\n            .then(paginatedProducts => {\r\n                paginatedProducts.data = this.props.products.concat(paginatedProducts.data);\r\n                this.props.dispatch(actions.loadProducts(paginatedProducts));\r\n                this.props.dispatch(actions.setLoading(false));\r\n            });\r\n    }\r\n\r\n    loadMoreProductsHandler(entries) {\r\n        if (entries[0].isIntersecting) {\r\n            if (this.props.next) {\r\n                this.fetchProducts(this.props.next.page, this.props.next.limit, this.props.activeCategory)\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.props.products.length > 0) {\r\n            let products = this.props.products.map((product, index) => {\r\n                return (\r\n                    <div className=\"col-6 col-sm-6 col-md-4 col-lg-3 p-0 pr-2 pb-2\" key={index}>\r\n                        <div className=\"card\">\r\n                            <img className=\"card-img-top productImage\" src={product.imagePath} alt=\"Imagen del producto\" />\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title font-weight-bold overflow-hidden text-truncate text-dark\">{product.name}</h5>\r\n                                <h5 className=\"text-danger\">Bs. {product.price}</h5>\r\n                            </div>\r\n                            <div className=\"card-footer\">\r\n                                <div className=\"input-group d-flex justify-content-center\">\r\n                                    <input className=\"form-control text-center\" style={{ maxWidth: \"35%\" }} type=\"number\" defaultValue=\"1\" name=\"numberOfItems\" id=\"numberOfItems\" />\r\n                                    <input className=\"bg-dark text-light\" type=\"button\" value=\"Comprar\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            });\r\n\r\n            if (this.props.next) {\r\n                products.push((\r\n                    <div className=\"col-xs-12 col-sm-6 col-md-4 col-lg-3 p-0 pr-2 pb-2\" key=\"contentLoader\" ref={this.elementToObserve}>\r\n                        <ContentLoader\r\n                            speed={1}\r\n                            viewBox=\"0 0 200 400\"\r\n                            backgroundColor=\"#f3f3f3\"\r\n                            foregroundColor=\"#ecebeb\"\r\n                        >\r\n                            <rect x=\"0\" y=\"6\" rx=\"0\" ry=\"0\" width=\"239\" height=\"250\" />\r\n                            <rect x=\"0\" y=\"292\" rx=\"0\" ry=\"0\" width=\"239\" height=\"15\" />\r\n                            <rect x=\"59\" y=\"291\" rx=\"0\" ry=\"0\" width=\"2\" height=\"0\" />\r\n                            <rect x=\"0\" y=\"313\" rx=\"0\" ry=\"0\" width=\"239\" height=\"15\" />\r\n                            <rect x=\"0\" y=\"361\" rx=\"0\" ry=\"0\" width=\"239\" height=\"36\" />\r\n                        </ContentLoader >\r\n                    </div>\r\n                ))\r\n            }\r\n            products.unshift(<div className=\"col-12\">\r\n                <CategoryTitle />\r\n            </div>)\r\n            return products\r\n        }\r\n        else if (this.props.loading) {\r\n            return <p>Loading</p>\r\n        }\r\n        else {\r\n            return <p>No hay productos</p>\r\n        }\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n    return {\r\n        products: state.products.data,\r\n        next: state.products.next,\r\n        previous: state.products.previous,\r\n        loading: state.products.loading,\r\n        activeCategory: state.categories.activeCategory\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ProductList);","import React, { Component } from \"react\";\r\n\r\nclass BackToTopButton extends Component {\r\n    constructor() {\r\n        super()\r\n        this.backToTopButton = React.createRef();\r\n\r\n        this.state = {\r\n            show: false\r\n        }\r\n\r\n        this.scrollHandler = this.scrollHandler.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener(\"scroll\", this.scrollHandler)\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener('scroll', this.scrollHandler);\r\n    }\r\n    scrollHandler() {\r\n        if (window.scrollY > 100) {\r\n            this.setState({\r\n                show: true\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                show: false\r\n            });\r\n        }\r\n    }\r\n\r\n    clickHandler() {\r\n        window.scrollTo(0, 0);\r\n    }\r\n    render() {\r\n        return this.state.show && <button ref={this.backToTopButton} onClick={this.clickHandler} id=\"back-to-top\" className=\"btn btn-secondary btn-lg back-to-top\">Back to Top</button>\r\n    }\r\n}\r\n\r\nexport default BackToTopButton","async function isAuthenticated() {\r\n    let token = localStorage.getItem(\"jwt\");\r\n    if (!token) return false;\r\n    return fetch(`/sessions/isAuthenticated?token=${token}`)\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            return res.auth;\r\n        });\r\n}\r\n\r\nexport default isAuthenticated","import React, { Component } from \"react\";\r\nimport isAuthenticated from \"../requests/isAuthenticated\"\r\nclass Login extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.onSubmitHandler = this.onSubmitHandler.bind(this);\r\n        this.inputHandler = this.inputHandler.bind(this);\r\n\r\n        this.state = {\r\n            email: null,\r\n            password: null,\r\n            logginError: null\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        isAuthenticated().then(authenticated => {\r\n            if (authenticated) {\r\n                this.props.history.push(\"/\")\r\n            }\r\n        })\r\n    }\r\n    onSubmitHandler(event) {\r\n        event.preventDefault();\r\n        this.setState({\r\n            logginError: null\r\n        })\r\n        fetch(\"/sessions\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                email: this.state.email,\r\n                password: this.state.password\r\n            })\r\n        }).then(result => result.json())\r\n            .then(result => {\r\n                if (result.err) {\r\n                    this.setState({\r\n                        logginError: result.err\r\n                    })\r\n                }\r\n                else {\r\n                    localStorage.setItem(\"jwt\", result.token);\r\n                    this.props.history.push(\"/\");\r\n                }\r\n            });\r\n    }\r\n\r\n    inputHandler(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container h-100 col-10 col-md-4\">\r\n                <div className=\"row h-100 justify-content-center align-items-center\">\r\n                    <form onSubmit={this.onSubmitHandler} className=\"col-12\" action=\"/sessions\" method=\"POST\">\r\n                        <div className=\"form-group\">\r\n                            <input onChange={this.inputHandler} type=\"text\" className=\"form-control\" name=\"email\" id=\"email\" placeholder=\"Email\" />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input onChange={this.inputHandler} type=\"password\" className=\"form-control\" name=\"password\" id=\"password\" placeholder=\"Password\" />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <button className=\"btn btn-primary\" type=\"submit\">Enviar</button>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <p className=\"text-danger\">{this.state.logginError}</p>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Login;","import React, { Component } from \"react\";\r\nimport debounce from \"lodash.debounce\";\r\n\r\n\r\nconst $ = require('jquery');\r\nconst DataTable = require('datatables.net');\r\nconst jsZip = require('jszip');\r\nrequire('pdfmake');\r\nrequire('datatables.net-buttons-dt');\r\nrequire('datatables.net-buttons/js/buttons.html5.js');\r\nrequire('datatables.net-buttons/js/buttons.print.js');\r\nrequire('datatables.net-buttons/js/buttons.colVis.js');\r\nrequire('datatables.net-select-dt');\r\nwindow.JSZip = jsZip;\r\n\r\nclass ResourceTable extends Component {\r\n\r\n    constructor(props) {\r\n        super();\r\n\r\n        this.recordsTable = React.createRef();\r\n        this.modal = React.createRef();\r\n\r\n        this.state = {\r\n            selectedRowData: null,\r\n            sourceURL: props.sourceURL\r\n        }\r\n\r\n    }\r\n\r\n    changeSourceURL(newSourceURL) {\r\n        let recordsTable = this.recordsTable.current;\r\n        let $recordsTable = $(recordsTable);\r\n\r\n        $recordsTable.DataTable().ajax.url(newSourceURL).load();\r\n    }\r\n\r\n    componentDidMount() {\r\n        let recordsTable = this.recordsTable.current;\r\n        let $recordsTable = $(recordsTable);\r\n        var _this = this;\r\n        if (this.props.asyncTable) {\r\n            $recordsTable = $recordsTable.DataTable({\r\n                initComplete: function () {\r\n                    this.api().columns().every(function () {\r\n                        var column = this;\r\n                        if (column.dataSrc() == \"createdAt\" || column.dataSrc() == \"updatedAt\") {\r\n                            $(this.header()).append(\"<br><input class='p-0 m-0 h-100' type='date' />\");\r\n                        }\r\n                        else {\r\n                            $(this.header()).append(\"<br><input class='p-0 m-0 h-100' type='text' placeholder='Filtrar'/>\");\r\n                        }\r\n                        $('input', this.header()).on(\"keyup change\", function () {\r\n                            let splittedDataSrc = column.dataSrc().split(\".\");\r\n                            let parameter = \"\";\r\n                            splittedDataSrc.forEach((split, index) => {\r\n                                if (index == 0) {\r\n                                    parameter = splittedDataSrc[0];\r\n                                }\r\n                                else {\r\n                                    parameter += splittedDataSrc[index].charAt(0).toUpperCase() + splittedDataSrc[index].slice(1);\r\n                                }\r\n                            });\r\n                            if (_this.props.sourceURL.includes(\"?\")) {\r\n                                $recordsTable.ajax.url(`${_this.props.sourceURL}&${parameter}=${this.value.trim()}`).load();\r\n                            }\r\n                            else {\r\n                                $recordsTable.ajax.url(`${_this.props.sourceURL}?${parameter}=${this.value.trim()}`).load();\r\n\r\n                            }\r\n                        });\r\n\r\n                    });\r\n                },\r\n                footerCallback: function (row, data) {\r\n                    var api = this.api();\r\n                    api.columns().every(function () {\r\n                        var column = this;\r\n                        if (column.dataSrc() == \"grossTotalDollars\") {\r\n                            let totalDollars = api\r\n                                .column(3)\r\n                                .data()\r\n                                .reduce(function (a, b) {\r\n                                    return a + b\r\n                                }, 0);\r\n                            let pageTotalDollars = api\r\n                                .column(3, { page: 'current' })\r\n                                .data()\r\n                                .reduce(function (a, b) {\r\n                                    return a + b\r\n                                }, 0);\r\n\r\n                            if (totalDollars) {\r\n                                $(column.footer()).html(\r\n                                    `${Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(pageTotalDollars)} <br>\r\n                                            <span class=\"text-danger\">(${Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(totalDollars)} Total)</span>`\r\n                                );\r\n                            }\r\n                            else {\r\n                                $(column.footer()).html(\"\");\r\n                            }\r\n\r\n                        }\r\n                        if (column.dataSrc() == \"grossTotalBs\") {\r\n                            let totalBs = api\r\n                                .column(4)\r\n                                .data()\r\n                                .reduce(function (a, b) {\r\n                                    return a + b\r\n                                }, 0);\r\n\r\n                            let pageTotalBs = api\r\n                                .column(4, { page: 'current' })\r\n                                .data()\r\n                                .reduce(function (a, b) {\r\n                                    return a + b\r\n                                }, 0);\r\n                            if (pageTotalBs) {\r\n                                $(column.footer()).html(\r\n                                    `${Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(pageTotalBs)} <br>\r\n                                        <span class=\"text-danger\">(${Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(totalBs)} Total)</span>`\r\n                                );\r\n                            } else {\r\n                                $(column.footer()).html(\"\");\r\n                            }\r\n                        }\r\n                        if (column.dataSrc() == \"netIncomeDollars\") {\r\n                            let totalDollars = api\r\n                                .column(5)\r\n                                .data()\r\n                                .reduce(function (a, b) {\r\n                                    return a + b\r\n                                }, 0);\r\n\r\n                            let pageTotalDollars = api\r\n                                .column(5, { page: 'current' })\r\n                                .data()\r\n                                .reduce(function (a, b) {\r\n                                    return a + b\r\n                                }, 0);\r\n                            if (pageTotalDollars) {\r\n                                $(column.footer()).html(\r\n                                    `${Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(pageTotalDollars)} <br>\r\n                                        <span class=\"text-danger\">(${Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(totalDollars)} Total)</span>`\r\n                                );\r\n                            } else {\r\n                                $(column.footer()).html(\"\");\r\n                            }\r\n                        }\r\n                        if (column.dataSrc() == \"netIncomeBs\") {\r\n                            let totalBs = api\r\n                                .column(6)\r\n                                .data()\r\n                                .reduce(function (a, b) {\r\n                                    return a + b\r\n                                }, 0);\r\n\r\n                            let pageTotalBs = api\r\n                                .column(6, { page: 'current' })\r\n                                .data()\r\n                                .reduce(function (a, b) {\r\n                                    return a + b\r\n                                }, 0);\r\n                            if (pageTotalBs) {\r\n                                $(column.footer()).html(\r\n                                    `${Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(pageTotalBs)} <br>\r\n                                        <span class=\"text-danger\">(${Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(totalBs)} Total)</span>`\r\n                                );\r\n                            } else {\r\n                                $(column.footer()).html(\"\");\r\n                            }\r\n                        }\r\n                    })\r\n                },\r\n                dom: 'Brltip',\r\n                select: \"single\",\r\n                buttons: [{\r\n                    text: \"Imprimir\",\r\n                    name: \"imprimir\",\r\n                    className: \"btn btn-secondary float-right\",\r\n                    extend: \"print\",\r\n                    messageTop: \"Reporte\",\r\n                    footer: true,\r\n                    exportOptions: {\r\n                        modifier: {\r\n                            page: 'all'\r\n                        },\r\n                        columns: (_this.props.sourceURL.includes(\"products\")) ? [1, 2, 3, 4] : \":visible\"\r\n                    }\r\n                }].concat(this.props.actions.map(action => {\r\n                    if (action == \"add\") {\r\n                        return {\r\n                            text: 'Add',\r\n                            name: 'add',\r\n                            className: \"btn btn-success\",\r\n                            attr: {\r\n                                \"data-toggle\": \"modal\",\r\n                                \"data-target\": \"#exampleModal\"\r\n                            },\r\n                            action: function () {\r\n                                _this.props.setModalAction(\"add\")\r\n                            }\r\n                        }\r\n                    }\r\n                    if (action == \"edit\") {\r\n                        return {\r\n                            text: 'Edit',\r\n                            name: 'edit',\r\n                            className: \"btn btn-secondary\",\r\n                            extend: \"selected\",\r\n                            attr: {\r\n                                \"data-toggle\": \"modal\",\r\n                                \"data-target\": \"#exampleModal\"\r\n                            },\r\n                            action: (e, datatable, node, config) => {\r\n                                var selectedRowData = datatable.row({ selected: true }).data();\r\n                                _this.props.setSelectedRowData(selectedRowData);\r\n                                _this.props.setModalAction(\"edit\");\r\n                            }\r\n                        };\r\n                    }\r\n                    if (action == \"delete\") {\r\n                        return {\r\n                            text: 'Delete',\r\n                            name: 'delete',\r\n                            className: \"btn btn-danger\",\r\n                            extend: \"selected\",\r\n                            action: function (e, datatable, node, config) {\r\n                                var selectedRowData = datatable.row({ selected: true }).data();\r\n                                var r = window.confirm(\"¿Está seguro que desea eliminar este registro?\");\r\n                                if (r == true) {\r\n                                    fetch(`${_this.props.sourceURL}/${selectedRowData.id}`, {\r\n                                        method: \"DELETE\",\r\n                                        headers: {\r\n                                            \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n                                        }\r\n                                    })\r\n                                        .then(res => {\r\n                                            if (res.status == 204) {\r\n                                                datatable.ajax.reload();\r\n                                            }\r\n                                            else {\r\n                                                res.json().then(error => {\r\n                                                    _this.setState({\r\n                                                        error\r\n                                                    })\r\n                                                })\r\n                                            }\r\n                                        })\r\n                                        .catch(error => {\r\n                                            _this.setState({\r\n                                                error\r\n                                            })\r\n                                        })\r\n                                }\r\n\r\n                            }\r\n                        }\r\n                    }\r\n                    if (action == \"date-range\") {\r\n                        return {\r\n                            text: 'Reload',\r\n                            name: 'reload',\r\n                            className: \"btn btn-primary\",\r\n                            action: function (e, datatable, node, config) {\r\n                                datatable.ajax.url(_this.state.sourceURL).load();\r\n                            }\r\n                        }\r\n                    }\r\n                    if (action == \"discount\") {\r\n                        return [\r\n                            {\r\n                                text: 'Apply Discount',\r\n                                name: 'discountButton',\r\n                                className: \"btn btn-primary\",\r\n                                attr: {\r\n                                    \"data-toggle\": \"modal\",\r\n                                    \"data-target\": \"#discountModal\"\r\n                                },\r\n                                extend: \"selected\",\r\n                                action: function (e, datatable, node, config) {\r\n                                    var selectedRowData = datatable.row({ selected: true }).data();\r\n                                    _this.props.setSelectedRowData(selectedRowData);\r\n                                    _this.props.setModalAction(\"applyDiscount\")\r\n\r\n                                }\r\n\r\n                            },\r\n                            {\r\n                                text: 'Cancel Discount',\r\n                                name: 'cancelDiscountButton',\r\n                                className: \"btn btn-danger\",\r\n                                extend: \"selected\",\r\n                                action: function (e, datatable, node, config) {\r\n                                    let response = window.confirm(\"¿Seguro que desea eliminar el descuento?\");\r\n                                    if (response == true) {\r\n                                        let selectedRowData = datatable.row({ selected: true }).data();\r\n                                        let discountId = selectedRowData.discount[0].id;\r\n                                        fetch(`/api/discounts/${discountId}`, {\r\n                                            headers: {\r\n                                                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n                                            },\r\n                                            method: \"DELETE\"\r\n                                        })\r\n                                            .then(res => {\r\n                                                if (res.status == 204) {\r\n                                                    datatable.ajax.reload();\r\n                                                }\r\n                                            })\r\n                                    }\r\n                                    else {\r\n\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                        ]\r\n                    }\r\n\r\n                })),\r\n                serverSide: true,\r\n                ajax: {\r\n                    url: this.state.sourceURL,\r\n                    dataSrc: function (results) {\r\n                        if (typeof results.count == \"object\") {\r\n                            console.log(\"yes\");\r\n                            results.data.forEach((row, index) => {\r\n                                if (row.productId == results.count[index].id) {\r\n                                    row.count = results.count[index].count\r\n                                }\r\n                            })\r\n                        }\r\n\r\n                        if (_this.props.sourceURL.includes(\"/api/sales\") && _this.props.sourceURL.includes(\"group=true\")) {\r\n                            results.data.forEach((row, index) => {\r\n                                row.product = row.product[0];\r\n                                console.log(row);\r\n                                //row.transactions = results.count.reverse()[index].count;\r\n                                row.grossTotalBs = row.grossTotalDollars * row.dolarReference;\r\n\r\n                                row.netIncomeDollars = row.grossTotalDollars * (row.product.profitPercent / 100);\r\n                                row.netIncomeBs = row.netIncomeDollars * row.dolarReference;\r\n                            })\r\n                        }\r\n                        else if (_this.props.sourceURL.includes(\"/api/supplyings\") && _this.props.sourceURL.includes(\"group=true\")) {\r\n                            results.data.forEach((row, index) => {\r\n                                //row.transactions = results.count.reverse()[index].count;\r\n                                row.grossTotalBs = row.grossTotalDollars * row.dolarReference;\r\n                            })\r\n                        }\r\n                        return results.data;\r\n                    },\r\n                    headers: { 'Authorization': `Bearer ${localStorage.getItem(\"jwt\")}` },\r\n                    data: function (d) {\r\n                        if (d.length != -1) {\r\n                            d.page = d.start / d.length + 1;\r\n                            d.limit = d.length;\r\n                        }\r\n                        else {\r\n                            d.page = 1;\r\n                            d.limit = 0;\r\n                        }\r\n\r\n                    },\r\n                    error: function (xhr, error, code) {\r\n                        //alert(code)\r\n                    }\r\n                },\r\n                paging: true,\r\n                lengthMenu: [[10, 25, 50, 100, 1000000000000000], [10, 25, 50, 100, \"All\"]],\r\n                pageLength: (this.props.sourceURL.includes(\"group=true\")) ? 1000000000000000 : 10,\r\n                columns: this.props.columns,\r\n                ordering: false,\r\n                order: _this.props.sorting || [[0, \"desc\"]]\r\n            });\r\n\r\n            if (this.props.actions.includes(\"date-range\")) {\r\n                $(\".dt-buttons\").append(`<div class=\"d-flex justify-content-end\">\r\n                    <label class=\"mr-2\" for=\"dateFrom\">From:</label>\r\n                    <input type=\"date\" id=\"dateFrom\" name=\"dateFrom\">\r\n                    <label class=\"mr-2 ml-2\" for=\"dateTo\">To:</label>\r\n                    <input type=\"date\" id=\"dateTo\" name=\"dateTo\">\r\n                    </div>`)\r\n\r\n                $(\".dt-buttons input[type=date]\").on(\"change\", function () {\r\n                    $recordsTable.ajax.url(`${_this.state.sourceURL}?from=${$(\"#dateFrom\").val()}&to=${$(\"#dateTo\").val()}`).load();\r\n                })\r\n            }\r\n\r\n            $('#resourceTable tbody').on('click', 'td.details-control', function () {\r\n                var tr = $(this).closest('tr');\r\n                var row = $recordsTable.row(tr);\r\n\r\n                if (row.child.isShown()) {\r\n                    // This row is already open - close it\r\n                    row.child.hide();\r\n                    tr.removeClass('shown');\r\n                }\r\n                else {\r\n                    // Open this row\r\n                    row.child(_this.props.childFormat(row.data())).show();\r\n                    tr.addClass('shown');\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            $recordsTable = $recordsTable.DataTable({\r\n                dom: \"\",\r\n                data: this.props.data,\r\n                columns: this.props.columns\r\n            });\r\n        }\r\n\r\n\r\n\r\n        this.modal.current.addEventListener(\"focus\", () => {\r\n            this.modal.current.querySelector(\".form-group\").children[0].focus();\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"bg-light table-responsive\">\r\n                <table id=\"resourceTable\" className=\"table table-bordered\" ref={this.recordsTable} >\r\n                    <thead></thead>\r\n                    <tbody></tbody>\r\n                    <tfoot>\r\n                        <tr>\r\n                            {this.props.columns.map((column, index) => {\r\n                                return <td key={index}></td>\r\n                            })}\r\n                        </tr>\r\n                    </tfoot>\r\n                </table>\r\n                {this.state.error && <span className=\"text-danger\">{this.state.error}</span>}\r\n                <div ref={this.modal} className=\"modal\" id=\"exampleModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n                        <div className=\"modal-content\">\r\n                            {this.props.modalStructure}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ResourceTable;","import React, { Component } from \"react\";\r\nimport ResourceTable from \"./ResourceTable\";\r\n\r\nimport moment from \"moment\";\r\n\r\nconst $ = require(\"jquery\");\r\nconst DataTable = require('datatables.net');\r\n\r\nclass Categories extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            submitSuccess: null,\r\n            submitError: null,\r\n            selectedRowData: null,\r\n            modalAction: null\r\n        }\r\n        this.submitHandler = this.submitHandler.bind(this);\r\n        this.setSelectedRowData = this.setSelectedRowData.bind(this);\r\n        this.editCategoryHandler = this.editCategoryHandler.bind(this);\r\n        this.setModalAction = this.setModalAction.bind(this);\r\n\r\n        this.categoryName = React.createRef();\r\n    }\r\n\r\n    submitHandler(event) {\r\n        event.preventDefault();\r\n        fetch((this.state.modalAction == \"add\") ? \"/api/categories\" : `/api/categories/${this.state.selectedRowData.id}`, {\r\n            method: (this.state.modalAction == \"add\") ? \"POST\" : \"PUT\",\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({ name: this.categoryName.current.value })\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if (res.error || res.err) {\r\n                    this.setState({\r\n                        submitError: res.error || res.err\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        submitSuccess: \"Se ha registrado con éxito\"\r\n                    })\r\n                    $(\"#resourceTable\").DataTable().draw();\r\n                }\r\n            })\r\n\r\n\r\n    }\r\n\r\n    editCategoryHandler() {\r\n        console.log(\"hola\");\r\n    }\r\n\r\n    setSelectedRowData(selectedRowData) {\r\n        this.setState({\r\n            selectedRowData\r\n        }, function () {\r\n            $(\"#name\").val(this.state.selectedRowData.name);\r\n        })\r\n    }\r\n\r\n    setModalAction(modalAction) {\r\n        this.setState({\r\n            modalAction\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1 className=\"text-danger float-left\">Categorías</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-3\">\r\n                    <div className=\"col-md-12\">\r\n                        <ResourceTable asyncTable={true} setModalAction={this.setModalAction} setSelectedRowData={this.setSelectedRowData} sourceURL={\"/api/categories\"} columns={[\r\n                            { title: \"ID\", data: \"id\" },\r\n                            { title: \"Nombre\", data: \"name\" },\r\n                            { title: \"Fecha creación\", data: \"createdAt\" }\r\n                        ]} actions={[\"add\", \"edit\"]} modalStructure={\r\n                            <form onSubmit={this.submitHandler} className=\"float-left\">\r\n                                <div className=\"modal-header\">\r\n                                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">New Category</h5>\r\n                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                        <span aria-hidden=\"true\">&times;</span>\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"name\">Category Name: </label>\r\n                                        <input ref={this.categoryName} className=\"form-control\" type=\"text\" name=\"name\" id=\"name\" required />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Cerrar</button>\r\n                                    <button type=\"submit\" className=\"btn btn-primary\">Enviar</button>\r\n                                </div>\r\n                                {this.state.submitError && <span className=\"text-danger\">{this.state.submitError}</span>}\r\n                                {this.state.submitSuccess && <span className=\"text-success\">{this.state.submitSuccess}</span>}\r\n                            </form>\r\n                        } />\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\nexport default Categories;","import React, { Component } from \"react\";\r\nimport ResourceTable from \"./ResourceTable\";\r\nimport $ from \"jquery\";\r\nconst moment = require(\"moment\");\r\n\r\nclass Clients extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.submitHandler = this.submitHandler.bind(this);\r\n        this.setSelectedRowData = this.setSelectedRowData.bind(this);\r\n        this.setModalAction = this.setModalAction.bind(this);\r\n    }\r\n    setSelectedRowData(selectedRowData) {\r\n        this.setState({\r\n            selectedRowData\r\n        }, function () {\r\n            $(\"#name\").val(this.state.selectedRowData.name);\r\n        })\r\n    }\r\n\r\n    setModalAction(modalAction) {\r\n        this.setState({\r\n            modalAction\r\n        })\r\n    }\r\n\r\n    submitHandler(event) {\r\n        event.preventDefault();\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1 className=\"text-danger float-left\">Clientes</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-3\">\r\n                    <div className=\"col-md-12\">\r\n                        <ResourceTable asyncTable={true} setSelectedRowData={this.setSelectedRowData} setModalAction={this.setModalAction} sourceURL={\"/api/clients\"} columns={[\r\n                            { title: \"ID\", data: \"id\" },\r\n                            { title: \"Nombre\", data: \"name\" },\r\n                            { title: \"Cédula\", data: \"cedula\" },\r\n                            { title: \"Fecha creación\", data: \"createdAt\" }\r\n                        ]} actions={[\"add\", \"edit\", \"delete\"]} modalStructure={\r\n                            <form onSubmit={this.submitHandler} className=\"float-left\">\r\n                                <div className=\"modal-header\">\r\n                                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">New Client</h5>\r\n                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                        <span aria-hidden=\"true\">&times;</span>\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"name\">Client Name: </label>\r\n                                        <input className=\"form-control\" type=\"text\" name=\"name\" id=\"name\" autoFocus />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"cedula\">Cédula: </label>\r\n                                        <input className=\"form-control\" type=\"text\" name=\"cedula\" id=\"cedula\" autoFocus />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Cerrar</button>\r\n                                    <button type=\"submit\" className=\"btn btn-primary\">Enviar</button>\r\n                                </div>\r\n                            </form>\r\n                        } />\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Clients;","import React, { Component } from \"react\";\r\nimport Async from 'react-select/async';\r\n\r\nclass CustomSelect extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            options: []\r\n        }\r\n\r\n        this.searchHandler = this.searchHandler.bind(this);\r\n    }\r\n\r\n    roundToNiceNumber(value) {\r\n        var val = 0;\r\n        if (value.toString().length == 4) {\r\n            val = Math.ceil(value / 100) * 100\r\n        }\r\n        else if (value.toString().length > 4) {\r\n            val = Math.ceil(value / 1000) * 1000\r\n        }\r\n\r\n        return val;\r\n    }\r\n\r\n    searchHandler(inputValue, callback) {\r\n        fetch(this.props.sourceURL || `/api/products?name=${inputValue}`)\r\n            .then(result => result.json())\r\n            .then(results => {\r\n                if (results.data.length > 0) {\r\n                    results.data.forEach(item => {\r\n                        item.value = item.name;\r\n                        if (item.imagePath) {\r\n                            item.label = [<img className=\"float-left\" style={{ maxWidth: \"20px\" }} src={item.imagePath} />, `${item.name} (${this.roundToNiceNumber(item.price * this.props.dolarReference)})`];\r\n                        }\r\n                        else {\r\n                            item.label = `${item.name} (${Intl.NumberFormat(\"es-VE\", { style: \"currency\", currency: \"VES\" }).format(this.roundToNiceNumber(item.price * this.props.dolarReference))})`\r\n                        }\r\n                    });\r\n                    callback(results.data)\r\n                }\r\n            });\r\n    }\r\n    render() {\r\n        return (\r\n            <Async\r\n                loadOptions={this.searchHandler}\r\n                defaultOptions\r\n                placeholder=\"Buscar\"\r\n                autoFocus\r\n                inputId=\"selectedProduct\"\r\n                isMulti={this.props.isMulti}\r\n                isClearable\r\n                ref={this.props.innerRef}\r\n                name={this.props.name}\r\n                onChange={this.props.changeHandler}\r\n                value={this.props.value}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default CustomSelect;","import React, { Component } from \"react\";\r\nimport ResourceTable from \"./ResourceTable\";\r\nimport CustomSelect from \"../globalComponents/CustomSelect\";\r\n\r\n\r\nimport moment from \"moment\";\r\nimport $ from \"jquery\";\r\nconst DataTable = require('datatables.net');\r\n\r\nclass Products extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {\r\n            selectedCategories: null,\r\n            name: \"\",\r\n            productImageFile: \"\",\r\n            profitPercent: \"\",\r\n            success: \"\",\r\n            error: \"\",\r\n            modalAction: null,\r\n            discountPercent: null,\r\n            discountStartDate: null,\r\n            discountEndDate: null,\r\n            selectedRowData: null\r\n        }\r\n\r\n        this.submitHandler = this.submitHandler.bind(this);\r\n        this.discountSubmitHandler = this.discountSubmitHandler.bind(this);\r\n        this.optionChangeHandler = this.optionChangeHandler.bind(this);\r\n        this.changeHandler = this.changeHandler.bind(this);\r\n        this.setModalAction = this.setModalAction.bind(this);\r\n        this.setSelectedRowData = this.setSelectedRowData.bind(this);\r\n\r\n        this.CustomSelectRef = React.createRef();\r\n        this.productForm = React.createRef();\r\n        this.closeButton = React.createRef();\r\n    }\r\n\r\n    setModalAction(modalAction) {\r\n        this.setState({\r\n            modalAction\r\n        })\r\n    }\r\n\r\n    setSelectedRowData(selectedRowData) {\r\n        let categories = [];\r\n        selectedRowData.category.forEach(category => {\r\n            categories.push({ id: category.id, label: category.name, value: category.name });\r\n        })\r\n        this.setState({\r\n            selectedRowData,\r\n            selectedCategories: categories,\r\n            name: selectedRowData.name,\r\n            profitPercent: selectedRowData.profitPercent\r\n        }, () => {\r\n            $(\"#name\").val(this.state.selectedRowData.name);\r\n            $(\"#profitPercent\").val(this.state.selectedRowData.profitPercent);\r\n        })\r\n    }\r\n\r\n    optionChangeHandler(selectedOptions, actionType) {\r\n        this.setState({\r\n            selectedCategories: selectedOptions\r\n        });\r\n    }\r\n\r\n    changeHandler(event) {\r\n        this.setState({\r\n            [event.target.name]: (event.target.type == \"file\") ? event.target.files[0] : event.target.value\r\n        });\r\n    }\r\n\r\n    submitHandler(event) {\r\n        event.preventDefault();\r\n        var categoriesID = \"\";\r\n        if (this.state.selectedCategories) {\r\n            this.state.selectedCategories.forEach((category, index) => {\r\n                categoriesID += category.id\r\n                if (index != this.state.selectedCategories.length - 1) {\r\n                    categoriesID += \",\"\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            alert(\"Seleccione las categorías\")\r\n        }\r\n\r\n        var formData = new FormData();\r\n\r\n        formData.append(\"productImageFile\", this.state.productImageFile);\r\n        formData.append(\"name\", this.state.name);\r\n        formData.append(\"profitPercent\", this.state.profitPercent);\r\n        formData.append(\"categories\", categoriesID);\r\n\r\n        fetch((this.state.modalAction == \"add\") ? \"/api/products\" : `/api/products/${this.state.selectedRowData.id}`, {\r\n            method: (this.state.modalAction == \"add\") ? \"POST\" : \"PATCH\",\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n                \"Accept\": \"application/json\"\r\n            },\r\n            body: formData\r\n        })\r\n            .then(res => {\r\n                if (res.status == 200) {\r\n                    this.setState({\r\n                        success: \"El producto se ha registrado con exito\"\r\n                    });\r\n                    this.productForm.current.reset();\r\n                    this.closeButton.current.click();\r\n                    $(\"#resourceTable\").DataTable().ajax.reload();\r\n                }\r\n                else if (res.status == 409) {\r\n                    res.json().then(response => {\r\n                        this.setState({\r\n                            error: response.error || response.err\r\n                        })\r\n                    })\r\n\r\n                }\r\n            })\r\n            .catch(error => {\r\n                this.setState({\r\n                    error: error\r\n                })\r\n            })\r\n    }\r\n\r\n    discountSubmitHandler(event) {\r\n        event.preventDefault();\r\n        if (this.state.discountPercent && this.state.discountStartDate && this.state.discountEndDate) {\r\n            fetch(\"/api/discounts\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                    productId: this.state.selectedRowData.id,\r\n                    percent: this.state.discountPercent,\r\n                    startDate: this.state.discountStartDate,\r\n                    endDate: this.state.discountEndDate\r\n                })\r\n            })\r\n                .then(res => {\r\n                    if (res.status == 200) {\r\n                        this.setState({\r\n                            success: \"Se ha registrado con éxito\"\r\n                        })\r\n                    } else {\r\n                        res.json().then(res => {\r\n                            this.setState({\r\n                                error: res.error || res.err\r\n                            })\r\n                        })\r\n                    }\r\n                })\r\n        }\r\n        else {\r\n            alert(\"Rellene todos los campos\")\r\n        }\r\n    }\r\n\r\n    roundToNiceNumber(value) {\r\n        var val = 0;\r\n        if (value.toString().length == 4) {\r\n            val = Math.ceil(value / 100) * 100\r\n        }\r\n        else if (value.toString().length > 4) {\r\n            val = Math.ceil(value / 1000) * 1000\r\n        }\r\n\r\n        return val;\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1 className=\"text-danger float-left\">Productos</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-3\">\r\n                    <div className=\"col-md-12\">\r\n                        <ResourceTable asyncTable={true} setSelectedRowData={this.setSelectedRowData} setModalAction={this.setModalAction} sourceURL={\"/api/products\"} columns={[\r\n                            {\r\n                                render: function (data, type, row, meta) {\r\n                                    if (row.imagePath) {\r\n                                        return `<img src=\"${row.imagePath}\" style=\"max-width:35px;\"/>`\r\n                                    }\r\n                                    else {\r\n                                        return \"\";\r\n                                    }\r\n                                },\r\n                                title: \"Imagen\"\r\n                            },\r\n                            { title: \"ID\", data: \"id\" },\r\n                            { title: \"Nombre\", data: \"name\" },\r\n                            { title: \"Precio $\", data: \"price\" },\r\n                            {\r\n                                render: (data) => {\r\n                                    return Intl.NumberFormat(\"es-Ve\", { style: \"currency\", currency: \"VES\" }).format(this.roundToNiceNumber(data * this.props.dolarReference))\r\n                                }, title: \"Precio Bs\", data: \"price\"\r\n                            },\r\n                            {\r\n                                render: function (data) {\r\n                                    return data + \"%\"\r\n                                }, title: \"Porcentaje de Ganancia\", data: \"profitPercent\"\r\n                            },\r\n                            {\r\n                                render: function (data, type, row, meta) {\r\n                                    let disc = data.map(discount => {\r\n                                        return discount.percent\r\n                                    })\r\n\r\n                                    return (disc.length) ? disc + \"%\" : 0 + \"%\"\r\n                                }, title: \"Descuento\", data: \"discount\"\r\n                            },\r\n                            {\r\n                                title: \"Descuento desde\", data: \"discount[0].startDate\"\r\n                            },\r\n                            {\r\n                                title: \"Descuento hasta\", data: \"discount[0].endDate\"\r\n                            },\r\n                            { title: \"Fecha creación\", data: \"createdAt\" },\r\n                            { title: \"Fecha actualización\", data: \"updatedAt\" }\r\n                        ]} actions={[\"add\", \"edit\", \"delete\", \"discount\"]} modalStructure={\r\n                            <form ref={this.productForm} onSubmit={this.submitHandler} className=\"float-left\">\r\n                                <div className=\"modal-header\">\r\n                                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">New Product</h5>\r\n                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                        <span aria-hidden=\"true\">&times;</span>\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"name\">Product Name: </label>\r\n                                        <input onChange={this.changeHandler} className=\"form-control\" type=\"text\" name=\"name\" id=\"name\" required />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"profitPercent\">Profit Percent: </label>\r\n                                        <div className=\"input-group\">\r\n                                            <div className=\"input-group-prepend\">\r\n                                                <div className=\"input-group-text\">%</div>\r\n                                            </div>\r\n                                            <input onChange={this.changeHandler} className=\"form-control\" type=\"number\" step=\"0.1\" name=\"profitPercent\" id=\"profitPercent\" required />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"productImageFile\">Imagen: </label>\r\n                                        <div className=\"custom-file\">\r\n                                            <input onChange={this.changeHandler} type=\"file\" className=\"custom-file-input\" id=\"productImageFile\" name=\"productImageFile\" />\r\n                                            <label className=\"custom-file-label\" htmlFor=\"image\">Choose file</label>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"price\">Categorías: </label>\r\n                                        <CustomSelect sourceURL=\"/api/categories\"\r\n                                            isMulti={true}\r\n                                            innerRef={this.CustomSelectRef}\r\n                                            changeHandler={this.optionChangeHandler}\r\n                                            value={this.state.selectedCategories}\r\n                                            required />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button ref={this.closeButton} type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Cerrar</button>\r\n                                    <button type=\"submit\" className=\"btn btn-primary\">Enviar</button>\r\n                                </div>\r\n                                {this.state.success && <span className=\"text-success\">{this.state.success}</span>}\r\n                                {this.state.error && <span className=\"text-danger\">{this.state.error}</span>}\r\n                            </form>\r\n                        } />\r\n                        <div id=\"discountModal\" className=\"modal\" tabIndex=\"-1\">\r\n                            <div className=\"modal-dialog\">\r\n                                <div className=\"modal-content\">\r\n                                    <div className=\"modal-header\">\r\n                                        <h5 className=\"modal-title\"></h5>\r\n                                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                            <span aria-hidden=\"true\">&times;</span>\r\n                                        </button>\r\n                                    </div>\r\n                                    <form onSubmit={this.discountSubmitHandler}>\r\n                                        <div className=\"modal-body\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"discountPercent\">Discount Percent: </label>\r\n                                                <div className=\"input-group\">\r\n                                                    <input onChange={this.changeHandler} className=\"form-control\" type=\"number\" step=\"0.01\" min=\"0\" name=\"discountPercent\" id=\"discountPercent\" required />\r\n                                                    <div className=\"input-group-append\">\r\n                                                        <div className=\"input-group-text\">%</div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <label htmlFor=\"discountStartDate\">Start Date:</label>\r\n                                                <div className=\"input-group\">\r\n                                                    <input onChange={this.changeHandler} className=\"form-control\" type=\"date\" name=\"discountStartDate\" id=\"discountStartDate\" required />\r\n                                                </div>\r\n                                                <label htmlFor=\"discountEndDate\">End Date:</label>\r\n                                                <div className=\"input-group\">\r\n                                                    <input onChange={this.changeHandler} className=\"form-control\" type=\"date\" name=\"discountEndDate\" id=\"discountEndDate\" required />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"modal-footer\">\r\n                                            <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Cerrar</button>\r\n                                            <button type=\"submit\" className=\"btn btn-primary\">Enviar</button>\r\n                                        </div>\r\n                                        {this.state.success && <span className=\"text-success\">{this.state.success}</span>}\r\n                                        {this.state.error && <span className=\"text-danger\">{this.state.error}</span>}\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Products;","import React, { Component } from \"react\";\r\n\r\nimport moment from \"moment\";\r\nimport ResourceTable from \"./ResourceTable\";\r\nclass Sales extends Component {\r\n    constructor() {\r\n        super()\r\n        this.submitHandler = this.submitHandler.bind(this);\r\n        this.roundToNiceNumber = this.roundToNiceNumber.bind(this);\r\n        this.childFormat = this.childFormat.bind(this);\r\n    }\r\n\r\n    submitHandler(event) {\r\n        event.preventDefault()\r\n        console.log(\"hola\");\r\n    }\r\n\r\n    roundToNiceNumber(value) {\r\n        var val = 0;\r\n        if (value.toString().length == 4) {\r\n            val = Math.ceil(value / 100) * 100\r\n        }\r\n        else if (value.toString().length > 4) {\r\n            val = Math.ceil(value / 1000) * 1000\r\n        }\r\n\r\n        return val;\r\n    }\r\n\r\n    childFormat(d) {\r\n        let childRowInfo = \"\";\r\n        d.saleProducts.forEach(saleProduct => {\r\n            childRowInfo += `\r\n            <div class='form-row align-items-center'>\r\n                    <div class=\"col-1\">\r\n                        <label for=\"productId\">Product ID</label>\r\n                        <input class=\"form-control\" id=\"productId\" value=\"${saleProduct.productId}\" disabled/>\r\n                    </div>\r\n                    <div class=\"col-4\">\r\n                        <label for=\"productName\">Name</label>\r\n                        <input class=\"form-control\" id=\"productName\" value=\"${saleProduct.product[0].name}\" disabled/>\r\n                    </div>\r\n                    <div class=\"col-1\">\r\n                        <label for=\"productPrice\">Price $</label>\r\n                        <input class=\"form-control\" id=\"productPrice\" value=\"$${saleProduct.price}\" disabled/>\r\n                    </div>\r\n                    <div class=\"col-1\">\r\n                        <label for=\"productPriceBs\">Price Bs</label>\r\n                        <input class=\"form-control\" id=\"productPriceBs\" value=\"Bs.S ${this.roundToNiceNumber(saleProduct.price * saleProduct.dolarReference)}\" disabled/>\r\n                    </div>\r\n                    <div class=\"col-1\">\r\n                        <label for=\"discount\">Discount</label>\r\n                        <input class=\"form-control\" id=\"discount\" value=\"${saleProduct.discount}%\" disabled/>\r\n                    </div>\r\n                    <div class=\"col-1\">\r\n                        <label for=\"productQuantity\">Quantity</label>\r\n                        <input class=\"form-control\" id=\"productQuantity\" value=\"${saleProduct.quantity}\" disabled/>\r\n                    </div>\r\n                    <div class=\"col-2\">\r\n                        <label for=\"dolarValue\">Dolar value</label>\r\n                        <input class=\"form-control\" id=\"dolarValue\" value=\"${Intl.NumberFormat(\"es-VE\", { style: \"currency\", currency: \"VES\" }).format(saleProduct.dolarReference)}\" disabled/>\r\n                    </div>\r\n            </div>\r\n            `\r\n        })\r\n        childRowInfo += \"\"\r\n        return childRowInfo\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1 className=\"text-danger float-left\">Ventas</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-3\">\r\n                    <div className=\"col-md-12\">\r\n                        <ResourceTable asyncTable={true} childFormat={this.childFormat} sourceURL={\"/api/sales\"} columns={[\r\n                            { title: \"ID\", data: \"id\" },\r\n                            {\r\n                                \"title\": \"Productos\",\r\n                                \"className\": 'details-control',\r\n                                \"orderable\": false,\r\n                                \"data\": \"productName\",\r\n                                defaultContent: '<button class=\"btn btn-success\">Ver Productos</button>'\r\n                            },\r\n                            { title: \"Fecha creación\", data: \"createdAt\" }\r\n\r\n                        ]} actions={[\"edit\", \"delete\"]} />\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Sales;","import React, { Component } from \"react\";\r\nimport moment from \"moment\";\r\nimport ResourceTable from \"./ResourceTable\";\r\n\r\nimport $ from \"jquery\";\r\nimport DataTable from \"datatables.net\";\r\nclass Suppliers extends Component {\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {\r\n            name: null,\r\n            rif: null,\r\n            success: null,\r\n            error: null\r\n        }\r\n        this.submitHandler = this.submitHandler.bind(this);\r\n        this.inputChangeHandler = this.inputChangeHandler.bind(this);\r\n        this.setModalAction = this.setModalAction.bind(this);\r\n\r\n    }\r\n\r\n    setModalAction(modalAction) {\r\n        this.setState({\r\n            modalAction\r\n        })\r\n    }\r\n\r\n    submitHandler(event) {\r\n        event.preventDefault();\r\n        if (this.state.name && this.state.rif) {\r\n            fetch(\"/api/suppliers\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                    name: this.state.name,\r\n                    rif: this.state.rif\r\n                })\r\n            })\r\n                .then(res => {\r\n                    if (res.status == 200) {\r\n                        this.setState({\r\n                            success: \"Se ha registrado de forma exitosa.\"\r\n                        });\r\n                        $(\"#resourceTable\").DataTable().draw();\r\n                    }\r\n                    else {\r\n                        res.text().then(error => {\r\n                            this.setState({\r\n                                error\r\n                            })\r\n                        })\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n    inputChangeHandler(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1 className=\"text-danger float-left\">Proveedores</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-3\">\r\n                    <div className=\"col-md-12\">\r\n                        <ResourceTable asyncTable={true} setModalAction={this.setModalAction} sourceURL={\"/api/suppliers\"} columns={[\r\n                            { title: \"ID\", data: \"id\" },\r\n                            { title: \"Nombre\", data: \"name\" },\r\n                            { title: \"RIF\", data: \"rif\" },\r\n                            { title: \"Fecha creación\", data: \"createdAt\" }\r\n\r\n                        ]} actions={[\"add\", \"edit\", \"delete\"]} modalStructure={\r\n                            <form onSubmit={this.submitHandler} className=\"float-left\">\r\n                                <div className=\"modal-header\">\r\n                                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">New Supplier</h5>\r\n                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                        <span aria-hidden=\"true\">&times;</span>\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"name\">Supplier Name: </label>\r\n                                        <input onChange={this.inputChangeHandler} className=\"form-control\" type=\"text\" name=\"name\" id=\"name\" required />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"rif\">RIF: </label>\r\n                                        <input onChange={this.inputChangeHandler} className=\"form-control\" type=\"text\" name=\"rif\" id=\"rif\" required />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Cerrar</button>\r\n                                    <button type=\"submit\" className=\"btn btn-primary\">Enviar</button>\r\n                                </div>\r\n                                {this.state.success && <span className=\"text-success\">{this.state.success}</span>}\r\n                                {this.state.error && <span className=\"text-danger\">{this.state.error}</span>}\r\n                            </form>\r\n                        } />\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Suppliers;","import React, { Component } from \"react\";\r\nimport moment from \"moment\";\r\nimport ResourceTable from \"./ResourceTable\";\r\nimport CustomSelect from \"../globalComponents/CustomSelect\";\r\n\r\nimport $ from \"jquery\";\r\nconst DataTable = require('datatables.net');\r\n\r\nclass Supplyings extends Component {\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {\r\n            supplier: null,\r\n            product: null,\r\n            price: null,\r\n            quantity: null,\r\n            success: null,\r\n            error: null\r\n        }\r\n        this.submitHandler = this.submitHandler.bind(this);\r\n        this.supplierChangeHandler = this.supplierChangeHandler.bind(this);\r\n        this.productChangeHandler = this.productChangeHandler.bind(this);\r\n        this.inputChangeHandler = this.inputChangeHandler.bind(this);\r\n        this.setModalAction = this.setModalAction.bind(this);\r\n\r\n        this.supplierSelect = React.createRef();\r\n        this.productSelect = React.createRef();\r\n        this.supplyingForm = React.createRef();\r\n\r\n    }\r\n\r\n    setModalAction(modalAction) {\r\n        this.setState({\r\n            modalAction\r\n        })\r\n    }\r\n\r\n    supplierChangeHandler(selectedOption) {\r\n        this.setState({\r\n            supplier: selectedOption\r\n        });\r\n    }\r\n\r\n    productChangeHandler(selectedOption) {\r\n        this.setState({\r\n            product: selectedOption\r\n        });\r\n    }\r\n\r\n    inputChangeHandler(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n    submitHandler(event) {\r\n        event.preventDefault();\r\n        if (this.state.supplier && this.state.product && this.state.price && this.state.quantity) {\r\n            fetch(\"/api/supplyings\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                    supplierId: this.state.supplier.id,\r\n                    productId: this.state.product.id,\r\n                    price: this.state.price,\r\n                    quantity: this.state.quantity,\r\n                    dolarReference: this.props.dolarReference\r\n                })\r\n            }).then(res => {\r\n                if (res.status == 200) {\r\n                    this.setState({\r\n                        success: \"Se ha registrado el abastecimiento con éxito\"\r\n                    })\r\n                    this.supplyingForm.current.reset();\r\n                    $(\"#resourceTable\").DataTable().draw();\r\n                }\r\n                else {\r\n                    res.text().then(error => {\r\n                        this.setState({\r\n                            error\r\n                        })\r\n                    })\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            alert(\"Por favor rellene todos los campos\")\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1 className=\"text-danger float-left\">Abastecimiento</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-3\">\r\n                    <div className=\"col-md-12\">\r\n                        <ResourceTable asyncTable={true} setModalAction={this.setModalAction} sourceURL={\"/api/supplyings\"} columns={[\r\n                            { title: \"ID\", data: \"id\" },\r\n                            { title: \"ID Proveedor\", data: \"supplierId\" },\r\n                            { title: \"Nombre Proveedor\", data: \"supplier.name\" },\r\n                            { title: \"ID Product\", data: \"productId\" },\r\n                            { title: \"Nombre Producto\", data: \"product.name\" },\r\n                            {\r\n                                render: function (data) {\r\n                                    return \"$\" + data\r\n                                }, title: \"Precio de Compra\", data: \"price\"\r\n                            },\r\n                            {\r\n                                render: function (data) {\r\n                                    return (data > 1) ? data + \" Unidades\" : data + \" Unidad\"\r\n                                }, title: \"Cantidad\", data: \"quantity\"\r\n                            },\r\n                            { title: \"Fecha creación\", data: \"createdAt\" },\r\n                            { title: \"Fecha actualización\", data: \"updatedAt\" }\r\n\r\n                        ]} actions={[\"add\", \"edit\", \"delete\"]} modalStructure={\r\n                            <form ref={this.supplyingForm} onSubmit={this.submitHandler} className=\"float-left\">\r\n                                <div className=\"modal-header\">\r\n                                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">New Supplying</h5>\r\n                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                        <span aria-hidden=\"true\">&times;</span>\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"supplierId\">Supplier ID: </label>\r\n                                        <CustomSelect sourceURL=\"/api/suppliers\"\r\n                                            isMulti={false}\r\n                                            innerRef={this.supplierSelect}\r\n                                            changeHandler={this.supplierChangeHandler} required />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"productId\">Product ID: </label>\r\n                                        <CustomSelect\r\n                                            isMulti={false}\r\n                                            innerRef={this.productSelect}\r\n                                            changeHandler={this.productChangeHandler} required />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"price\">Price: </label>\r\n                                        <input onChange={this.inputChangeHandler} className=\"form-control\" type=\"number\" step=\"0.00000000000000001\" name=\"price\" id=\"price\" required />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"quantity\">Quantity: </label>\r\n                                        <input onChange={this.inputChangeHandler} className=\"form-control\" type=\"number\" step=\"0.1\" name=\"quantity\" id=\"quantity\" required />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Cerrar</button>\r\n                                    <button type=\"submit\" className=\"btn btn-primary\">Enviar</button>\r\n                                </div>\r\n                                {this.state.success && <span className=\"text-success\">{this.state.success}</span>}\r\n                                {this.state.error && <span className=\"text-danger\">{this.state.error}</span>}\r\n                            </form>\r\n                        } />\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Supplyings;","import React, { Component } from \"react\";\r\nimport moment from \"moment\";\r\nimport ResourceTable from \"./ResourceTable\";\r\n\r\nimport $ from \"jquery\";\r\nimport DataTable from \"datatables.net\";\r\n\r\nclass Users extends Component {\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {\r\n            email: null,\r\n            password: null,\r\n            permissions: null,\r\n            success: null,\r\n            error: null\r\n        }\r\n\r\n        this.submitHandler = this.submitHandler.bind(this);\r\n\r\n        this.inputChangeHandler = this.inputChangeHandler.bind(this);\r\n\r\n        this.form = React.createRef();\r\n    }\r\n\r\n    submitHandler(event) {\r\n        event.preventDefault();\r\n\r\n        if (this.state.email && this.state.password && this.state.permissions) {\r\n\r\n            fetch(\"/api/users\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                    email: this.state.email,\r\n                    password: this.state.password,\r\n                    permissions: this.state.permissions\r\n                })\r\n            }).then(res => {\r\n                if (res.status == 200) {\r\n                    this.setState({\r\n                        success: \"Se ha registrado con éxito\"\r\n                    });\r\n                    this.form.current.reset();\r\n                    $(\"resourceTable\").DataTable().draw();\r\n                }\r\n                else {\r\n                    res.text().then(error => {\r\n                        this.setState({\r\n                            error\r\n                        })\r\n                    })\r\n                }\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    inputChangeHandler(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1 className=\"text-danger float-left\">Usuarios</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-3\">\r\n                    <div className=\"col-md-12\">\r\n                        <ResourceTable asyncTable={true} sourceURL={\"/api/users\"} columns={[\r\n                            { title: \"ID\", data: \"id\" },\r\n                            { title: \"Email\", data: \"email\" },\r\n                            { title: \"Permisos\", data: \"permissions\" },\r\n                            { title: \"Fecha creación\", data: \"createdAt\" }\r\n\r\n                        ]} actions={[\"add\", \"delete\"]} modalStructure={\r\n                            <form ref={this.form} onSubmit={this.submitHandler} className=\"float-left\">\r\n                                <div className=\"modal-header\">\r\n                                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">New Supplier</h5>\r\n                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                        <span aria-hidden=\"true\">&times;</span>\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"email\">Email: </label>\r\n                                        <input onChange={this.inputChangeHandler} className=\"form-control\" type=\"text\" name=\"email\" id=\"email\" required />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"password\">Password: </label>\r\n                                        <input onChange={this.inputChangeHandler} className=\"form-control\" type=\"password\" name=\"password\" id=\"password\" required />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"permissions\">Permissions: </label>\r\n                                        <input onChange={this.inputChangeHandler} className=\"form-control\" type=\"text\" name=\"permissions\" id=\"permissions\" required />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Cerrar</button>\r\n                                    <button type=\"submit\" className=\"btn btn-primary\">Enviar</button>\r\n                                </div>\r\n                                {this.state.success && <span className=\"text-success\">{this.state.success}</span>}\r\n                                {this.state.error && <span className=\"text-danger\">{this.state.error}</span>}\r\n                            </form>\r\n                        } />\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Users;","import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nclass Navigation extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.clickHandler = this.clickHandler.bind(this);\r\n        this.logout = this.logout.bind(this);\r\n    }\r\n\r\n    logout() {\r\n        localStorage.removeItem(\"jwt\");\r\n    }\r\n\r\n    clickHandler(event) {\r\n        this.setState({\r\n            activeNavLink: event.target.innerText\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark flex-lg-column flex-xl-row\">\r\n                <a className=\"navbar-brand text-danger\" href=\"/\">Supermercado Melquisedec</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n\r\n                <div className=\"collapse navbar-collapse row p-0 m-0\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav flex-lg-row mx-auto container-fluid p-0 m-0\">\r\n                        <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\r\n                            <NavLink className=\"nav-link\" onClick={this.clickHandler} to=\"/control-de-ventas\"><span className=\"d-md-inline\">Control de Ventas</span></NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\r\n                            <NavLink className=\"nav-link\" onClick={this.clickHandler} to=\"/inventario\"><span className=\"d-md-inline\">Inventario</span></NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\r\n                            <NavLink className=\"nav-link\" onClick={this.clickHandler} to=\"/reportes\"><span className=\"d-md-inline\">Reportes</span></NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\r\n                            <NavLink className=\"nav-link\" onClick={this.clickHandler} to=\"/categorias\"><span className=\"d-md-inline\">Categorías</span></NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\r\n                            <NavLink className=\"nav-link\" onClick={this.clickHandler} to=\"/clientes\"><span className=\"d-md-inline\">Clientes</span></NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\r\n                            <NavLink className=\"nav-link\" onClick={this.clickHandler} to=\"/productos\"><span className=\"d-md-inline\">Productos</span></NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\r\n                            <NavLink className=\"nav-link\" onClick={this.clickHandler} to=\"/ventas\"><span className=\"d-md-inline\">Ventas</span></NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\r\n                            <NavLink className=\"nav-link\" onClick={this.clickHandler} to=\"/abastecimiento\"><span className=\"d-md-inline\">Abastecimiento</span></NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\r\n                            <NavLink className=\"nav-link\" onClick={this.clickHandler} to=\"/proveedores\"><span className=\"d-md-inline\">Proveedores</span></NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\r\n                            <NavLink className=\"nav-link\" onClick={this.clickHandler} to=\"/usuarios\"><span className=\"d-md-inline\">Usuarios</span></NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\r\n                            <NavLink className=\"nav-link btn btn-danger px-0\" onClick={this.logout} to=\"/signin\">Cerrar Sesión</NavLink>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navigation;","import React, { Component } from \"react\";\r\n\r\nimport CustomSelect from \"../globalComponents/CustomSelect\";\r\n\r\nclass SalesControl extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            selectedProduct: null,\r\n            addedProducts: [],\r\n            subtotalDollars: null,\r\n            subtotalBs: null,\r\n            totalDollars: null,\r\n            totalBs: null,\r\n            quantity: 1,\r\n            stockError: \"\",\r\n            error: \"\",\r\n            success: \"\"\r\n        }\r\n        this.productsHandler = this.productsHandler.bind(this);\r\n        this.submitHandler = this.submitHandler.bind(this);\r\n        this.optionChangeHandler = this.optionChangeHandler.bind(this);\r\n        this.onChangeHandler = this.onChangeHandler.bind(this);\r\n        this.clickHandler = this.clickHandler.bind(this);\r\n\r\n        this.saleSubmitButton = React.createRef();\r\n\r\n\r\n        this.sendSaleForm = React.createRef();\r\n        this.quantityInput = React.createRef();\r\n        this.CustomSelectRef = React.createRef();\r\n        this.productsTable = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.body.addEventListener(\"keyup\", (event) => {\r\n            let key = event.key;\r\n            if (event.ctrlKey && key == \"Enter\") {\r\n                if (this.saleSubmitButton.current) this.saleSubmitButton.current.click()\r\n            }\r\n        });\r\n    }\r\n\r\n    optionChangeHandler(selectedOption, actionType) {\r\n        if (actionType.action == \"select-option\") {\r\n            this.quantityInput.current.focus();\r\n            this.quantityInput.current.select();\r\n        }\r\n        this.setState({\r\n            selectedProduct: selectedOption\r\n        })\r\n    }\r\n    onChangeHandler(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    productsHandler(event) {\r\n        event.preventDefault();\r\n\r\n        if (this.state.selectedProduct != null) {\r\n            fetch(`/api/inventory/${this.state.selectedProduct.id}`, {\r\n                headers: {\r\n                    \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n                }\r\n            })\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    let stock = res.data[0].stock;\r\n                    if (stock > 0 && stock >= this.state.quantity) {\r\n                        let product = this.state.selectedProduct;\r\n\r\n                        let productFormatted = {};\r\n\r\n                        let discount = 0;\r\n                        if (product.discount.length) {\r\n                            discount = product.discount[0].percent;\r\n                        }\r\n\r\n                        product.discount = discount;\r\n                        product.quantity = this.state.quantity || 1;\r\n\r\n                        product.totalDollars = product.price * product.quantity - (product.price * (discount / 100));\r\n                        product.priceBs = this.roundToNiceNumber(product.price * this.props.dolarReference);\r\n                        product.totalBs = this.roundToNiceNumber(product.priceBs * product.quantity - (product.priceBs * (discount / 100)));\r\n\r\n                        if (discount) {\r\n                            product.totalFormattedDollars = <span className={(discount) ? \"text-danger\" : \"\"}>{Intl.NumberFormat('es-VE', { style: 'currency', currency: 'USD' }).format(product.totalDollars) + ` (-${discount}%)`}</span>;\r\n                            product.totalFormattedBs = <span className={(discount) ? \"text-danger\" : \"\"}>{Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(product.totalBs) + ` (-${discount}%)`}</span>;\r\n                        }\r\n                        else {\r\n                            product.totalFormattedDollars = Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(product.totalDollars);\r\n                            product.totalFormattedBs = Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(product.totalBs);\r\n                        }\r\n\r\n                        productFormatted = {\r\n                            id: product.id,\r\n                            name: product.name,\r\n                            price: product.price,\r\n                            priceBs: product.priceBs,\r\n                            quantity: product.quantity,\r\n                            totalDollars: product.totalDollars,\r\n                            totalBs: product.totalBs,\r\n                            imagePath: product.imagePath,\r\n                            totalFormattedDollars: product.totalFormattedDollars,\r\n                            totalFormattedBs: product.totalFormattedBs,\r\n                            discount: product.discount\r\n                        };\r\n\r\n                        this.CustomSelectRef.current.select.state.value = [];\r\n                        this.quantityInput.current.value = 1\r\n                        this.CustomSelectRef.current.focus();\r\n\r\n                        let productExistsInTable = false;\r\n                        this.state.addedProducts.forEach(product => {\r\n                            if (productFormatted.id == product.id) {\r\n                                productExistsInTable = true;\r\n                                product.quantity += productFormatted.quantity;\r\n                            }\r\n                        })\r\n                        if (!productExistsInTable) {\r\n                            this.setState({\r\n                                quantity: 1,\r\n                                addedProducts: this.state.addedProducts.concat(productFormatted),\r\n                                selectedProduct: null,\r\n                                stockError: \"\"\r\n                            }, function () {\r\n                                let totalDollars = 0;\r\n                                let totalBs = 0;\r\n                                this.state.addedProducts.map(product => {\r\n                                    totalDollars += parseFloat(product.totalDollars);\r\n                                    totalBs += parseFloat(product.totalBs);\r\n                                });\r\n                                this.setState({\r\n                                    subtotalDollars: totalDollars,\r\n                                    subtotalBs: totalBs,\r\n                                    totalDollars,\r\n                                    totalBs\r\n                                })\r\n                            });\r\n                        }\r\n                        else {\r\n                            var index = this.state.addedProducts.findIndex(product => product.id === productFormatted.id);\r\n\r\n                            this.setState({\r\n                                addedProducts: [\r\n                                    ...this.state.addedProducts.slice(0, index),\r\n                                    Object.assign({}, this.state.addedProducts[index], { ...productFormatted }),\r\n                                    ...this.state.addedProducts.slice(index + 1)\r\n                                ],\r\n                                quantity: 1,\r\n                                selectedProduct: null,\r\n                                stockError: \"\"\r\n                            }, function () {\r\n                                let totalDollars = 0;\r\n                                let totalBs = 0;\r\n                                this.state.addedProducts.map(product => {\r\n                                    totalDollars += parseFloat(product.totalDollars);\r\n                                    totalBs += parseFloat(product.totalBs);\r\n                                });\r\n                                this.setState({\r\n                                    subtotalDollars: totalDollars,\r\n                                    subtotalBs: totalBs,\r\n                                    totalDollars,\r\n                                    totalBs\r\n                                })\r\n                            })\r\n                        }\r\n                        this.productsTable.current.scrollTop = this.productsTable.current.scrollHeight;\r\n                    }\r\n                    else {\r\n                        this.setState({\r\n                            stockError: \"No hay productos suficientes en el inventario\"\r\n                        });\r\n                    }\r\n                });\r\n        }\r\n        else {\r\n            this.setState({\r\n                stockError: \"Seleccione un producto\"\r\n            })\r\n        }\r\n    }\r\n    clickHandler(event) {\r\n        let newProducts = [];\r\n        let totalToSubtractDollars = 0;\r\n        let totalToSubtractBs = 0;\r\n\r\n        this.state.addedProducts.forEach(product => {\r\n            if (product.id != event.currentTarget.parentElement.parentElement.getAttribute(\"productid\")) {\r\n                newProducts.push(product);\r\n            }\r\n            else {\r\n                totalToSubtractDollars += product.totalDollars;\r\n                totalToSubtractBs += product.totalBs;\r\n            }\r\n        })\r\n        this.setState({\r\n            addedProducts: newProducts,\r\n            subtotalDollars: this.state.subtotalDollars - totalToSubtractDollars,\r\n            subtotalBs: this.state.subtotalBs - totalToSubtractBs,\r\n            totalDollars: this.state.totalDollars - totalToSubtractDollars,\r\n            totalBs: this.state.totalBs - totalToSubtractBs\r\n        });\r\n        this.CustomSelectRef.current.focus();\r\n    }\r\n\r\n    submitHandler() {\r\n        if (!this.state.addedProducts.length) {\r\n            this.setState({\r\n                stockError: \"Seleccione un producto\"\r\n            })\r\n            return\r\n        }\r\n        this.saleSubmitButton.current.disabled = true;\r\n        let saleProducts = [];\r\n        this.state.addedProducts.forEach(product => {\r\n            saleProducts.push({\r\n                id: product.id,\r\n                quantity: product.quantity,\r\n                price: product.price,\r\n                dolarReference: this.props.dolarReference,\r\n                discount: product.discount\r\n            })\r\n        });\r\n        fetch(\"/api/sales\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n                'Content-Type': 'application/json'\r\n\r\n            },\r\n            body: JSON.stringify({\r\n                products: saleProducts\r\n            })\r\n        }).then(res => res.json())\r\n            .then(res => {\r\n                if (res.err || res.error) {\r\n                    this.setState({\r\n                        error: res.err\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        success: \"La venta se ha realizado con éxito\",\r\n                        selectedProduct: null,\r\n                        addedProducts: [],\r\n                        subtotalDollars: null,\r\n                        subtotalBs: null,\r\n                        totalDollars: null,\r\n                        totalBs: null,\r\n                        quantity: 1,\r\n                        stockError: \"\",\r\n                        error: \"\",\r\n                    })\r\n                    setTimeout(() => {\r\n                        this.setState({\r\n                            success: \"\"\r\n                        })\r\n                    }, 3000);\r\n                    this.CustomSelectRef.current.select.state.value = [];\r\n                    this.quantityInput.current.value = 1\r\n                    this.CustomSelectRef.current.focus();\r\n                    this.saleSubmitButton.current.disabled = false;\r\n\r\n                }\r\n            })\r\n    }\r\n\r\n    roundToNiceNumber(value) {\r\n        var val = 0;\r\n        if (value.toString().length == 4) {\r\n            val = Math.ceil(value / 100) * 100\r\n        }\r\n        else if (value.toString().length > 4) {\r\n            val = Math.ceil(value / 1000) * 1000\r\n        }\r\n\r\n        return val;\r\n    }\r\n    render() {\r\n        var _this = this;\r\n        return (\r\n            <div className=\"container-fluid\" id=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1 className=\"text-danger\">Control de Ventas</h1>\r\n                    </div>\r\n                </div>\r\n                <input ref={this.saleSubmitButton} onClick={this.submitHandler} type=\"button\" className=\"form-control btn btn-primary\" value=\"Enviar\" />\r\n                <form className=\"mt-5\" onSubmit={this.productsHandler}>\r\n                    <div className=\"col\">\r\n                        <span className=\"text-danger\">{this.state.stockError}</span>\r\n                        <span className=\"text-danger h3\">{this.state.error}</span>\r\n                        <span className=\"text-success h3\">{this.state.success}</span>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 col-md-7 mt-2\">\r\n                            <CustomSelect dolarReference={_this.props.dolarReference} isMulti={false} innerRef={this.CustomSelectRef} changeHandler={this.optionChangeHandler} name={\"ProductSelect\"} />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-3 mt-2\">\r\n                            <input onChange={this.onChangeHandler} ref={this.quantityInput} type=\"text\" className=\"form-control\" placeholder=\"Cantidad\" id=\"quantity\" name=\"quantity\" defaultValue=\"1\" />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-10 col-lg-2 mt-2\">\r\n                            <input type=\"submit\" className=\"form-control btn btn-primary\" hidden />\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <div ref={this.productsTable} className=\"table-responsive w-100\" style={{ height: \"380px\" }}>\r\n                            <table className=\"table table-striped table-dark overflow-auto\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"col\">Count</th>\r\n                                        <th scope=\"col\">Product ID</th>\r\n                                        <th scope=\"col\">Nombre</th>\r\n                                        <th scope=\"col\">Precio $</th>\r\n                                        <th scope=\"col\">Precio Bs</th>\r\n                                        <th scope=\"col\">Cantidad</th>\r\n                                        <th scope=\"col\">Total $</th>\r\n                                        <th scope=\"col\">Total Bs</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {this.state.addedProducts.map((product, index) => {\r\n                                        return (\r\n                                            <tr key={index} productid={product.id}>\r\n                                                <th>{index + 1}</th>\r\n                                                <th>{product.id}</th>\r\n                                                <th><img className=\"float-left mr-2\" style={{ maxWidth: \"20px\" }} src={product.imagePath} />{product.name}</th>\r\n                                                <th>{Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(product.price)}</th>\r\n                                                <th>{Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(product.priceBs)}</th>\r\n                                                <th>{product.quantity}</th>\r\n                                                <th>{product.totalFormattedDollars}</th>\r\n                                                <th>{product.totalFormattedBs}</th>\r\n                                                <th>\r\n                                                    <button onClick={this.clickHandler} className=\"btn btn-danger\">Delete</button>\r\n                                                </th>\r\n                                            </tr>\r\n                                        )\r\n                                    })}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <div className=\"d-flex flex-column align-items-end\">\r\n                            <label className=\"font-weight-bold h4\">{\"Subtotal Bs: \"}\r\n                                <span className=\"font-weight-bold h4 text-danger\">{Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(this.state.subtotalBs)}</span>\r\n                            </label>\r\n                            <label className=\"font-weight-bold h4\">{\"Total Bs: \"}\r\n                                <span className=\"font-weight-bold h4 text-danger\">{Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(this.state.totalBs)}</span>\r\n                            </label>\r\n                            <hr className=\"w-100\" />\r\n                            <label className=\"font-weight-bold h4\">{\"Subtotal $: \"}\r\n                                <span className=\"font-weight-bold h4 text-danger\">{Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(this.state.subtotalDollars)}</span>\r\n                            </label>\r\n                            <label className=\"font-weight-bold h4\">{\"Total $: \"}\r\n                                <span className=\"font-weight-bold h4 text-danger\">{Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(this.state.totalDollars)}</span>\r\n                            </label>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SalesControl;","import React, { Component } from \"react\";\r\n\r\nimport ResourceTable from \"./ResourceTable\";\r\n\r\nclass Inventory extends Component {\r\n\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1 className=\"text-danger float-left\">Ventas</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-3\">\r\n                    <div className=\"col-md-12\">\r\n                        <ResourceTable asyncTable={true} sourceURL={\"/api/inventory\"} columns={[\r\n                            { title: \"Product ID\", data: \"id\" },\r\n                            { title: \"Nombre Producto\", data: \"name\" },\r\n                            {\r\n                                title: \"Inventario\", data: \"stock\", render: function (data, type, row) {\r\n                                    if (data <= 0) {\r\n                                        return `<span class=\"text-danger\">${data}</span>`\r\n                                    }\r\n                                    return `<span class=\"text-success\">${data}</span>`\r\n                                }\r\n                            },\r\n                            { title: \"Total productos vendidos\", data: \"salesTotal\" },\r\n                            { title: \"Total productos comprados\", data: \"supplyingsTotal\" }\r\n                        ]} actions={[]} />\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Inventory;","import React, { Component } from \"react\"\r\nimport ResourceTable from \"./ResourceTable\";\r\n\r\nconst moment = require(\"moment\");\r\n\r\nconst $ = require(\"jquery\");\r\nconst DataTable = require(\"datatables.net\");\r\n\r\nclass Reports extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            resource: \"sales\",\r\n            parameters: \"\"\r\n        }\r\n\r\n        this.submitHandler = this.submitHandler.bind(this);\r\n        this.changeHandler = this.changeHandler.bind(this);\r\n\r\n        this.reportForm = React.createRef();\r\n        this.resourceTable = React.createRef();\r\n    }\r\n\r\n    changeHandler(event) {\r\n        let dateRangeFromValue = document.body.querySelector(\"#rangeDateFrom\").value;\r\n        let dateRangeToValue = document.body.querySelector(\"#rangeDateTo\").value;\r\n        let greaterThanDate = document.body.querySelector(\"#greaterThanDate\").value;\r\n        let lowerThanDate = document.body.querySelector(\"#lowerThanDate\").value;\r\n        let equalDate = document.body.querySelector(\"#equalDate\").value;\r\n\r\n        var previousParameters = this.state.parameters;\r\n        var parameters = \"\";\r\n        if (event.target.name == \"dateRadios\") {\r\n            $(\"form\").find(\"input[type=date]\").val(\"\");\r\n            switch (event.target.id) {\r\n                case \"today\":\r\n                    parameters = `from=${moment(new Date()).format(\"YYYY-MM-DD\")}&to=${moment(new Date()).format(\"YYYY-MM-DD\")}`\r\n                    break;\r\n                case \"yesterday\":\r\n                    parameters = `from=${moment(new Date()).subtract(1, \"days\").format(\"YYYY-MM-DD\")}&to=${moment(new Date()).subtract(1, \"days\").format(\"YYYY-MM-DD\")}`\r\n                    break;\r\n                case \"lastWeek\":\r\n                    parameters = `from=${moment(new Date()).subtract(7, \"days\").format(\"YYYY-MM-DD\")}&to=${moment(new Date()).format(\"YYYY-MM-DD\")}`\r\n                    break;\r\n                case \"fortnight\":\r\n                    parameters = `from=${moment(new Date()).subtract(15, \"days\").format(\"YYYY-MM-DD\")}&to=${moment(new Date()).format(\"YYYY-MM-DD\")}`\r\n                    break;\r\n                case \"month\":\r\n                    parameters = `from=${moment(new Date()).subtract(1, \"months\").format(\"YYYY-MM-DD\")}&to=${moment(new Date()).format(\"YYYY-MM-DD\")}`\r\n                    break;\r\n                case \"quarter\":\r\n                    parameters = `from=${moment(new Date()).subtract(3, \"months\").format(\"YYYY-MM-DD\")}&to=${moment(new Date()).format(\"YYYY-MM-DD\")}`\r\n                    break;\r\n                case \"semester\":\r\n                    parameters = `from=${moment(new Date()).subtract(6, \"months\").format(\"YYYY-MM-DD\")}&to=${moment(new Date()).format(\"YYYY-MM-DD\")}`\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            parameters += \"&group=true\"\r\n        }\r\n        else if (event.target.name == \"reportType\") {\r\n            this.setState({\r\n                resource: event.target.id,\r\n                parameters: \"\"\r\n            }, function () {\r\n                this.setState({\r\n                    parameters: previousParameters\r\n                })\r\n            });\r\n            return;\r\n        }\r\n        else {\r\n            $(\"form\").find(\"input[name=dateRadios]\").prop(\"checked\", false);\r\n            $(\"form\").find(\"input[type=date]\").val(\"\");\r\n            switch (event.target.id) {\r\n                case \"greaterThanDate\":\r\n                    parameters = `createdAt=${greaterThanDate}&operation=gte`\r\n                    event.target.value = greaterThanDate;\r\n                    break;\r\n                case \"lowerThanDate\":\r\n                    parameters = `createdAt=${lowerThanDate}&operation=lte`\r\n                    event.target.value = lowerThanDate;\r\n                    break;\r\n                case \"equalDate\":\r\n                    parameters = `createdAt=${equalDate}&operation=eq`\r\n                    event.target.value = equalDate;\r\n                    break;\r\n                case \"rangeDateFrom\":\r\n                    if (dateRangeToValue) {\r\n                        parameters = `from=${moment(dateRangeFromValue || \"\").format(\"YYYY-MM-DD\")}&to=${dateRangeToValue}`\r\n                    }\r\n                    else {\r\n                        parameters = `from=${moment(dateRangeFromValue || \"\").format(\"YYYY-MM-DD\")}`\r\n                    }\r\n                    event.target.value = dateRangeFromValue;\r\n                    $(\"#rangeDateTo\").val(dateRangeToValue);\r\n                    break;\r\n                case \"rangeDateTo\":\r\n                    if (dateRangeFromValue) {\r\n                        parameters = `from=${dateRangeFromValue}&to=${moment(dateRangeToValue || \"\").format(\"YYYY-MM-DD\")}`\r\n                    }\r\n                    else {\r\n                        parameters = `to=${moment(dateRangeToValue || \"\").format(\"YYYY-MM-DD\")}`\r\n                    }\r\n                    event.target.value = dateRangeToValue;\r\n                    $(\"#rangeDateFrom\").val(dateRangeFromValue);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            parameters += \"&group=true\"\r\n        }\r\n        this.setState({\r\n            parameters\r\n        });\r\n    }\r\n    componentDidUpdate() {\r\n        if (this.resourceTable.current) {\r\n            this.resourceTable.current.changeSourceURL(`/api/${this.state.resource}?${this.state.parameters}`);\r\n        }\r\n    }\r\n    submitHandler(event) {\r\n        event.preventDefault();\r\n        console.log(this.state.parameters);\r\n        this.reportForm.current.reset();\r\n    }\r\n    render() {\r\n        var salesColumns = [\r\n            /*\r\n            {\r\n                render: function (data, type, row, meta) {\r\n                    return `<img src=\"${row.product.imagePath}\" style=\"max-width:35px;\"/>`\r\n                },\r\n                title: \"Imagen\", data: \"product.imagePath\"\r\n            },\r\n            */\r\n            { title: \"Product ID\", data: \"product.id\" },\r\n            { title: \"Nombre\", data: \"product.name\" },\r\n            //{ title: \"Transacciones\", data: \"transactions\" },\r\n            { title: \"Cantidad de productos\", data: \"salesTotal\" },\r\n            {\r\n                render: function (data, type, row, meta) {\r\n                    return Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(row.grossTotalDollars)\r\n                }, title: (this.state.resource == \"sales\") ? \"Ganancia bruta $\" : \"Costo bruto $\", data: \"grossTotalDollars\"\r\n            },\r\n            {\r\n                render: function (data, type, row, meta) {\r\n                    return Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(row.grossTotalBs)\r\n                }, title: (this.state.resource == \"sales\") ? \"Ganancia bruta Bs\" : \"Costo bruto Bs\", data: \"grossTotalBs\"\r\n            },\r\n            {\r\n                render: function (data, type, row, meta) {\r\n                    return Intl.NumberFormat('en-US', {\r\n                        style: 'currency',\r\n                        currency: 'USD',\r\n                    }).format(row.netIncomeDollars)\r\n                }, title: (this.state.resource == \"sales\") ? \"Ganancia Neta $\" : \"Ganancia neta $\", data: \"netIncomeDollars\"\r\n            },\r\n            {\r\n                render: function (data, type, row, meta) {\r\n                    return Intl.NumberFormat('es-VE', {\r\n                        style: 'currency',\r\n                        currency: 'VES',\r\n                    }).format(row.netIncomeBs)\r\n                }, title: (this.state.resource == \"sales\") ? \"Ganancia Neta Bs\" : \"Ganancia Neta Bs\", data: \"netIncomeBs\"\r\n            }\r\n        ];\r\n\r\n        var supplyingsColumns = [\r\n            /*\r\n            {\r\n                render: function (data, type, row, meta) {\r\n                    return `<img src=\"${row.product.imagePath}\" style=\"max-width:35px;\"/>`\r\n                },\r\n                title: \"Imagen\", data: \"product.imagePath\"\r\n            },\r\n            */\r\n            { title: \"Product ID\", data: \"product.id\" },\r\n            { title: \"Nombre\", data: \"product.name\" },\r\n            //{ title: \"Transacciones\", data: \"transactions\" },\r\n            { title: \"Cantidad de productos\", data: \"quantity\" },\r\n            {\r\n                render: function (data, type, row, meta) {\r\n                    return Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(row.grossTotalDollars)\r\n                }, title: (this.state.resource == \"sales\") ? \"Ganancia bruta $\" : \"Costo bruto $\", data: \"grossTotalDollars\"\r\n            },\r\n            {\r\n                render: function (data, type, row, meta) {\r\n                    return Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(row.grossTotalBs)\r\n                }, title: (this.state.resource == \"sales\") ? \"Ganancia bruta Bs\" : \"Costo bruto Bs\", data: \"grossTotalBs\"\r\n            }\r\n        ];\r\n\r\n        return (\r\n            <div className=\"\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1 className=\"text-danger float-left\">Reportes</h1>\r\n                    </div>\r\n                </div>\r\n                <hr />\r\n                <form ref={this.reportForm} onSubmit={this.submitHandler}>\r\n                    <div className=\"col-12\">\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <h3 className=\"mr-4\">Tipo de reporte:</h3>\r\n                        </div>\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input onChange={this.changeHandler} className=\"form-check-input\" type=\"radio\" name=\"reportType\" id=\"supplyings\" value=\"supplyingRadio\" />\r\n                            <label className=\"form-check-label\" htmlFor=\"supplyingRadio\">Compra</label>\r\n                        </div>\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input onChange={this.changeHandler} className=\"form-check-input\" type=\"radio\" name=\"reportType\" id=\"sales\" value=\"saleRadio\" defaultChecked />\r\n                            <label className=\"form-check-label\" htmlFor=\"saleRadio\">Venta</label>\r\n                        </div>\r\n                    </div>\r\n                    <hr className=\"col-12 p-0\" />\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 col-lg-2\">\r\n                            <h5 className=\"mr-4\">Rango de fechas:</h5>\r\n                            <div className=\"form-group\">\r\n                                <input onChange={this.changeHandler} type=\"date\" name=\"rangeDateFrom\" id=\"rangeDateFrom\" />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input onChange={this.changeHandler} type=\"date\" name=\"rangeDateTo\" id=\"rangeDateTo\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12 col-lg-4\">\r\n                            <div className=\"form-check form-check-inline\">\r\n                                <label className=\"btn btn-secondary\" htmlFor=\"semester\" name=\"labelDateRadios\">\r\n                                    <input onChange={this.changeHandler} className=\"form-check-input\" type=\"radio\" name=\"dateRadios\" id=\"semester\" />\r\n                                    6 meses\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"form-check form-check-inline\">\r\n                                <label className=\"btn btn-secondary\" htmlFor=\"quarter\" name=\"labelDateRadios\">\r\n                                    <input onChange={this.changeHandler} className=\"form-check-input\" type=\"radio\" name=\"dateRadios\" id=\"quarter\" />\r\n                                3 meses\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"form-check form-check-inline\">\r\n                                <label className=\"btn btn-secondary\" htmlFor=\"month\" name=\"labelDateRadios\">\r\n                                    <input onChange={this.changeHandler} className=\"form-check-input\" type=\"radio\" name=\"dateRadios\" id=\"month\" />\r\n                                1 mes\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"form-check form-check-inline\">\r\n                                <label className=\"btn btn-secondary\" htmlFor=\"fortnight\" name=\"labelDateRadios\">\r\n                                    <input onChange={this.changeHandler} className=\"form-check-input\" type=\"radio\" name=\"dateRadios\" id=\"fortnight\" />\r\n                                15 días\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"form-check form-check-inline\">\r\n                                <label className=\"btn btn-secondary\" htmlFor=\"lastWeek\" name=\"labelDateRadios\">\r\n                                    <input onChange={this.changeHandler} className=\"form-check-input\" type=\"radio\" name=\"dateRadios\" id=\"lastWeek\" />\r\n                                Útima semana\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"form-check form-check-inline\">\r\n                                <label className=\"btn btn-secondary\" htmlFor=\"yesterday\" name=\"labelDateRadios\">\r\n                                    <input onChange={this.changeHandler} className=\"form-check-input\" type=\"radio\" name=\"dateRadios\" id=\"yesterday\" />\r\n                                Ayer\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"form-check form-check-inline\">\r\n                                <label className=\"btn btn-secondary\" htmlFor=\"today\" name=\"labelDateRadios\">\r\n                                    <input onChange={this.changeHandler} className=\"form-check-input\" type=\"radio\" name=\"dateRadios\" id=\"today\" />\r\n                                Hoy\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12 col-lg-2\">\r\n                            <div className=\"\">\r\n                                <h5 className=\"\">Fecha mayor o igual a:</h5>\r\n                                <input onChange={this.changeHandler} type=\"date\" name=\"greaterThanDate\" id=\"greaterThanDate\" />\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className=\"col-12 col-lg-2\">\r\n                            <div className=\"\">\r\n                                <h5 className=\"\">Fecha menor o igual a:</h5>\r\n                                <input onChange={this.changeHandler} type=\"date\" name=\"lowerThanDate\" id=\"lowerThanDate\" />\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className=\"col-12 col-lg-2\">\r\n                            <div className=\"\">\r\n                                <h5 className=\"\">Fecha igual a:</h5>\r\n                                <input onChange={this.changeHandler} type=\"date\" name=\"equalDate\" id=\"equalDate\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <hr />\r\n                </form>\r\n\r\n                <div className=\"row mt-3\">\r\n                    <div className=\"col-md-12\">\r\n                        {this.state.parameters != \"\" && <ResourceTable ref={this.resourceTable} asyncTable={true} sourceURL={`/api/${this.state.resource}?${this.state.parameters}`} columns={\r\n                            (this.state.resource == \"sales\") ? salesColumns : supplyingsColumns\r\n                        } actions={[]} dolarReference={this.props.dolarReference} />}\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Reports;","import React, { Component } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport isAuthenticated from \"../requests/isAuthenticated\";\r\n\r\nclass PrivateRoute extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            loading: true,\r\n            isAuthenticated: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        isAuthenticated().then(isAuthenticated => {\r\n            this.setState({\r\n                loading: false,\r\n                isAuthenticated\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { component: Component, ...rest } = this.props\r\n        return (\r\n            <Route\r\n                render={props =>\r\n                    this.state.isAuthenticated ? (\r\n                        <Component {...props} {...rest} />\r\n                    ) : (\r\n                            this.state.loading ? (\r\n                                <div>LOADING</div>\r\n                            ) : (\r\n                                    <Redirect to={{ pathname: '/signin', state: { from: this.props.location } }} />\r\n                                )\r\n                        )\r\n                }\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default PrivateRoute;","import React, { Component } from \"react\";\r\n\r\nimport Categories from \"./Categories\";\r\nimport Clients from \"./Clients\";\r\nimport Products from \"./Products\";\r\nimport Sales from \"./Sales\";\r\nimport Suppliers from \"./Suppliers\";\r\nimport Supplyings from \"./Supplyings\";\r\nimport Users from \"./Users\";\r\nimport Navigation from \"./Navigation\";\r\nimport SalesControl from \"./SalesControl\";\r\nimport Inventory from \"./Inventory\";\r\nimport Reports from \"./Reports\";\r\nimport PrivateRoute from \"../components/PrivateRoute\";\r\n\r\nimport { Route } from \"react-router-dom\";\r\n\r\nimport $ from \"jquery\";\r\nclass Dashboard extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            formattedDolareReference: \"\",\r\n            dolarReference: 0,\r\n            loading: false,\r\n            newDolarReference: null\r\n        }\r\n\r\n        this.fetchDolarReference = this.fetchDolarReference.bind(this);\r\n        this.dolarReferenceSubmitHandler = this.dolarReferenceSubmitHandler.bind(this);\r\n        this.changeHandler = this.changeHandler.bind(this);\r\n        this.closeEditDolarModalButton = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchDolarReference();\r\n    }\r\n\r\n    fetchDolarReference() {\r\n        this.setState({\r\n            loading: true\r\n        });\r\n        fetch(\"/api/dolarReference\", {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if (res.data) {\r\n                    this.setState({\r\n                        dolarReference: res.data.price,\r\n                        formattedDolareReference: Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(res.data.price),\r\n                        loading: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        dolarReference: 0,\r\n                        formattedDolareReference: Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(0),\r\n                        loading: false\r\n                    })\r\n                }\r\n            })\r\n    }\r\n\r\n    changeHandler(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    dolarReferenceSubmitHandler(event) {\r\n        event.preventDefault();\r\n\r\n        fetch(\"/api/dolarReference\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({ price: this.state.newDolarReference })\r\n        })\r\n            .then(res => {\r\n                if (res.status == 204) {\r\n                    window.location.reload();\r\n                } else {\r\n                    alert(\"Error\")\r\n                }\r\n            })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row sticky-top\">\r\n                    <div className=\"col-md-12 p-0\">\r\n                        <Navigation />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"bg-danger text-light col-12\">\r\n                        Precio del Dolar <span id=\"dolarReference\" className=\"badge badge-light\">{(this.state.loading) ? \"Loading...\" : this.state.formattedDolareReference}</span>\r\n                        <button className=\"btn btn-secondary ml-4\" data-toggle=\"modal\" data-target=\"#dolarEditmodal\" >Editar</button>\r\n                    </div>\r\n\r\n                </div>\r\n                <main className=\"mt-5\">\r\n                    <Route path=\"/control-de-ventas\" render={(props) => (<SalesControl {...props} dolarReference={this.state.dolarReference} />)} />\r\n                    <Route path=\"/inventario\" component={Inventory} />\r\n                    <Route path=\"/reportes\" render={(props) => (<Reports {...props} dolarReference={this.state.dolarReference} />)} />\r\n                    <Route path=\"/categorias\" component={Categories} />\r\n                    <Route path=\"/clientes\" component={Clients} />\r\n                    <Route path=\"/productos\" render={(props) => (<Products {...props} dolarReference={this.state.dolarReference} />)} />\r\n                    <Route path=\"/ventas\" component={Sales} />\r\n                    <Route path=\"/abastecimiento\" render={(props) => (<Supplyings {...props} dolarReference={this.state.dolarReference} />)} />\r\n                    <Route path=\"/proveedores\" component={Suppliers} />\r\n                    <Route path=\"/usuarios\" component={Users} />\r\n                </main>\r\n                <div className=\"modal fade\" id=\"dolarEditModal\" tabindex=\"-1\" aria-labelledby=\"dolarEditModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"dolarEditModalLabel\">Nuevo precio del dolar</h5>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                    <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n                            <form onSubmit={this.dolarReferenceSubmitHandler}>\r\n                                <div className=\"modal-body\">\r\n                                    <input name=\"newDolarReference\" onChange={this.changeHandler} className=\"form-control\" type=\"number\" placeholder=\"Ingrese el nuevo precio del dolar. Ej: 400000\" />\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button ref={this.closeEditDolarModalButton} type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                    <button type=\"button\" className=\"btn btn-primary\">Save changes</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Dashboard;","const initialState = {\r\n    data: [],\r\n    next: {},\r\n    previous: {},\r\n    loading: false\r\n};\r\nexport default function productReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case \"LOAD_PRODUCTS\":\r\n            return {\r\n                ...state,\r\n                data: action.paginatedProducts.data,\r\n                next: action.paginatedProducts.next,\r\n                previous: action.paginatedProducts.previous\r\n            }\r\n        case \"LOADING\":\r\n            return { ...state, loading: action.loading }\r\n        default:\r\n            return state;\r\n    }\r\n}","\r\nconst initialState = {\r\n    activeCategoryId: 0,\r\n    activeCategoryName: \"\",\r\n    data: []\r\n}\r\nexport default function categoriesReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case \"LOAD_CATEGORIES\":\r\n            return { ...state, data: action.categories }\r\n        case \"SET_ACTIVE_CATEGORY_ID\":\r\n            return { ...state, activeCategoryId: action.categoryId }\r\n        case \"SET_ACTIVE_CATEGORY_NAME\":\r\n            return { ...state, activeCategoryName: action.categoryName }\r\n        default:\r\n            return state;\r\n    }\r\n}","import products from \"./productReducer\";\r\nimport categories from \"./categoriesReducer\";\r\n\r\nexport default { products, categories }","import { createStore, combineReducers } from \"redux\";\r\nimport reducers from \"../reducers\";\r\n\r\nconst rootReducer = combineReducers({\r\n    ...reducers\r\n})\r\nexport default function configureStore() {\r\n    return createStore(rootReducer);\r\n}","import React from 'react';\nimport './App.css';\n\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\n\nimport Header from \"./components/Header\";\nimport Navigation from \"./components/Navigation\";\nimport ProductCategories from \"./components/ProductCategories\";\nimport ProductList from \"./components/ProductList\";\nimport BackToTopButton from \"./components/BackToTopButton\";\nimport Login from \"./components/Login\";\nimport Dashboard from \"./adminComponents/Dashboard\";\n\nimport PrivateRoute from \"./components/PrivateRoute\";\n\nimport configureStore from \"./store/configureStore\";\nimport { Provider } from \"react-redux\";\n\nconst store = configureStore();\n\nfunction App() {\n\n  /*\n  <Route path=\"/\">\n              <div className=\"container-fluid\">\n                <div className=\"row bg-dark\" style={{ height: \"30px\" }} />\n                <div className=\"row sticky-top\">\n                  <div className=\"col-12\">\n                    <Header />\n                  </div>\n                </div>\n                <Navigation />\n\n                <div className=\"row\">\n                  <div className=\"col-md-12 mt-2\">\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"col-md-3 mt-2\">\n                    <div className=\"row\">\n                      <div className=\"col-12\">\n                        <ProductCategories />\n                      </div>\n                    </div>\n                    <div className=\"row\">\n                      <div className=\"col-12 d-flex flex-column align-items-center\">\n                        <BackToTopButton />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-md-8 mt-2 d-flex flex-wrap justify-content-start\">\n                    <ProductList />\n                  </div>\n                </div>\n              </div>\n            </Route>\n  */\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <Router>\n          <Switch>\n            <Route exact path=\"/signin\" component={Login} />\n            <PrivateRoute path=\"/\" component={Dashboard} />\n          </Switch>\n        </Router>\n      </div>\n\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = {\r\n    loadProducts: function (paginatedProducts) {\r\n        return { type: \"LOAD_PRODUCTS\", paginatedProducts }\r\n    },\r\n    setLoading: function (loading) {\r\n        return { type: \"LOADING\", loading }\r\n    },\r\n}","module.exports = {\r\n    loadCategories: function (categories) {\r\n        return { type: \"LOAD_CATEGORIES\", categories }\r\n    },\r\n    setActiveCategoryId: function (categoryId) {\r\n        return { type: \"SET_ACTIVE_CATEGORY_ID\", categoryId }\r\n    },\r\n    setActiveCategoryName: function (categoryName) {\r\n        return { type: \"SET_ACTIVE_CATEGORY_NAME\", categoryName }\r\n    }\r\n}"],"sourceRoot":""}
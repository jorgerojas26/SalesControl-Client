{"version":3,"sources":["globalComponents/Suggestions.jsx","globalComponents/SearchInput.jsx","components/Header.jsx","components/Navigation.jsx","components/ProductCategories.jsx","components/CategoryTitle.jsx","components/ProductList.jsx","components/BackToTopButton.jsx","requests/isAuthenticated.js","components/Login.jsx","requests/categories.js","adminComponents/Categories.jsx","adminComponents/ResourceTable.jsx","adminComponents/Clients.jsx","globalComponents/CustomSelect.jsx","adminComponents/Products.jsx","adminComponents/Sales.jsx","adminComponents/Suppliers.jsx","adminComponents/Supplyings.jsx","adminComponents/Users.jsx","adminComponents/Navigation.jsx","adminComponents/SalesControl.jsx","adminComponents/Inventory.jsx","adminComponents/Reports.jsx","components/PrivateRoute.jsx","adminComponents/Dashboard.jsx","reducers/productReducer.js","reducers/categoriesReducer.js","reducers/index.js","store/configureStore.js","App.js","serviceWorker.js","index.js","actions/productActions.js","actions/categoriesActions.js"],"names":["Suggestions","this","props","noResults","className","suggestions","map","suggestion","onlyName","onClick","clickHandler","key","id","productid","style","maxWidth","src","imagePath","alt","name","minWidth","type","defaultValue","value","price","Component","SearchInput","state","showSuggestions","searchHandler","debounce","headerContainer","React","createRef","onBlurHandler","bind","event","target","length","fetch","then","result","json","data","setState","parentClassName","onChange","persist","placeholder","ref","suggestionBox","onOutsideClick","ProductCategories","fetchProducts","categoryHandler","categories","dispatch","categoriesActions","document","querySelector","getAttribute","innerText","preventDefault","includes","parentElement","classList","remove","add","page","limit","productActions","paginatedProducts","category","index","categoryid","connect","ownProps","activeCategory","CategoryTitle","activeCategoryName","ProductList","observer","IntersectionObserver","loadMoreProductsHandler","elementToObserve","current","observe","actions","products","concat","entries","isIntersecting","next","product","push","speed","viewBox","backgroundColor","foregroundColor","x","y","rx","ry","width","height","unshift","loading","previous","a","token","localStorage","getItem","res","auth","isAuthenticated","Login","onSubmitHandler","inputHandler","email","password","logginError","authenticated","history","method","headers","body","JSON","stringify","err","setItem","onSubmit","action","BASE_URL","functions","fetchAll","response","fetchById","fetchByName","create","edit","require","Categories","fetchMessage","submitMessage","submitMessageType","submitLoading","categoryName","categoryAction","selectedRowData","submitHandler","changeHandler","categoriesTable","addButton","text","attr","e","datatable","node","config","$","val","editButton","extend","row","selected","categoriesRequests","DataTable","columns","title","dom","buttons","select","toString","rows","rowData","error","setTimeout","tabindex","aria-labelledby","aria-hidden","data-dismiss","aria-label","htmlFor","required","role","jsZip","window","JSZip","ResourceTable","recordsTable","modal","sourceURL","newSourceURL","ajax","url","load","$recordsTable","_this","asyncTable","initComplete","api","every","column","dataSrc","header","append","on","splittedDataSrc","split","parameter","forEach","charAt","toUpperCase","slice","trim","footerCallback","totalDollars","reduce","b","pageTotalDollars","footer","html","Intl","NumberFormat","currency","format","totalBs","pageTotalBs","messageTop","customize","win","find","css","exportOptions","modifier","setModalAction","setSelectedRowData","confirm","status","reload","catch","discountId","discount","serverSide","results","count","console","log","productId","grossTotalBs","grossTotalDollars","dolarReference","netIncomeDollars","profitPercent","netIncomeBs","d","start","xhr","code","paging","lengthMenu","pageLength","ordering","order","sorting","tr","closest","child","isShown","hide","removeClass","childFormat","show","addClass","addEventListener","children","focus","tabIndex","modalStructure","Clients","modalAction","autoFocus","CustomSelect","options","Math","ceil","inputValue","callback","item","label","roundToNiceNumber","loadOptions","defaultOptions","inputId","isMulti","isClearable","innerRef","Products","selectedCategories","productImageFile","success","discountPercent","discountStartDate","discountEndDate","discountSubmitHandler","optionChangeHandler","CustomSelectRef","productForm","closeButton","selectedOptions","actionType","files","categoriesID","alert","formData","FormData","reset","click","percent","startDate","endDate","render","meta","disc","step","min","Sales","childRowInfo","saleProducts","saleProduct","quantity","defaultContent","Suppliers","rif","inputChangeHandler","draw","Supplyings","supplier","supplierChangeHandler","productChangeHandler","supplierSelect","productSelect","supplyingForm","selectedOption","supplierId","Users","permissions","form","Navigation","logout","removeItem","activeNavLink","href","data-toggle","data-target","aria-controls","aria-expanded","to","SalesControl","selectedProduct","addedProducts","subtotalDollars","subtotalBs","stockError","productsHandler","onChangeHandler","saleSubmitButton","sendSaleForm","quantityInput","productsTable","ctrlKey","stock","productFormatted","priceBs","totalFormattedDollars","totalFormattedBs","productExistsInTable","findIndex","Object","assign","parseFloat","scrollTop","scrollHeight","newProducts","totalToSubtractDollars","totalToSubtractBs","currentTarget","disabled","hidden","scope","Inventory","moment","Reports","resource","parameters","reportForm","resourceTable","dateRangeFromValue","dateRangeToValue","greaterThanDate","lowerThanDate","equalDate","previousParameters","Date","subtract","prop","changeSourceURL","salesColumns","supplyingsColumns","defaultChecked","PrivateRoute","component","rest","pathname","from","location","Dashboard","formattedDolareReference","newDolarReference","fetchDolarReference","dolarReferenceSubmitHandler","closeEditDolarModalButton","path","initialState","activeCategoryId","categoryId","rootReducer","combineReducers","reducers","store","createStore","App","exact","Boolean","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports","loadProducts","setLoading","loadCategories","setActiveCategoryId","setActiveCategoryName"],"mappings":"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","file":"static/js/main.82efcb97.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Suggestions extends Component {\r\n\r\n    render() {\r\n        if (this.props.noResults) {\r\n            return (\r\n                <ul className=\"list-group position-absolute w-100\" >\r\n                    <li className=\"list-group-item text-justify\">No se encontraron resultados</li>\r\n                </ul>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <ul className=\"list-group position-absolute w-100 suggestionsBox\" >\r\n                    {this.props.suggestions.map(suggestion => {\r\n                        if (this.props.onlyName) {\r\n                            return <div onClick={this.props.clickHandler} key={suggestion.id} productid={suggestion.id} className=\"text-justify\">\r\n                                <li className=\"list-group-item\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-1\">\r\n                                            <img style={{ maxWidth: \"35px\" }} src={suggestion.imagePath} alt=\"IMG\" />\r\n                                        </div>\r\n                                        <div className=\"col-6 float-left\">\r\n                                            <h5 className=\"font-weight-bold\" id=\"productName\">{suggestion.name}</h5>\r\n                                        </div>\r\n                                    </div>\r\n                                </li>\r\n                            </div>\r\n                        }\r\n                        else {\r\n                            return <li onClick={this.props.clickHandler} key={suggestion.id} className=\"list-group-item text-justify\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12 col-sm-6 col-md-12 col-lg-12 col-xl-6\">\r\n                                        <img className=\"\" style={{ maxWidth: \"35px\" }} src={suggestion.imagePath} alt=\"IMG\" />\r\n                                        <span id=\"productName font-weight-bold\">{suggestion.name}</span>\r\n                                    </div>\r\n                                    <div className=\"col-6 col-sm-4 col-md-6 col-lg-6 col-xl-4\">\r\n                                        <div className=\"input-group \">\r\n                                            <input className=\"form-control text-center\" style={{ minWidth: \"45px\", maxWidth: \"70px\" }} type=\"number\" defaultValue=\"1\" name=\"numberOfItems\" id=\"numberOfItems\" />\r\n                                            <input className=\"bg-dark text-light\" type=\"button\" value=\"Comprar\" />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-6 col-sm-2 col-md-6 col-lg-6 col-xl-2 \">\r\n                                        <span className=\"text-danger\">{`${suggestion.price} Bs.`}</span>\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n                        }\r\n                    })}\r\n                </ul>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Suggestions","import React, { Component } from \"react\";\r\nimport OutsideClickHandler from 'react-outside-click-handler';\r\nimport Suggestions from \"./Suggestions\";\r\nimport debounce from \"lodash.debounce\";\r\n\r\nclass SearchInput extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {\r\n            showSuggestions: false,\r\n            suggestions: [],\r\n            noResults: false\r\n        };\r\n\r\n        this.searchHandler = debounce(this.searchHandler, 500);\r\n        this.headerContainer = React.createRef();\r\n        this.onBlurHandler = this.onBlurHandler.bind(this);\r\n    }\r\n\r\n    searchHandler(event) {\r\n        if (event.target.value.length > 0) {\r\n            fetch(`/api/products?name=${event.target.value}&page=1&limit=10`)\r\n                .then(result => result.json())\r\n                .then(result => {\r\n                    if (result.data.length > 0) {\r\n                        this.setState({\r\n                            showSuggestions: true,\r\n                            suggestions: result.data,\r\n                            noResults: false\r\n                        });\r\n                    }\r\n                    else {\r\n                        this.setState({\r\n                            showSuggestions: true,\r\n                            noResults: true\r\n                        });\r\n                    }\r\n\r\n                });\r\n        }\r\n        else {\r\n            this.setState({\r\n                showSuggestions: false,\r\n                suggestions: []\r\n            })\r\n        }\r\n    }\r\n    onBlurHandler() {\r\n        this.setState({\r\n            showSuggestions: false\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={this.props.parentClassName}>\r\n                <input onChange={event => {\r\n                    event.persist();\r\n                    this.searchHandler(event);\r\n                }} className={this.props.className} type=\"text\" placeholder=\"Buscar Producto\" id=\"searchInput\" />\r\n                <div ref={this.suggestionBox} className=\"\">\r\n                    {this.state.showSuggestions &&\r\n                        <OutsideClickHandler\r\n                            onOutsideClick={this.onBlurHandler}><Suggestions suggestions={this.state.suggestions} noResults={this.state.noResults} clickHandler={this.props.clickHandler} onlyName={this.props.onlyName}></Suggestions>\r\n                        </OutsideClickHandler>}\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchInput;","import React, { Component } from \"react\";\r\nimport SearchInput from \"../globalComponents/SearchInput\";\r\n\r\nclass Header extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.headerContainer = React.createRef();\r\n        this.scrollHandler = this.scrollHandler.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener(\"scroll\", this.scrollHandler);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"scroll\", this.scrollHandler);\r\n    }\r\n\r\n    scrollHandler() {\r\n        if (window.scrollY > 100) {\r\n            this.headerContainer.current.parentElement.style.backgroundColor = \"#3c4055\";\r\n            this.headerContainer.current.parentElement.style.outlineStyle = \"solid\";\r\n            this.headerContainer.current.parentElement.style.outlineWidth = \"2px\";\r\n            //this.headerContainer.current.querySelector(\"#brand-title\").classList.replace(\"text-danger\", \"text-light\")\r\n        }\r\n        else {\r\n            this.headerContainer.current.parentElement.style.backgroundColor = \"white\";\r\n            this.headerContainer.current.parentElement.style.outlineStyle = \"none\";\r\n            //this.headerContainer.current.querySelector(\"#brand-title\").classList.replace(\"text-light\", \"text-danger\")\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div ref={this.headerContainer} className=\"row\">\r\n                <div className=\"col-12 col-lg-5 brand-image-container\">\r\n                    <div className=\"brand-image h-100\" />\r\n                </div>\r\n                <SearchInput parentClassName={\"col-10 col-lg-4 my-auto\"} className={\"form-control\"} />\r\n                <div className=\"col-1 d-flex\">\r\n                    <img className=\"align-items-middle mx-auto\" src=\"/icons/shopping-cart.svg\" alt=\"Shopping Cart\" />\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component } from \"react\";\r\n\r\nclass Navigation extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row mt-3 mt-lg-0\">\r\n                <div className=\"col-12\">\r\n                    <nav className=\"navbar navbar-expand-md navbar-dark bg-dark pl-0 pr-0\">\r\n                        <button className=\"navbar-toggler col-sm-12\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                            <span className=\"navbar-toggler-icon\"></span>\r\n                        </button>\r\n                        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                            <ul className=\"navbar-nav mr-auto container\">\r\n                                <li className=\"nav-item\">\r\n                                    <a className=\"nav-link text-light font-weight-bold\" href=\"#\">HOME</a>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <a className=\"nav-link text-light font-weight-bold\" href=\"#\">PRODUCTOS</a>\r\n                                </li>\r\n\r\n                                <li className=\"nav-item\">\r\n                                    <a className=\"nav-link text-light font-weight-bold\" href=\"#\">SERVICIOS</a>\r\n                                </li>\r\n\r\n                                <li className=\"nav-item\">\r\n                                    <a className=\"nav-link text-light font-weight-bold\" href=\"#\">DESCUENTOS</a>\r\n                                </li>\r\n\r\n                                <li className=\"nav-item\">\r\n                                    <a className=\"nav-link text-light font-weight-bold\" href=\"#\">PROMOCIONES</a>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navigation","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as productActions from \"../actions/productActions\";\r\nimport * as categoriesActions from \"../actions/categoriesActions\";\r\n\r\nclass ProductCategories extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.fetchProducts = this.fetchProducts.bind(this);\r\n        this.categoryHandler = this.categoryHandler.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        fetch(\"/api/categories\")\r\n            .then(categories => categories.json())\r\n            .then(categories => {\r\n                if (categories.data.length > 0) {\r\n                    this.props.dispatch(categoriesActions.loadCategories(categories.data))\r\n                    this.props.dispatch(categoriesActions.setActiveCategoryId(document.querySelector(\".categoryItem, active\").getAttribute(\"categoryId\")))\r\n                    this.props.dispatch(categoriesActions.setActiveCategoryName(document.querySelector(\".categoryItem, active\").innerText));\r\n                }\r\n            });\r\n\r\n    }\r\n\r\n    categoryHandler(event) {\r\n        event.preventDefault();\r\n        if (!event.target.className.includes(\"active\")) {\r\n            event.target.parentElement.querySelector(\".active\").classList.remove(\"active\");\r\n            event.target.classList.add(\"active\");\r\n            this.props.dispatch(categoriesActions.setActiveCategoryId(event.target.getAttribute(\"categoryid\")))\r\n            this.props.dispatch(categoriesActions.setActiveCategoryName(event.target.innerText))\r\n            this.fetchProducts(1, 16, event.target.getAttribute(\"categoryid\"))\r\n        }\r\n    }\r\n\r\n    fetchProducts(page, limit, categories) {\r\n        this.props.dispatch(productActions.setLoading(true));\r\n        fetch(`/api/products?page=${page}&limit=${limit}&categories=${categories}`)\r\n            .then(result => result.json())\r\n            .then(paginatedProducts => {\r\n                this.props.dispatch(productActions.loadProducts(paginatedProducts));\r\n                this.props.dispatch(productActions.setLoading(false));\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"col-xs-6 col-sm-12 col-md-12 p-0 mt-0 mt-md-5 productcategoriesContainer\">\r\n                <div className=\"card rounded-0\">\r\n                    <div className=\"card-header\">\r\n                        <h5 className=\"card-title text-danger font-weight-bold\">Categorias</h5>\r\n                    </div>\r\n                    <div className=\"card-body p-0\">\r\n                        <div className=\"list-group\">\r\n                            {\r\n                                this.props.categories ?\r\n                                    this.props.categories.map((category, index) => {\r\n                                        if (index === 0) {\r\n                                            return <li onClick={this.categoryHandler} categoryid={category.id} key={category.id} className=\"categoryItem list-group-item active btn\">{category.name}</li>\r\n                                        }\r\n                                        else {\r\n                                            return <li onClick={this.categoryHandler} categoryid={category.id} key={category.id} className=\"categoryItem list-group-item btn\">{category.name}</li>\r\n                                        }\r\n                                    })\r\n                                    :\r\n                                    <span>No hay categorias</span>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\nfunction mapStateToProps(state, ownProps) {\r\n    return {\r\n        categories: state.categories.data,\r\n        activeCategory: state.categories.activeCategory\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(ProductCategories);","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass CategoryTitle extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <h3 className=\"float-left text-danger mt-2\">{this.props.activeCategory}</h3>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n    return {\r\n        activeCategory: state.categories.activeCategoryName\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(CategoryTitle);","import React, { Component } from \"react\";\r\nimport ContentLoader from 'react-content-loader'\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../actions/productActions\";\r\nimport CategoryTitle from \"../components/CategoryTitle\";\r\n\r\nclass ProductList extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.observer = new IntersectionObserver(this.loadMoreProductsHandler.bind(this));\r\n        this.elementToObserve = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchProducts(1, 16);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.elementToObserve.current) {\r\n            this.observer.observe(this.elementToObserve.current)\r\n        }\r\n    }\r\n\r\n    fetchProducts(page, limit, categories = 1) {\r\n        this.props.dispatch(actions.setLoading(true));\r\n        fetch(`/api/products?page=${page}&limit=${limit}&categories=${categories}`)\r\n            .then(result => result.json())\r\n            .then(paginatedProducts => {\r\n                paginatedProducts.data = this.props.products.concat(paginatedProducts.data);\r\n                this.props.dispatch(actions.loadProducts(paginatedProducts));\r\n                this.props.dispatch(actions.setLoading(false));\r\n            });\r\n    }\r\n\r\n    loadMoreProductsHandler(entries) {\r\n        if (entries[0].isIntersecting) {\r\n            if (this.props.next) {\r\n                this.fetchProducts(this.props.next.page, this.props.next.limit, this.props.activeCategory)\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.props.products.length > 0) {\r\n            let products = this.props.products.map((product, index) => {\r\n                return (\r\n                    <div className=\"col-6 col-sm-6 col-md-4 col-lg-3 p-0 pr-2 pb-2\" key={index}>\r\n                        <div className=\"card\">\r\n                            <img className=\"card-img-top productImage\" src={product.imagePath} alt=\"Imagen del producto\" />\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title font-weight-bold overflow-hidden text-truncate text-dark\">{product.name}</h5>\r\n                                <h5 className=\"text-danger\">Bs. {product.price}</h5>\r\n                            </div>\r\n                            <div className=\"card-footer\">\r\n                                <div className=\"input-group d-flex justify-content-center\">\r\n                                    <input className=\"form-control text-center\" style={{ maxWidth: \"35%\" }} type=\"number\" defaultValue=\"1\" name=\"numberOfItems\" id=\"numberOfItems\" />\r\n                                    <input className=\"bg-dark text-light\" type=\"button\" value=\"Comprar\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            });\r\n\r\n            if (this.props.next) {\r\n                products.push((\r\n                    <div className=\"col-xs-12 col-sm-6 col-md-4 col-lg-3 p-0 pr-2 pb-2\" key=\"contentLoader\" ref={this.elementToObserve}>\r\n                        <ContentLoader\r\n                            speed={1}\r\n                            viewBox=\"0 0 200 400\"\r\n                            backgroundColor=\"#f3f3f3\"\r\n                            foregroundColor=\"#ecebeb\"\r\n                        >\r\n                            <rect x=\"0\" y=\"6\" rx=\"0\" ry=\"0\" width=\"239\" height=\"250\" />\r\n                            <rect x=\"0\" y=\"292\" rx=\"0\" ry=\"0\" width=\"239\" height=\"15\" />\r\n                            <rect x=\"59\" y=\"291\" rx=\"0\" ry=\"0\" width=\"2\" height=\"0\" />\r\n                            <rect x=\"0\" y=\"313\" rx=\"0\" ry=\"0\" width=\"239\" height=\"15\" />\r\n                            <rect x=\"0\" y=\"361\" rx=\"0\" ry=\"0\" width=\"239\" height=\"36\" />\r\n                        </ContentLoader >\r\n                    </div>\r\n                ))\r\n            }\r\n            products.unshift(<div className=\"col-12\">\r\n                <CategoryTitle />\r\n            </div>)\r\n            return products\r\n        }\r\n        else if (this.props.loading) {\r\n            return <p>Loading</p>\r\n        }\r\n        else {\r\n            return <p>No hay productos</p>\r\n        }\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n    return {\r\n        products: state.products.data,\r\n        next: state.products.next,\r\n        previous: state.products.previous,\r\n        loading: state.products.loading,\r\n        activeCategory: state.categories.activeCategory\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ProductList);","import React, { Component } from \"react\";\r\n\r\nclass BackToTopButton extends Component {\r\n    constructor() {\r\n        super()\r\n        this.backToTopButton = React.createRef();\r\n\r\n        this.state = {\r\n            show: false\r\n        }\r\n\r\n        this.scrollHandler = this.scrollHandler.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener(\"scroll\", this.scrollHandler)\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener('scroll', this.scrollHandler);\r\n    }\r\n    scrollHandler() {\r\n        if (window.scrollY > 100) {\r\n            this.setState({\r\n                show: true\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                show: false\r\n            });\r\n        }\r\n    }\r\n\r\n    clickHandler() {\r\n        window.scrollTo(0, 0);\r\n    }\r\n    render() {\r\n        return this.state.show && <button ref={this.backToTopButton} onClick={this.clickHandler} id=\"back-to-top\" className=\"btn btn-secondary btn-lg back-to-top\">Back to Top</button>\r\n    }\r\n}\r\n\r\nexport default BackToTopButton","async function isAuthenticated() {\r\n    let token = localStorage.getItem(\"jwt\");\r\n    if (!token) return false;\r\n    return fetch(`/sessions/isAuthenticated?token=${token}`)\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            return res.auth;\r\n        });\r\n}\r\n\r\nexport default isAuthenticated","import React, { Component } from \"react\";\r\nimport isAuthenticated from \"../requests/isAuthenticated\"\r\nclass Login extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.onSubmitHandler = this.onSubmitHandler.bind(this);\r\n        this.inputHandler = this.inputHandler.bind(this);\r\n\r\n        this.state = {\r\n            email: null,\r\n            password: null,\r\n            logginError: null\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        isAuthenticated().then(authenticated => {\r\n            if (authenticated) {\r\n                this.props.history.push(\"/\")\r\n            }\r\n        })\r\n    }\r\n    onSubmitHandler(event) {\r\n        event.preventDefault();\r\n        this.setState({\r\n            logginError: null\r\n        })\r\n        fetch(\"/sessions\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                email: this.state.email,\r\n                password: this.state.password\r\n            })\r\n        }).then(result => result.json())\r\n            .then(result => {\r\n                if (result.err) {\r\n                    this.setState({\r\n                        logginError: result.err\r\n                    })\r\n                }\r\n                else {\r\n                    localStorage.setItem(\"jwt\", result.token);\r\n                    this.props.history.push(\"/\");\r\n                }\r\n            });\r\n    }\r\n\r\n    inputHandler(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container h-100 col-10 col-md-4\">\r\n                <div className=\"row h-100 justify-content-center align-items-center\">\r\n                    <form onSubmit={this.onSubmitHandler} className=\"col-12\" action=\"/sessions\" method=\"POST\">\r\n                        <div className=\"form-group\">\r\n                            <input onChange={this.inputHandler} type=\"text\" className=\"form-control\" name=\"email\" id=\"email\" placeholder=\"Email\" />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input onChange={this.inputHandler} type=\"password\" className=\"form-control\" name=\"password\" id=\"password\" placeholder=\"Password\" />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <button className=\"btn btn-primary\" type=\"submit\">Enviar</button>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <p className=\"text-danger\">{this.state.logginError}</p>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Login;","const BASE_URL = \"/api/categories\";\r\nconst authorizationHeader = \"Bearer \" + localStorage.getItem(\"jwt\");\r\n\r\nconst functions = {\r\n    fetchAll: async function () {\r\n        let response = await fetch(BASE_URL, {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        })\r\n\r\n        let categories = await response.json();\r\n\r\n        return categories;\r\n    },\r\n    fetchById: async function (id) {\r\n        let response = await fetch(BASE_URL + `?id=${id}`, {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        })\r\n\r\n        let categories = await response.json();\r\n\r\n        return categories;\r\n    },\r\n    fetchByName: async function (name) {\r\n        let response = await fetch(BASE_URL + `?name=${name}`, {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        })\r\n\r\n        let categories = await response.json();\r\n\r\n        return categories;\r\n    },\r\n    create: async function (category) {\r\n        let response = await fetch(BASE_URL, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(category)\r\n        })\r\n\r\n        let categories = await response.json();\r\n\r\n        return categories;\r\n    },\r\n    edit: async function (category) {\r\n        let response = await fetch(BASE_URL + `/${category.id}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({ name: category.name })\r\n        })\r\n\r\n        let categories = await response.json();\r\n\r\n        return categories;\r\n    }\r\n}\r\n\r\nexport default functions","import React, { Component } from \"react\";\r\nimport categoriesRequests from \"../requests/categories\";\r\n\r\nimport $ from \"jquery\";\r\nrequire(\"datatables.net\")\r\nclass Categories extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            fetchMessage: null,\r\n            submitMessage: null,\r\n            submitMessageType: null,\r\n            submitLoading: false,\r\n            categoryName: null,\r\n            categoryAction: null,\r\n            selectedRowData: null\r\n        }\r\n        this.submitHandler = this.submitHandler.bind(this);\r\n        this.changeHandler = this.changeHandler.bind(this);\r\n\r\n        this.categoriesTable = React.createRef();\r\n\r\n        this.addButton = {\r\n            text: 'Add',\r\n            name: 'add',\r\n            className: \"btn btn-success\",\r\n            attr: {\r\n                \"data-toggle\": \"modal\",\r\n                \"data-target\": \"#categoryModal\"\r\n            },\r\n            action: (e, datatable, node, config) => {\r\n                $(\".modal-title\").text(\"Add new category\");\r\n                $(\"#categoryName\").val(\"\");\r\n                this.setState({\r\n                    categoryAction: \"Add\"\r\n                })\r\n            }\r\n        }\r\n\r\n        this.editButton = {\r\n            text: 'Edit',\r\n            name: 'edit',\r\n            className: \"btn btn-secondary\",\r\n            extend: \"selected\",\r\n            attr: {\r\n                \"data-toggle\": \"modal\",\r\n                \"data-target\": \"#categoryModal\"\r\n            },\r\n            action: (e, datatable, node, config) => {\r\n                let selectedRowData = datatable.row({ selected: true }).data();\r\n                $(\".modal-title\").text(\"Edit category\");\r\n                $(\"#categoryName\").val(selectedRowData.name);\r\n                this.setState({\r\n                    categoryAction: \"Edit\",\r\n                    selectedRowData\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let response = await categoriesRequests.fetchAll();\r\n        if (response.data) {\r\n            $(this.categoriesTable.current).DataTable({\r\n                data: response.data,\r\n                columns: [\r\n                    { title: \"ID\", data: \"id\" },\r\n                    { title: \"Nombre\", data: \"name\" },\r\n                    { title: \"Fecha creación\", data: \"createdAt\" }\r\n                ],\r\n                dom: \"Blftip\",\r\n                buttons: [this.addButton, this.editButton],\r\n                select: \"single\",\r\n\r\n            })\r\n        }\r\n        else { //error\r\n            this.setState({\r\n                fetchMessage: response.toString()\r\n            })\r\n        }\r\n    }\r\n\r\n    changeHandler(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    submitHandler(event) {\r\n        event.preventDefault();\r\n\r\n        var response = null;\r\n\r\n        this.setState({\r\n            submitLoading: true\r\n        }, async () => {\r\n            if (this.state.categoryAction == \"Add\") {\r\n                response = await categoriesRequests.create({\r\n                    name: this.state.categoryName\r\n                });\r\n\r\n\r\n            }\r\n            else if (this.state.categoryAction == \"Edit\") {\r\n                response = await categoriesRequests.edit({\r\n                    id: this.state.selectedRowData.id,\r\n                    name: this.state.categoryName\r\n                });\r\n\r\n\r\n                let rowData = $(this.categoriesTable.current).DataTable().rows().data();\r\n                rowData.map((row, index) => {\r\n                    if (row.id == this.state.selectedRowData.id) {\r\n                        let row = $(this.categoriesTable.current).DataTable().row(index);\r\n                        let rowData = row.data();\r\n                        row.data({\r\n                            ...rowData,\r\n                            name: this.state.categoryName\r\n                        })\r\n                    }\r\n                })\r\n\r\n            }\r\n\r\n            if (response.error) {\r\n                this.setState({\r\n                    submitMessage: response.error,\r\n                    submitMessageType: \"Error\",\r\n                    submitLoading: false\r\n                })\r\n            }\r\n            else {\r\n                this.setState({\r\n                    submitMessage: \"Se ha registrado con éxito\",\r\n                    submitMessageType: \"Success\",\r\n                    submitLoading: false\r\n                })\r\n                setTimeout(() => {\r\n                    this.setState({\r\n                        submitMessage: null,\r\n                        submitMessageType: null\r\n                    })\r\n                }, 3000);\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.fetchMessage && <span className=\"text-danger\">{this.state.fetchMessage}</span>}\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1 className=\"text-danger float-left\">Categorías</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-3\">\r\n                    <div className=\"col-md-12\">\r\n                        <table ref={this.categoriesTable} id=\"categoriesTable\" name=\"categoriesTable\" className=\"table table-bordered\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal fade\" id=\"categoryModal\" tabindex=\"-1\" aria-labelledby=\"categoryModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog modal-dialog-centered\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"categoryModalLabel\">Add new category</h5>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                    <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n                            <form onSubmit={this.submitHandler}>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"name\">Category Name: </label>\r\n                                        <input onChange={this.changeHandler} className=\"form-control\" type=\"text\" name=\"categoryName\" id=\"categoryName\" required />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Cerrar</button>\r\n                                    <button type=\"submit\" className=\"btn btn-primary\">\r\n                                        {this.state.submitLoading && <span className=\"spinner-border spinner-border-sm mr-2\" role=\"status\" aria-hidden=\"true\" />}\r\n                                        Enviar</button>\r\n                                </div>\r\n                                {this.state.submitMessage && <span className={(this.state.submitMessageType == \"Error\") ? \"text-danger\" : \"text-success\"}>{this.state.submitMessage}</span>}\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\nexport default Categories;","import React, { Component } from \"react\";\r\nimport debounce from \"lodash.debounce\";\r\n\r\n\r\nconst $ = require('jquery');\r\nconst DataTable = require('datatables.net');\r\nconst jsZip = require('jszip');\r\nrequire('pdfmake');\r\nrequire('datatables.net-buttons-dt');\r\nrequire('datatables.net-buttons/js/buttons.html5.js');\r\nrequire('datatables.net-buttons/js/buttons.print.js');\r\nrequire('datatables.net-buttons/js/buttons.colVis.js');\r\nrequire('datatables.net-select-dt');\r\nwindow.JSZip = jsZip;\r\n\r\nclass ResourceTable extends Component {\r\n\r\n    constructor(props) {\r\n        super();\r\n\r\n        this.recordsTable = React.createRef();\r\n        this.modal = React.createRef();\r\n\r\n        this.state = {\r\n            selectedRowData: null,\r\n            sourceURL: props.sourceURL\r\n        }\r\n\r\n    }\r\n\r\n    changeSourceURL(newSourceURL) {\r\n        let recordsTable = this.recordsTable.current;\r\n        let $recordsTable = $(recordsTable);\r\n\r\n        $recordsTable.DataTable().ajax.url(newSourceURL).load();\r\n    }\r\n\r\n    componentDidMount() {\r\n        let recordsTable = this.recordsTable.current;\r\n        let $recordsTable = $(recordsTable);\r\n        var _this = this;\r\n        if (this.props.asyncTable) {\r\n            $recordsTable = $recordsTable.DataTable({\r\n                initComplete: function () {\r\n                    this.api().columns().every(function () {\r\n                        var column = this;\r\n                        if (column.dataSrc() == \"createdAt\" || column.dataSrc() == \"updatedAt\") {\r\n                            $(this.header()).append(\"<br><input class='p-0 m-0 h-100' type='date' />\");\r\n                        }\r\n                        else {\r\n                            $(this.header()).append(\"<br><input class='p-0 m-0 h-100' type='text' placeholder='Filtrar'/>\");\r\n                        }\r\n                        $('input', this.header()).on(\"keyup change\", function () {\r\n                            let splittedDataSrc = column.dataSrc().split(\".\");\r\n                            let parameter = \"\";\r\n                            splittedDataSrc.forEach((split, index) => {\r\n                                if (index == 0) {\r\n                                    parameter = splittedDataSrc[0];\r\n                                }\r\n                                else {\r\n                                    parameter += splittedDataSrc[index].charAt(0).toUpperCase() + splittedDataSrc[index].slice(1);\r\n                                }\r\n                            });\r\n                            if (_this.props.sourceURL.includes(\"?\")) {\r\n                                $recordsTable.ajax.url(`${_this.props.sourceURL}&${parameter}=${this.value.trim()}`).load();\r\n                            }\r\n                            else {\r\n                                $recordsTable.ajax.url(`${_this.props.sourceURL}?${parameter}=${this.value.trim()}`).load();\r\n\r\n                            }\r\n                        });\r\n\r\n                    });\r\n                },\r\n                footerCallback: function (row, data) {\r\n                    var api = this.api();\r\n                    api.columns().every(function () {\r\n                        var column = this;\r\n                        if (column.dataSrc() == \"grossTotalDollars\") {\r\n                            let totalDollars = api\r\n                                .column(3)\r\n                                .data()\r\n                                .reduce(function (a, b) {\r\n                                    return a + b\r\n                                }, 0);\r\n                            let pageTotalDollars = api\r\n                                .column(3, { page: 'current' })\r\n                                .data()\r\n                                .reduce(function (a, b) {\r\n                                    return a + b\r\n                                }, 0);\r\n\r\n                            if (totalDollars) {\r\n                                $(column.footer()).html(\r\n                                    `${Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(pageTotalDollars)} <br>\r\n                                            <span class=\"text-danger\">(${Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(totalDollars)} Total)</span>`\r\n                                );\r\n                            }\r\n                            else {\r\n                                $(column.footer()).html(\"\");\r\n                            }\r\n\r\n                        }\r\n                        if (column.dataSrc() == \"grossTotalBs\") {\r\n                            let totalBs = api\r\n                                .column(4)\r\n                                .data()\r\n                                .reduce(function (a, b) {\r\n                                    return a + b\r\n                                }, 0);\r\n\r\n                            let pageTotalBs = api\r\n                                .column(4, { page: 'current' })\r\n                                .data()\r\n                                .reduce(function (a, b) {\r\n                                    return a + b\r\n                                }, 0);\r\n                            if (pageTotalBs) {\r\n                                $(column.footer()).html(\r\n                                    `${Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(pageTotalBs)} <br>\r\n                                        <span class=\"text-danger\">(${Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(totalBs)} Total)</span>`\r\n                                );\r\n                            } else {\r\n                                $(column.footer()).html(\"\");\r\n                            }\r\n                        }\r\n                        if (column.dataSrc() == \"netIncomeDollars\") {\r\n                            let totalDollars = api\r\n                                .column(5)\r\n                                .data()\r\n                                .reduce(function (a, b) {\r\n                                    return a + b\r\n                                }, 0);\r\n\r\n                            let pageTotalDollars = api\r\n                                .column(5, { page: 'current' })\r\n                                .data()\r\n                                .reduce(function (a, b) {\r\n                                    return a + b\r\n                                }, 0);\r\n                            if (pageTotalDollars) {\r\n                                $(column.footer()).html(\r\n                                    `${Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(pageTotalDollars)} <br>\r\n                                        <span class=\"text-danger\">(${Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(totalDollars)} Total)</span>`\r\n                                );\r\n                            } else {\r\n                                $(column.footer()).html(\"\");\r\n                            }\r\n                        }\r\n                        if (column.dataSrc() == \"netIncomeBs\") {\r\n                            let totalBs = api\r\n                                .column(6)\r\n                                .data()\r\n                                .reduce(function (a, b) {\r\n                                    return a + b\r\n                                }, 0);\r\n\r\n                            let pageTotalBs = api\r\n                                .column(6, { page: 'current' })\r\n                                .data()\r\n                                .reduce(function (a, b) {\r\n                                    return a + b\r\n                                }, 0);\r\n                            if (pageTotalBs) {\r\n                                $(column.footer()).html(\r\n                                    `${Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(pageTotalBs)} <br>\r\n                                        <span class=\"text-danger\">(${Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(totalBs)} Total)</span>`\r\n                                );\r\n                            } else {\r\n                                $(column.footer()).html(\"\");\r\n                            }\r\n                        }\r\n                    })\r\n                },\r\n                dom: 'Brltip',\r\n                select: \"single\",\r\n                buttons: [{\r\n                    text: \"Imprimir\",\r\n                    name: \"imprimir\",\r\n                    className: \"btn btn-secondary float-right\",\r\n                    extend: \"print\",\r\n                    messageTop: \"Lista de precios\",\r\n                    footer: true,\r\n                    title: (_this.props.sourceURL.includes(\"productss\")) ? \"Lista de precios\" : \"\",\r\n                    customize: function (win) {\r\n                        $(win.document.body).find('#messageTop').css('text-align', 'center');\r\n                    },\r\n                    exportOptions: {\r\n                        modifier: {\r\n                            page: 'all'\r\n                        },\r\n                        columns: (_this.props.sourceURL.includes(\"products\")) ? [1, 2, 4] : \":visible\"\r\n                    }\r\n                }].concat(this.props.actions.map(action => {\r\n                    if (action == \"add\") {\r\n                        return {\r\n                            text: 'Add',\r\n                            name: 'add',\r\n                            className: \"btn btn-success\",\r\n                            attr: {\r\n                                \"data-toggle\": \"modal\",\r\n                                \"data-target\": \"#exampleModal\"\r\n                            },\r\n                            action: function () {\r\n                                _this.props.setModalAction(\"add\")\r\n                            }\r\n                        }\r\n                    }\r\n                    if (action == \"edit\") {\r\n                        return {\r\n                            text: 'Edit',\r\n                            name: 'edit',\r\n                            className: \"btn btn-secondary\",\r\n                            extend: \"selected\",\r\n                            attr: {\r\n                                \"data-toggle\": \"modal\",\r\n                                \"data-target\": \"#exampleModal\"\r\n                            },\r\n                            action: (e, datatable, node, config) => {\r\n                                var selectedRowData = datatable.row({ selected: true }).data();\r\n                                _this.props.setSelectedRowData(selectedRowData);\r\n                                _this.props.setModalAction(\"edit\");\r\n                            }\r\n                        };\r\n                    }\r\n                    if (action == \"delete\") {\r\n                        return {\r\n                            text: 'Delete',\r\n                            name: 'delete',\r\n                            className: \"btn btn-danger\",\r\n                            extend: \"selected\",\r\n                            action: function (e, datatable, node, config) {\r\n                                var selectedRowData = datatable.row({ selected: true }).data();\r\n                                var r = window.confirm(\"¿Está seguro que desea eliminar este registro?\");\r\n                                if (r == true) {\r\n                                    fetch(`${_this.props.sourceURL}/${selectedRowData.id}`, {\r\n                                        method: \"DELETE\",\r\n                                        headers: {\r\n                                            \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n                                        }\r\n                                    })\r\n                                        .then(res => {\r\n                                            if (res.status == 204) {\r\n                                                datatable.ajax.reload();\r\n                                            }\r\n                                            else {\r\n                                                res.json().then(error => {\r\n                                                    _this.setState({\r\n                                                        error\r\n                                                    })\r\n                                                })\r\n                                            }\r\n                                        })\r\n                                        .catch(error => {\r\n                                            _this.setState({\r\n                                                error\r\n                                            })\r\n                                        })\r\n                                }\r\n\r\n                            }\r\n                        }\r\n                    }\r\n                    if (action == \"date-range\") {\r\n                        return {\r\n                            text: 'Reload',\r\n                            name: 'reload',\r\n                            className: \"btn btn-primary\",\r\n                            action: function (e, datatable, node, config) {\r\n                                datatable.ajax.url(_this.state.sourceURL).load();\r\n                            }\r\n                        }\r\n                    }\r\n                    if (action == \"discount\") {\r\n                        return [\r\n                            {\r\n                                text: 'Apply Discount',\r\n                                name: 'discountButton',\r\n                                className: \"btn btn-primary\",\r\n                                attr: {\r\n                                    \"data-toggle\": \"modal\",\r\n                                    \"data-target\": \"#discountModal\"\r\n                                },\r\n                                extend: \"selected\",\r\n                                action: function (e, datatable, node, config) {\r\n                                    var selectedRowData = datatable.row({ selected: true }).data();\r\n                                    _this.props.setSelectedRowData(selectedRowData);\r\n                                    _this.props.setModalAction(\"applyDiscount\")\r\n\r\n                                }\r\n\r\n                            },\r\n                            {\r\n                                text: 'Cancel Discount',\r\n                                name: 'cancelDiscountButton',\r\n                                className: \"btn btn-danger\",\r\n                                extend: \"selected\",\r\n                                action: function (e, datatable, node, config) {\r\n                                    let response = window.confirm(\"¿Seguro que desea eliminar el descuento?\");\r\n                                    if (response == true) {\r\n                                        let selectedRowData = datatable.row({ selected: true }).data();\r\n                                        let discountId = selectedRowData.discount[0].id;\r\n                                        fetch(`/api/discounts/${discountId}`, {\r\n                                            headers: {\r\n                                                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n                                            },\r\n                                            method: \"DELETE\"\r\n                                        })\r\n                                            .then(res => {\r\n                                                if (res.status == 204) {\r\n                                                    datatable.ajax.reload();\r\n                                                }\r\n                                            })\r\n                                    }\r\n                                    else {\r\n\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                        ]\r\n                    }\r\n\r\n                })),\r\n                serverSide: true,\r\n                ajax: {\r\n                    url: this.state.sourceURL,\r\n                    dataSrc: function (results) {\r\n                        if (typeof results.count == \"object\") {\r\n                            console.log(\"yes\");\r\n                            results.data.forEach((row, index) => {\r\n                                if (row.productId == results.count[index].id) {\r\n                                    row.count = results.count[index].count\r\n                                }\r\n                            })\r\n                        }\r\n\r\n                        if (_this.props.sourceURL.includes(\"/api/sales\") && _this.props.sourceURL.includes(\"group=true\")) {\r\n                            results.data.forEach((row, index) => {\r\n                                row.product = row.product[0];\r\n                                console.log(row);\r\n                                //row.transactions = results.count.reverse()[index].count;\r\n                                row.grossTotalBs = row.grossTotalDollars * row.dolarReference;\r\n\r\n                                row.netIncomeDollars = row.grossTotalDollars * (row.product.profitPercent / 100);\r\n                                row.netIncomeBs = row.netIncomeDollars * row.dolarReference;\r\n                            })\r\n                        }\r\n                        else if (_this.props.sourceURL.includes(\"/api/supplyings\") && _this.props.sourceURL.includes(\"group=true\")) {\r\n                            results.data.forEach((row, index) => {\r\n                                //row.transactions = results.count.reverse()[index].count;\r\n                                row.grossTotalBs = row.grossTotalDollars * row.dolarReference;\r\n                            })\r\n                        }\r\n                        return results.data;\r\n                    },\r\n                    headers: { 'Authorization': `Bearer ${localStorage.getItem(\"jwt\")}` },\r\n                    data: function (d) {\r\n                        if (d.length != -1) {\r\n                            d.page = d.start / d.length + 1;\r\n                            d.limit = d.length;\r\n                        }\r\n                        else {\r\n                            d.page = 1;\r\n                            d.limit = 0;\r\n                        }\r\n\r\n                    },\r\n                    error: function (xhr, error, code) {\r\n                        //alert(code)\r\n                    }\r\n                },\r\n                paging: true,\r\n                lengthMenu: [[10, 25, 50, 100, 1000000000000000], [10, 25, 50, 100, \"All\"]],\r\n                pageLength: (this.props.sourceURL.includes(\"group=true\")) ? 1000000000000000 : 10,\r\n                columns: this.props.columns,\r\n                ordering: false,\r\n                order: _this.props.sorting || [[0, \"desc\"]]\r\n            });\r\n\r\n            if (this.props.actions.includes(\"date-range\")) {\r\n                $(\".dt-buttons\").append(`<div class=\"d-flex justify-content-end\">\r\n                    <label class=\"mr-2\" for=\"dateFrom\">From:</label>\r\n                    <input type=\"date\" id=\"dateFrom\" name=\"dateFrom\">\r\n                    <label class=\"mr-2 ml-2\" for=\"dateTo\">To:</label>\r\n                    <input type=\"date\" id=\"dateTo\" name=\"dateTo\">\r\n                    </div>`)\r\n\r\n                $(\".dt-buttons input[type=date]\").on(\"change\", function () {\r\n                    $recordsTable.ajax.url(`${_this.state.sourceURL}?from=${$(\"#dateFrom\").val()}&to=${$(\"#dateTo\").val()}`).load();\r\n                })\r\n            }\r\n\r\n            $('#resourceTable tbody').on('click', 'td.details-control', function () {\r\n                var tr = $(this).closest('tr');\r\n                var row = $recordsTable.row(tr);\r\n\r\n                if (row.child.isShown()) {\r\n                    // This row is already open - close it\r\n                    row.child.hide();\r\n                    tr.removeClass('shown');\r\n                }\r\n                else {\r\n                    // Open this row\r\n                    row.child(_this.props.childFormat(row.data())).show();\r\n                    tr.addClass('shown');\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            $recordsTable = $recordsTable.DataTable({\r\n                dom: \"\",\r\n                data: this.props.data,\r\n                columns: this.props.columns\r\n            });\r\n        }\r\n\r\n\r\n\r\n        this.modal.current.addEventListener(\"focus\", () => {\r\n            this.modal.current.querySelector(\".form-group\").children[0].focus();\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"bg-light table-responsive\">\r\n                <table id=\"resourceTable\" className=\"table table-bordered\" ref={this.recordsTable} >\r\n                    <thead></thead>\r\n                    <tbody></tbody>\r\n                    <tfoot>\r\n                        <tr>\r\n                            {this.props.columns.map((column, index) => {\r\n                                return <td key={index}></td>\r\n                            })}\r\n                        </tr>\r\n                    </tfoot>\r\n                </table>\r\n                {this.state.error && <span className=\"text-danger\">{this.state.error}</span>}\r\n                <div ref={this.modal} className=\"modal\" id=\"exampleModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n                        <div className=\"modal-content\">\r\n                            {this.props.modalStructure}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ResourceTable;","import React, { Component } from \"react\";\r\nimport ResourceTable from \"./ResourceTable\";\r\nimport $ from \"jquery\";\r\nconst moment = require(\"moment\");\r\n\r\nclass Clients extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.submitHandler = this.submitHandler.bind(this);\r\n        this.setSelectedRowData = this.setSelectedRowData.bind(this);\r\n        this.setModalAction = this.setModalAction.bind(this);\r\n    }\r\n    setSelectedRowData(selectedRowData) {\r\n        this.setState({\r\n            selectedRowData\r\n        }, function () {\r\n            $(\"#name\").val(this.state.selectedRowData.name);\r\n        })\r\n    }\r\n\r\n    setModalAction(modalAction) {\r\n        this.setState({\r\n            modalAction\r\n        })\r\n    }\r\n\r\n    submitHandler(event) {\r\n        event.preventDefault();\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1 className=\"text-danger float-left\">Clientes</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-3\">\r\n                    <div className=\"col-md-12\">\r\n                        <ResourceTable asyncTable={true} setSelectedRowData={this.setSelectedRowData} setModalAction={this.setModalAction} sourceURL={\"/api/clients\"} columns={[\r\n                            { title: \"ID\", data: \"id\" },\r\n                            { title: \"Nombre\", data: \"name\" },\r\n                            { title: \"Cédula\", data: \"cedula\" },\r\n                            { title: \"Fecha creación\", data: \"createdAt\" }\r\n                        ]} actions={[\"add\", \"edit\", \"delete\"]} modalStructure={\r\n                            <form onSubmit={this.submitHandler} className=\"float-left\">\r\n                                <div className=\"modal-header\">\r\n                                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">New Client</h5>\r\n                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                        <span aria-hidden=\"true\">&times;</span>\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"name\">Client Name: </label>\r\n                                        <input className=\"form-control\" type=\"text\" name=\"name\" id=\"name\" autoFocus />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"cedula\">Cédula: </label>\r\n                                        <input className=\"form-control\" type=\"text\" name=\"cedula\" id=\"cedula\" autoFocus />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Cerrar</button>\r\n                                    <button type=\"submit\" className=\"btn btn-primary\">Enviar</button>\r\n                                </div>\r\n                            </form>\r\n                        } />\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Clients;","import React, { Component } from \"react\";\r\nimport Async from 'react-select/async';\r\n\r\nclass CustomSelect extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            options: []\r\n        }\r\n\r\n        this.searchHandler = this.searchHandler.bind(this);\r\n    }\r\n\r\n    roundToNiceNumber(value) {\r\n        var val = 0;\r\n        if (value.toString().length == 4) {\r\n            val = Math.ceil(value / 100) * 100\r\n        }\r\n        else if (value.toString().length > 4) {\r\n            val = Math.ceil(value / 1000) * 1000\r\n        }\r\n\r\n        return val;\r\n    }\r\n\r\n    searchHandler(inputValue, callback) {\r\n        fetch(this.props.sourceURL || `/api/products?name=${inputValue}`)\r\n            .then(result => result.json())\r\n            .then(results => {\r\n                if (results.data.length > 0) {\r\n                    results.data.forEach(item => {\r\n                        item.value = item.name;\r\n                        if (item.imagePath) {\r\n                            item.label = [<img className=\"float-left\" style={{ maxWidth: \"20px\" }} src={item.imagePath} />, `${item.name} (${this.roundToNiceNumber(item.price * this.props.dolarReference)})`];\r\n                        }\r\n                        else {\r\n                            item.label = `${item.name} (${Intl.NumberFormat(\"es-VE\", { style: \"currency\", currency: \"VES\" }).format(this.roundToNiceNumber(item.price * this.props.dolarReference))})`\r\n                        }\r\n                    });\r\n                    callback(results.data)\r\n                }\r\n            });\r\n    }\r\n    render() {\r\n        return (\r\n            <Async\r\n                loadOptions={this.searchHandler}\r\n                defaultOptions\r\n                placeholder=\"Buscar\"\r\n                autoFocus\r\n                inputId=\"selectedProduct\"\r\n                isMulti={this.props.isMulti}\r\n                isClearable\r\n                ref={this.props.innerRef}\r\n                name={this.props.name}\r\n                onChange={this.props.changeHandler}\r\n                value={this.props.value}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default CustomSelect;","import React, { Component } from \"react\";\r\nimport ResourceTable from \"./ResourceTable\";\r\nimport CustomSelect from \"../globalComponents/CustomSelect\";\r\n\r\n\r\nimport moment from \"moment\";\r\nimport $ from \"jquery\";\r\nconst DataTable = require('datatables.net');\r\n\r\nclass Products extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {\r\n            selectedCategories: null,\r\n            name: \"\",\r\n            productImageFile: \"\",\r\n            profitPercent: \"\",\r\n            success: \"\",\r\n            error: \"\",\r\n            modalAction: null,\r\n            discountPercent: null,\r\n            discountStartDate: null,\r\n            discountEndDate: null,\r\n            selectedRowData: null\r\n        }\r\n\r\n        this.submitHandler = this.submitHandler.bind(this);\r\n        this.discountSubmitHandler = this.discountSubmitHandler.bind(this);\r\n        this.optionChangeHandler = this.optionChangeHandler.bind(this);\r\n        this.changeHandler = this.changeHandler.bind(this);\r\n        this.setModalAction = this.setModalAction.bind(this);\r\n        this.setSelectedRowData = this.setSelectedRowData.bind(this);\r\n\r\n        this.CustomSelectRef = React.createRef();\r\n        this.productForm = React.createRef();\r\n        this.closeButton = React.createRef();\r\n    }\r\n\r\n    setModalAction(modalAction) {\r\n        this.setState({\r\n            modalAction\r\n        })\r\n    }\r\n\r\n    setSelectedRowData(selectedRowData) {\r\n        let categories = [];\r\n        selectedRowData.category.forEach(category => {\r\n            categories.push({ id: category.id, label: category.name, value: category.name });\r\n        })\r\n        this.setState({\r\n            selectedRowData,\r\n            selectedCategories: categories,\r\n            name: selectedRowData.name,\r\n            profitPercent: selectedRowData.profitPercent\r\n        }, () => {\r\n            $(\"#name\").val(this.state.selectedRowData.name);\r\n            $(\"#profitPercent\").val(this.state.selectedRowData.profitPercent);\r\n        })\r\n    }\r\n\r\n    optionChangeHandler(selectedOptions, actionType) {\r\n        this.setState({\r\n            selectedCategories: selectedOptions\r\n        });\r\n    }\r\n\r\n    changeHandler(event) {\r\n        this.setState({\r\n            [event.target.name]: (event.target.type == \"file\") ? event.target.files[0] : event.target.value\r\n        });\r\n    }\r\n\r\n    submitHandler(event) {\r\n        event.preventDefault();\r\n        var categoriesID = \"\";\r\n        if (this.state.selectedCategories) {\r\n            this.state.selectedCategories.forEach((category, index) => {\r\n                categoriesID += category.id\r\n                if (index != this.state.selectedCategories.length - 1) {\r\n                    categoriesID += \",\"\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            alert(\"Seleccione las categorías\")\r\n        }\r\n\r\n        var formData = new FormData();\r\n\r\n        formData.append(\"productImageFile\", this.state.productImageFile);\r\n        formData.append(\"name\", this.state.name);\r\n        formData.append(\"profitPercent\", this.state.profitPercent);\r\n        formData.append(\"categories\", categoriesID);\r\n\r\n        fetch((this.state.modalAction == \"add\") ? \"/api/products\" : `/api/products/${this.state.selectedRowData.id}`, {\r\n            method: (this.state.modalAction == \"add\") ? \"POST\" : \"PATCH\",\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n                \"Accept\": \"application/json\"\r\n            },\r\n            body: formData\r\n        })\r\n            .then(res => {\r\n                if (res.status == 200) {\r\n                    this.setState({\r\n                        success: \"El producto se ha registrado con exito\"\r\n                    });\r\n                    this.productForm.current.reset();\r\n                    this.closeButton.current.click();\r\n                    $(\"#resourceTable\").DataTable().ajax.reload();\r\n                }\r\n                else if (res.status == 409) {\r\n                    res.json().then(response => {\r\n                        this.setState({\r\n                            error: response.error || response.err\r\n                        })\r\n                    })\r\n\r\n                }\r\n            })\r\n            .catch(error => {\r\n                this.setState({\r\n                    error: error\r\n                })\r\n            })\r\n    }\r\n\r\n    discountSubmitHandler(event) {\r\n        event.preventDefault();\r\n        if (this.state.discountPercent && this.state.discountStartDate && this.state.discountEndDate) {\r\n            fetch(\"/api/discounts\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                    productId: this.state.selectedRowData.id,\r\n                    percent: this.state.discountPercent,\r\n                    startDate: this.state.discountStartDate,\r\n                    endDate: this.state.discountEndDate\r\n                })\r\n            })\r\n                .then(res => {\r\n                    if (res.status == 200) {\r\n                        this.setState({\r\n                            success: \"Se ha registrado con éxito\"\r\n                        })\r\n                    } else {\r\n                        res.json().then(res => {\r\n                            this.setState({\r\n                                error: res.error || res.err\r\n                            })\r\n                        })\r\n                    }\r\n                })\r\n        }\r\n        else {\r\n            alert(\"Rellene todos los campos\")\r\n        }\r\n    }\r\n\r\n    roundToNiceNumber(value) {\r\n        var val = 0;\r\n        if (value.toString().length == 4) {\r\n            val = Math.ceil(value / 100) * 100\r\n        }\r\n        else if (value.toString().length > 4) {\r\n            val = Math.ceil(value / 1000) * 1000\r\n        }\r\n\r\n        return val;\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1 className=\"text-danger float-left\">Productos</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-3\">\r\n                    <div className=\"col-md-12\">\r\n                        <ResourceTable asyncTable={true} setSelectedRowData={this.setSelectedRowData} setModalAction={this.setModalAction} sourceURL={\"/api/products\"} columns={[\r\n                            {\r\n                                render: function (data, type, row, meta) {\r\n                                    if (row.imagePath) {\r\n                                        return `<img src=\"${row.imagePath}\" style=\"max-width:35px;\"/>`\r\n                                    }\r\n                                    else {\r\n                                        return \"\";\r\n                                    }\r\n                                },\r\n                                title: \"Imagen\"\r\n                            },\r\n                            { title: \"ID\", data: \"id\" },\r\n                            { title: \"Nombre\", data: \"name\" },\r\n                            { title: \"Precio $\", data: \"price\" },\r\n                            {\r\n                                render: (data) => {\r\n                                    return Intl.NumberFormat(\"es-Ve\", { style: \"currency\", currency: \"VES\" }).format(this.roundToNiceNumber(data * this.props.dolarReference))\r\n                                }, title: \"Precio Bs\", data: \"price\"\r\n                            },\r\n                            {\r\n                                render: function (data) {\r\n                                    return data + \"%\"\r\n                                }, title: \"Porcentaje de Ganancia\", data: \"profitPercent\"\r\n                            },\r\n                            {\r\n                                render: function (data, type, row, meta) {\r\n                                    let disc = data.map(discount => {\r\n                                        return discount.percent\r\n                                    })\r\n\r\n                                    return (disc.length) ? disc + \"%\" : 0 + \"%\"\r\n                                }, title: \"Descuento\", data: \"discount\"\r\n                            },\r\n                            {\r\n                                title: \"Descuento desde\", data: \"discount[0].startDate\"\r\n                            },\r\n                            {\r\n                                title: \"Descuento hasta\", data: \"discount[0].endDate\"\r\n                            },\r\n                            { title: \"Fecha creación\", data: \"createdAt\" },\r\n                            { title: \"Fecha actualización\", data: \"updatedAt\" }\r\n                        ]} actions={[\"add\", \"edit\", \"delete\", \"discount\"]} modalStructure={\r\n                            <form ref={this.productForm} onSubmit={this.submitHandler} className=\"float-left\">\r\n                                <div className=\"modal-header\">\r\n                                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">New Product</h5>\r\n                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                        <span aria-hidden=\"true\">&times;</span>\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"name\">Product Name: </label>\r\n                                        <input onChange={this.changeHandler} className=\"form-control\" type=\"text\" name=\"name\" id=\"name\" required />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"profitPercent\">Profit Percent: </label>\r\n                                        <div className=\"input-group\">\r\n                                            <div className=\"input-group-prepend\">\r\n                                                <div className=\"input-group-text\">%</div>\r\n                                            </div>\r\n                                            <input onChange={this.changeHandler} className=\"form-control\" type=\"number\" step=\"0.1\" name=\"profitPercent\" id=\"profitPercent\" required />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"productImageFile\">Imagen: </label>\r\n                                        <div className=\"custom-file\">\r\n                                            <input onChange={this.changeHandler} type=\"file\" className=\"custom-file-input\" id=\"productImageFile\" name=\"productImageFile\" />\r\n                                            <label className=\"custom-file-label\" htmlFor=\"image\">Choose file</label>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"price\">Categorías: </label>\r\n                                        <CustomSelect sourceURL=\"/api/categories\"\r\n                                            isMulti={true}\r\n                                            innerRef={this.CustomSelectRef}\r\n                                            changeHandler={this.optionChangeHandler}\r\n                                            value={this.state.selectedCategories}\r\n                                            required />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button ref={this.closeButton} type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Cerrar</button>\r\n                                    <button type=\"submit\" className=\"btn btn-primary\">Enviar</button>\r\n                                </div>\r\n                                {this.state.success && <span className=\"text-success\">{this.state.success}</span>}\r\n                                {this.state.error && <span className=\"text-danger\">{this.state.error}</span>}\r\n                            </form>\r\n                        } />\r\n                        <div id=\"discountModal\" className=\"modal\" tabIndex=\"-1\">\r\n                            <div className=\"modal-dialog\">\r\n                                <div className=\"modal-content\">\r\n                                    <div className=\"modal-header\">\r\n                                        <h5 className=\"modal-title\"></h5>\r\n                                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                            <span aria-hidden=\"true\">&times;</span>\r\n                                        </button>\r\n                                    </div>\r\n                                    <form onSubmit={this.discountSubmitHandler}>\r\n                                        <div className=\"modal-body\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"discountPercent\">Discount Percent: </label>\r\n                                                <div className=\"input-group\">\r\n                                                    <input onChange={this.changeHandler} className=\"form-control\" type=\"number\" step=\"0.01\" min=\"0\" name=\"discountPercent\" id=\"discountPercent\" required />\r\n                                                    <div className=\"input-group-append\">\r\n                                                        <div className=\"input-group-text\">%</div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <label htmlFor=\"discountStartDate\">Start Date:</label>\r\n                                                <div className=\"input-group\">\r\n                                                    <input onChange={this.changeHandler} className=\"form-control\" type=\"date\" name=\"discountStartDate\" id=\"discountStartDate\" required />\r\n                                                </div>\r\n                                                <label htmlFor=\"discountEndDate\">End Date:</label>\r\n                                                <div className=\"input-group\">\r\n                                                    <input onChange={this.changeHandler} className=\"form-control\" type=\"date\" name=\"discountEndDate\" id=\"discountEndDate\" required />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"modal-footer\">\r\n                                            <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Cerrar</button>\r\n                                            <button type=\"submit\" className=\"btn btn-primary\">Enviar</button>\r\n                                        </div>\r\n                                        {this.state.success && <span className=\"text-success\">{this.state.success}</span>}\r\n                                        {this.state.error && <span className=\"text-danger\">{this.state.error}</span>}\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Products;","import React, { Component } from \"react\";\r\n\r\nimport moment from \"moment\";\r\nimport ResourceTable from \"./ResourceTable\";\r\nclass Sales extends Component {\r\n    constructor() {\r\n        super()\r\n        this.submitHandler = this.submitHandler.bind(this);\r\n        this.roundToNiceNumber = this.roundToNiceNumber.bind(this);\r\n        this.childFormat = this.childFormat.bind(this);\r\n    }\r\n\r\n    submitHandler(event) {\r\n        event.preventDefault()\r\n        console.log(\"hola\");\r\n    }\r\n\r\n    roundToNiceNumber(value) {\r\n        var val = 0;\r\n        if (value.toString().length == 4) {\r\n            val = Math.ceil(value / 100) * 100\r\n        }\r\n        else if (value.toString().length > 4) {\r\n            val = Math.ceil(value / 1000) * 1000\r\n        }\r\n\r\n        return val;\r\n    }\r\n\r\n    childFormat(d) {\r\n        let childRowInfo = \"\";\r\n        d.saleProducts.forEach(saleProduct => {\r\n            childRowInfo += `\r\n            <div class='form-row align-items-center'>\r\n                    <div class=\"col-1\">\r\n                        <label for=\"productId\">Product ID</label>\r\n                        <input class=\"form-control\" id=\"productId\" value=\"${saleProduct.productId}\" disabled/>\r\n                    </div>\r\n                    <div class=\"col-4\">\r\n                        <label for=\"productName\">Name</label>\r\n                        <input class=\"form-control\" id=\"productName\" value=\"${saleProduct.product[0].name}\" disabled/>\r\n                    </div>\r\n                    <div class=\"col-1\">\r\n                        <label for=\"productPrice\">Price $</label>\r\n                        <input class=\"form-control\" id=\"productPrice\" value=\"$${saleProduct.price}\" disabled/>\r\n                    </div>\r\n                    <div class=\"col-1\">\r\n                        <label for=\"productPriceBs\">Price Bs</label>\r\n                        <input class=\"form-control\" id=\"productPriceBs\" value=\"Bs.S ${this.roundToNiceNumber(saleProduct.price * saleProduct.dolarReference)}\" disabled/>\r\n                    </div>\r\n                    <div class=\"col-1\">\r\n                        <label for=\"discount\">Discount</label>\r\n                        <input class=\"form-control\" id=\"discount\" value=\"${saleProduct.discount}%\" disabled/>\r\n                    </div>\r\n                    <div class=\"col-1\">\r\n                        <label for=\"productQuantity\">Quantity</label>\r\n                        <input class=\"form-control\" id=\"productQuantity\" value=\"${saleProduct.quantity}\" disabled/>\r\n                    </div>\r\n                    <div class=\"col-2\">\r\n                        <label for=\"dolarValue\">Dolar value</label>\r\n                        <input class=\"form-control\" id=\"dolarValue\" value=\"${Intl.NumberFormat(\"es-VE\", { style: \"currency\", currency: \"VES\" }).format(saleProduct.dolarReference)}\" disabled/>\r\n                    </div>\r\n            </div>\r\n            `\r\n        })\r\n        childRowInfo += \"\"\r\n        return childRowInfo\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1 className=\"text-danger float-left\">Ventas</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-3\">\r\n                    <div className=\"col-md-12\">\r\n                        <ResourceTable asyncTable={true} childFormat={this.childFormat} sourceURL={\"/api/sales\"} columns={[\r\n                            { title: \"ID\", data: \"id\" },\r\n                            {\r\n                                \"title\": \"Productos\",\r\n                                \"className\": 'details-control',\r\n                                \"orderable\": false,\r\n                                \"data\": \"productName\",\r\n                                defaultContent: '<button class=\"btn btn-success\">Ver Productos</button>'\r\n                            },\r\n                            { title: \"Fecha creación\", data: \"createdAt\" }\r\n\r\n                        ]} actions={[\"edit\", \"delete\"]} />\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Sales;","import React, { Component } from \"react\";\r\nimport moment from \"moment\";\r\nimport ResourceTable from \"./ResourceTable\";\r\n\r\nimport $ from \"jquery\";\r\nimport DataTable from \"datatables.net\";\r\nclass Suppliers extends Component {\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {\r\n            name: null,\r\n            rif: null,\r\n            success: null,\r\n            error: null\r\n        }\r\n        this.submitHandler = this.submitHandler.bind(this);\r\n        this.inputChangeHandler = this.inputChangeHandler.bind(this);\r\n        this.setModalAction = this.setModalAction.bind(this);\r\n\r\n    }\r\n\r\n    setModalAction(modalAction) {\r\n        this.setState({\r\n            modalAction\r\n        })\r\n    }\r\n\r\n    submitHandler(event) {\r\n        event.preventDefault();\r\n        if (this.state.name && this.state.rif) {\r\n            fetch(\"/api/suppliers\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                    name: this.state.name,\r\n                    rif: this.state.rif\r\n                })\r\n            })\r\n                .then(res => {\r\n                    if (res.status == 200) {\r\n                        this.setState({\r\n                            success: \"Se ha registrado de forma exitosa.\"\r\n                        });\r\n                        $(\"#resourceTable\").DataTable().draw();\r\n                    }\r\n                    else {\r\n                        res.text().then(error => {\r\n                            this.setState({\r\n                                error\r\n                            })\r\n                        })\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n    inputChangeHandler(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1 className=\"text-danger float-left\">Proveedores</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-3\">\r\n                    <div className=\"col-md-12\">\r\n                        <ResourceTable asyncTable={true} setModalAction={this.setModalAction} sourceURL={\"/api/suppliers\"} columns={[\r\n                            { title: \"ID\", data: \"id\" },\r\n                            { title: \"Nombre\", data: \"name\" },\r\n                            { title: \"RIF\", data: \"rif\" },\r\n                            { title: \"Fecha creación\", data: \"createdAt\" }\r\n\r\n                        ]} actions={[\"add\", \"edit\", \"delete\"]} modalStructure={\r\n                            <form onSubmit={this.submitHandler} className=\"float-left\">\r\n                                <div className=\"modal-header\">\r\n                                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">New Supplier</h5>\r\n                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                        <span aria-hidden=\"true\">&times;</span>\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"name\">Supplier Name: </label>\r\n                                        <input onChange={this.inputChangeHandler} className=\"form-control\" type=\"text\" name=\"name\" id=\"name\" required />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"rif\">RIF: </label>\r\n                                        <input onChange={this.inputChangeHandler} className=\"form-control\" type=\"text\" name=\"rif\" id=\"rif\" required />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Cerrar</button>\r\n                                    <button type=\"submit\" className=\"btn btn-primary\">Enviar</button>\r\n                                </div>\r\n                                {this.state.success && <span className=\"text-success\">{this.state.success}</span>}\r\n                                {this.state.error && <span className=\"text-danger\">{this.state.error}</span>}\r\n                            </form>\r\n                        } />\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Suppliers;","import React, { Component } from \"react\";\r\nimport moment from \"moment\";\r\nimport ResourceTable from \"./ResourceTable\";\r\nimport CustomSelect from \"../globalComponents/CustomSelect\";\r\n\r\nimport $ from \"jquery\";\r\nconst DataTable = require('datatables.net');\r\n\r\nclass Supplyings extends Component {\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {\r\n            supplier: null,\r\n            product: null,\r\n            price: null,\r\n            quantity: null,\r\n            success: null,\r\n            error: null\r\n        }\r\n        this.submitHandler = this.submitHandler.bind(this);\r\n        this.supplierChangeHandler = this.supplierChangeHandler.bind(this);\r\n        this.productChangeHandler = this.productChangeHandler.bind(this);\r\n        this.inputChangeHandler = this.inputChangeHandler.bind(this);\r\n        this.setModalAction = this.setModalAction.bind(this);\r\n\r\n        this.supplierSelect = React.createRef();\r\n        this.productSelect = React.createRef();\r\n        this.supplyingForm = React.createRef();\r\n\r\n    }\r\n\r\n    setModalAction(modalAction) {\r\n        this.setState({\r\n            modalAction\r\n        })\r\n    }\r\n\r\n    supplierChangeHandler(selectedOption) {\r\n        this.setState({\r\n            supplier: selectedOption\r\n        });\r\n    }\r\n\r\n    productChangeHandler(selectedOption) {\r\n        this.setState({\r\n            product: selectedOption\r\n        });\r\n    }\r\n\r\n    inputChangeHandler(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n    submitHandler(event) {\r\n        event.preventDefault();\r\n        if (this.state.supplier && this.state.product && this.state.price && this.state.quantity) {\r\n            fetch(\"/api/supplyings\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                    supplierId: this.state.supplier.id,\r\n                    productId: this.state.product.id,\r\n                    price: this.state.price,\r\n                    quantity: this.state.quantity,\r\n                    dolarReference: this.props.dolarReference\r\n                })\r\n            }).then(res => {\r\n                if (res.status == 200) {\r\n                    this.setState({\r\n                        success: \"Se ha registrado el abastecimiento con éxito\"\r\n                    })\r\n                    this.supplyingForm.current.reset();\r\n                    $(\"#resourceTable\").DataTable().draw();\r\n                }\r\n                else {\r\n                    res.text().then(error => {\r\n                        this.setState({\r\n                            error\r\n                        })\r\n                    })\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            alert(\"Por favor rellene todos los campos\")\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1 className=\"text-danger float-left\">Abastecimiento</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-3\">\r\n                    <div className=\"col-md-12\">\r\n                        <ResourceTable asyncTable={true} setModalAction={this.setModalAction} sourceURL={\"/api/supplyings\"} columns={[\r\n                            { title: \"ID\", data: \"id\" },\r\n                            { title: \"ID Proveedor\", data: \"supplierId\" },\r\n                            { title: \"Nombre Proveedor\", data: \"supplier.name\" },\r\n                            { title: \"ID Product\", data: \"productId\" },\r\n                            { title: \"Nombre Producto\", data: \"product.name\" },\r\n                            {\r\n                                render: function (data) {\r\n                                    return \"$\" + data\r\n                                }, title: \"Precio de Compra\", data: \"price\"\r\n                            },\r\n                            {\r\n                                render: function (data) {\r\n                                    return (data > 1) ? data + \" Unidades\" : data + \" Unidad\"\r\n                                }, title: \"Cantidad\", data: \"quantity\"\r\n                            },\r\n                            { title: \"Fecha creación\", data: \"createdAt\" },\r\n                            { title: \"Fecha actualización\", data: \"updatedAt\" }\r\n\r\n                        ]} actions={[\"add\", \"edit\", \"delete\"]} modalStructure={\r\n                            <form ref={this.supplyingForm} onSubmit={this.submitHandler} className=\"float-left\">\r\n                                <div className=\"modal-header\">\r\n                                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">New Supplying</h5>\r\n                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                        <span aria-hidden=\"true\">&times;</span>\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"supplierId\">Supplier ID: </label>\r\n                                        <CustomSelect sourceURL=\"/api/suppliers\"\r\n                                            isMulti={false}\r\n                                            innerRef={this.supplierSelect}\r\n                                            changeHandler={this.supplierChangeHandler} required />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"productId\">Product ID: </label>\r\n                                        <CustomSelect\r\n                                            isMulti={false}\r\n                                            innerRef={this.productSelect}\r\n                                            changeHandler={this.productChangeHandler} required />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"price\">Price: </label>\r\n                                        <input onChange={this.inputChangeHandler} className=\"form-control\" type=\"number\" step=\"0.00000000000000001\" name=\"price\" id=\"price\" required />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"quantity\">Quantity: </label>\r\n                                        <input onChange={this.inputChangeHandler} className=\"form-control\" type=\"number\" step=\"0.1\" name=\"quantity\" id=\"quantity\" required />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Cerrar</button>\r\n                                    <button type=\"submit\" className=\"btn btn-primary\">Enviar</button>\r\n                                </div>\r\n                                {this.state.success && <span className=\"text-success\">{this.state.success}</span>}\r\n                                {this.state.error && <span className=\"text-danger\">{this.state.error}</span>}\r\n                            </form>\r\n                        } />\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Supplyings;","import React, { Component } from \"react\";\r\nimport moment from \"moment\";\r\nimport ResourceTable from \"./ResourceTable\";\r\n\r\nimport $ from \"jquery\";\r\nimport DataTable from \"datatables.net\";\r\n\r\nclass Users extends Component {\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {\r\n            email: null,\r\n            password: null,\r\n            permissions: null,\r\n            success: null,\r\n            error: null\r\n        }\r\n\r\n        this.submitHandler = this.submitHandler.bind(this);\r\n\r\n        this.inputChangeHandler = this.inputChangeHandler.bind(this);\r\n\r\n        this.form = React.createRef();\r\n    }\r\n\r\n    submitHandler(event) {\r\n        event.preventDefault();\r\n\r\n        if (this.state.email && this.state.password && this.state.permissions) {\r\n\r\n            fetch(\"/api/users\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                    email: this.state.email,\r\n                    password: this.state.password,\r\n                    permissions: this.state.permissions\r\n                })\r\n            }).then(res => {\r\n                if (res.status == 200) {\r\n                    this.setState({\r\n                        success: \"Se ha registrado con éxito\"\r\n                    });\r\n                    this.form.current.reset();\r\n                    $(\"resourceTable\").DataTable().draw();\r\n                }\r\n                else {\r\n                    res.text().then(error => {\r\n                        this.setState({\r\n                            error\r\n                        })\r\n                    })\r\n                }\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    inputChangeHandler(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1 className=\"text-danger float-left\">Usuarios</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-3\">\r\n                    <div className=\"col-md-12\">\r\n                        <ResourceTable asyncTable={true} sourceURL={\"/api/users\"} columns={[\r\n                            { title: \"ID\", data: \"id\" },\r\n                            { title: \"Email\", data: \"email\" },\r\n                            { title: \"Permisos\", data: \"permissions\" },\r\n                            { title: \"Fecha creación\", data: \"createdAt\" }\r\n\r\n                        ]} actions={[\"add\", \"delete\"]} modalStructure={\r\n                            <form ref={this.form} onSubmit={this.submitHandler} className=\"float-left\">\r\n                                <div className=\"modal-header\">\r\n                                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">New Supplier</h5>\r\n                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                        <span aria-hidden=\"true\">&times;</span>\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"email\">Email: </label>\r\n                                        <input onChange={this.inputChangeHandler} className=\"form-control\" type=\"text\" name=\"email\" id=\"email\" required />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"password\">Password: </label>\r\n                                        <input onChange={this.inputChangeHandler} className=\"form-control\" type=\"password\" name=\"password\" id=\"password\" required />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"permissions\">Permissions: </label>\r\n                                        <input onChange={this.inputChangeHandler} className=\"form-control\" type=\"text\" name=\"permissions\" id=\"permissions\" required />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Cerrar</button>\r\n                                    <button type=\"submit\" className=\"btn btn-primary\">Enviar</button>\r\n                                </div>\r\n                                {this.state.success && <span className=\"text-success\">{this.state.success}</span>}\r\n                                {this.state.error && <span className=\"text-danger\">{this.state.error}</span>}\r\n                            </form>\r\n                        } />\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Users;","import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nclass Navigation extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.clickHandler = this.clickHandler.bind(this);\r\n        this.logout = this.logout.bind(this);\r\n    }\r\n\r\n    logout() {\r\n        localStorage.removeItem(\"jwt\");\r\n    }\r\n\r\n    clickHandler(event) {\r\n        this.setState({\r\n            activeNavLink: event.target.innerText\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark flex-lg-column flex-xl-row\">\r\n                <a className=\"navbar-brand text-danger\" href=\"/\">Supermercado Melquisedec</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n\r\n                <div className=\"collapse navbar-collapse row p-0 m-0\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav flex-lg-row mx-auto container-fluid p-0 m-0\">\r\n                        <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\r\n                            <NavLink className=\"nav-link\" onClick={this.clickHandler} to=\"/control-de-ventas\"><span className=\"d-md-inline\">Control de Ventas</span></NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\r\n                            <NavLink className=\"nav-link\" onClick={this.clickHandler} to=\"/inventario\"><span className=\"d-md-inline\">Inventario</span></NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\r\n                            <NavLink className=\"nav-link\" onClick={this.clickHandler} to=\"/reportes\"><span className=\"d-md-inline\">Reportes</span></NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\r\n                            <NavLink className=\"nav-link\" onClick={this.clickHandler} to=\"/categorias\"><span className=\"d-md-inline\">Categorías</span></NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\r\n                            <NavLink className=\"nav-link\" onClick={this.clickHandler} to=\"/clientes\"><span className=\"d-md-inline\">Clientes</span></NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\r\n                            <NavLink className=\"nav-link\" onClick={this.clickHandler} to=\"/productos\"><span className=\"d-md-inline\">Productos</span></NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\r\n                            <NavLink className=\"nav-link\" onClick={this.clickHandler} to=\"/ventas\"><span className=\"d-md-inline\">Ventas</span></NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\r\n                            <NavLink className=\"nav-link\" onClick={this.clickHandler} to=\"/abastecimiento\"><span className=\"d-md-inline\">Abastecimiento</span></NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\r\n                            <NavLink className=\"nav-link\" onClick={this.clickHandler} to=\"/proveedores\"><span className=\"d-md-inline\">Proveedores</span></NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\r\n                            <NavLink className=\"nav-link\" onClick={this.clickHandler} to=\"/usuarios\"><span className=\"d-md-inline\">Usuarios</span></NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\r\n                            <NavLink className=\"nav-link btn btn-danger px-0\" onClick={this.logout} to=\"/signin\">Cerrar Sesión</NavLink>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navigation;","import React, { Component } from \"react\";\r\n\r\nimport CustomSelect from \"../globalComponents/CustomSelect\";\r\n\r\nclass SalesControl extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            selectedProduct: null,\r\n            addedProducts: [],\r\n            subtotalDollars: null,\r\n            subtotalBs: null,\r\n            totalDollars: null,\r\n            totalBs: null,\r\n            quantity: 1,\r\n            stockError: \"\",\r\n            error: \"\",\r\n            success: \"\"\r\n        }\r\n        this.productsHandler = this.productsHandler.bind(this);\r\n        this.submitHandler = this.submitHandler.bind(this);\r\n        this.optionChangeHandler = this.optionChangeHandler.bind(this);\r\n        this.onChangeHandler = this.onChangeHandler.bind(this);\r\n        this.clickHandler = this.clickHandler.bind(this);\r\n\r\n        this.saleSubmitButton = React.createRef();\r\n\r\n\r\n        this.sendSaleForm = React.createRef();\r\n        this.quantityInput = React.createRef();\r\n        this.CustomSelectRef = React.createRef();\r\n        this.productsTable = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.body.addEventListener(\"keyup\", (event) => {\r\n            let key = event.key;\r\n            if (event.ctrlKey && key == \"Enter\") {\r\n                if (this.saleSubmitButton.current) this.saleSubmitButton.current.click()\r\n            }\r\n        });\r\n    }\r\n\r\n    optionChangeHandler(selectedOption, actionType) {\r\n        if (actionType.action == \"select-option\") {\r\n            this.quantityInput.current.focus();\r\n            this.quantityInput.current.select();\r\n        }\r\n        this.setState({\r\n            selectedProduct: selectedOption\r\n        })\r\n    }\r\n    onChangeHandler(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    productsHandler(event) {\r\n        event.preventDefault();\r\n\r\n        if (this.state.selectedProduct != null) {\r\n            fetch(`/api/inventory/${this.state.selectedProduct.id}`, {\r\n                headers: {\r\n                    \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n                }\r\n            })\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    let stock = res.data[0].stock;\r\n                    if (stock > 0 && stock >= this.state.quantity) {\r\n                        let product = this.state.selectedProduct;\r\n\r\n                        let productFormatted = {};\r\n\r\n                        let discount = 0;\r\n                        if (product.discount.length) {\r\n                            discount = product.discount[0].percent;\r\n                        }\r\n\r\n                        product.discount = discount;\r\n                        product.quantity = this.state.quantity || 1;\r\n\r\n                        product.totalDollars = product.price * product.quantity - (product.price * (discount / 100));\r\n                        product.priceBs = this.roundToNiceNumber(product.price * this.props.dolarReference);\r\n                        product.totalBs = this.roundToNiceNumber(product.priceBs * product.quantity - (product.priceBs * (discount / 100)));\r\n\r\n                        if (discount) {\r\n                            product.totalFormattedDollars = <span className={(discount) ? \"text-danger\" : \"\"}>{Intl.NumberFormat('es-VE', { style: 'currency', currency: 'USD' }).format(product.totalDollars) + ` (-${discount}%)`}</span>;\r\n                            product.totalFormattedBs = <span className={(discount) ? \"text-danger\" : \"\"}>{Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(product.totalBs) + ` (-${discount}%)`}</span>;\r\n                        }\r\n                        else {\r\n                            product.totalFormattedDollars = Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(product.totalDollars);\r\n                            product.totalFormattedBs = Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(product.totalBs);\r\n                        }\r\n\r\n                        productFormatted = {\r\n                            id: product.id,\r\n                            name: product.name,\r\n                            price: product.price,\r\n                            priceBs: product.priceBs,\r\n                            quantity: product.quantity,\r\n                            totalDollars: product.totalDollars,\r\n                            totalBs: product.totalBs,\r\n                            imagePath: product.imagePath,\r\n                            totalFormattedDollars: product.totalFormattedDollars,\r\n                            totalFormattedBs: product.totalFormattedBs,\r\n                            discount: product.discount\r\n                        };\r\n\r\n                        this.CustomSelectRef.current.select.state.value = [];\r\n                        this.quantityInput.current.value = 1\r\n                        this.CustomSelectRef.current.focus();\r\n\r\n                        let productExistsInTable = false;\r\n                        this.state.addedProducts.forEach(product => {\r\n                            if (productFormatted.id == product.id) {\r\n                                productExistsInTable = true;\r\n                                product.quantity += productFormatted.quantity;\r\n                            }\r\n                        })\r\n                        if (!productExistsInTable) {\r\n                            this.setState({\r\n                                quantity: 1,\r\n                                addedProducts: this.state.addedProducts.concat(productFormatted),\r\n                                selectedProduct: null,\r\n                                stockError: \"\"\r\n                            }, function () {\r\n                                let totalDollars = 0;\r\n                                let totalBs = 0;\r\n                                this.state.addedProducts.map(product => {\r\n                                    totalDollars += parseFloat(product.totalDollars);\r\n                                    totalBs += parseFloat(product.totalBs);\r\n                                });\r\n                                this.setState({\r\n                                    subtotalDollars: totalDollars,\r\n                                    subtotalBs: totalBs,\r\n                                    totalDollars,\r\n                                    totalBs\r\n                                })\r\n                            });\r\n                        }\r\n                        else {\r\n                            var index = this.state.addedProducts.findIndex(product => product.id === productFormatted.id);\r\n\r\n                            this.setState({\r\n                                addedProducts: [\r\n                                    ...this.state.addedProducts.slice(0, index),\r\n                                    Object.assign({}, this.state.addedProducts[index], { ...productFormatted }),\r\n                                    ...this.state.addedProducts.slice(index + 1)\r\n                                ],\r\n                                quantity: 1,\r\n                                selectedProduct: null,\r\n                                stockError: \"\"\r\n                            }, function () {\r\n                                let totalDollars = 0;\r\n                                let totalBs = 0;\r\n                                this.state.addedProducts.map(product => {\r\n                                    totalDollars += parseFloat(product.totalDollars);\r\n                                    totalBs += parseFloat(product.totalBs);\r\n                                });\r\n                                this.setState({\r\n                                    subtotalDollars: totalDollars,\r\n                                    subtotalBs: totalBs,\r\n                                    totalDollars,\r\n                                    totalBs\r\n                                })\r\n                            })\r\n                        }\r\n                        this.productsTable.current.scrollTop = this.productsTable.current.scrollHeight;\r\n                    }\r\n                    else {\r\n                        this.setState({\r\n                            stockError: \"No hay productos suficientes en el inventario\"\r\n                        });\r\n                    }\r\n                });\r\n        }\r\n        else {\r\n            this.setState({\r\n                stockError: \"Seleccione un producto\"\r\n            })\r\n        }\r\n    }\r\n    clickHandler(event) {\r\n        let newProducts = [];\r\n        let totalToSubtractDollars = 0;\r\n        let totalToSubtractBs = 0;\r\n\r\n        this.state.addedProducts.forEach(product => {\r\n            if (product.id != event.currentTarget.parentElement.parentElement.getAttribute(\"productid\")) {\r\n                newProducts.push(product);\r\n            }\r\n            else {\r\n                totalToSubtractDollars += product.totalDollars;\r\n                totalToSubtractBs += product.totalBs;\r\n            }\r\n        })\r\n        this.setState({\r\n            addedProducts: newProducts,\r\n            subtotalDollars: this.state.subtotalDollars - totalToSubtractDollars,\r\n            subtotalBs: this.state.subtotalBs - totalToSubtractBs,\r\n            totalDollars: this.state.totalDollars - totalToSubtractDollars,\r\n            totalBs: this.state.totalBs - totalToSubtractBs\r\n        });\r\n        this.CustomSelectRef.current.focus();\r\n    }\r\n\r\n    submitHandler() {\r\n        if (!this.state.addedProducts.length) {\r\n            this.setState({\r\n                stockError: \"Seleccione un producto\"\r\n            })\r\n            return\r\n        }\r\n        this.saleSubmitButton.current.disabled = true;\r\n        let saleProducts = [];\r\n        this.state.addedProducts.forEach(product => {\r\n            saleProducts.push({\r\n                id: product.id,\r\n                quantity: product.quantity,\r\n                price: product.price,\r\n                dolarReference: this.props.dolarReference,\r\n                discount: product.discount\r\n            })\r\n        });\r\n        fetch(\"/api/sales\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n                'Content-Type': 'application/json'\r\n\r\n            },\r\n            body: JSON.stringify({\r\n                products: saleProducts\r\n            })\r\n        }).then(res => res.json())\r\n            .then(res => {\r\n                if (res.err || res.error) {\r\n                    this.setState({\r\n                        error: res.err\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        success: \"La venta se ha realizado con éxito\",\r\n                        selectedProduct: null,\r\n                        addedProducts: [],\r\n                        subtotalDollars: null,\r\n                        subtotalBs: null,\r\n                        totalDollars: null,\r\n                        totalBs: null,\r\n                        quantity: 1,\r\n                        stockError: \"\",\r\n                        error: \"\",\r\n                    })\r\n                    setTimeout(() => {\r\n                        this.setState({\r\n                            success: \"\"\r\n                        })\r\n                    }, 3000);\r\n                    this.CustomSelectRef.current.select.state.value = [];\r\n                    this.quantityInput.current.value = 1\r\n                    this.CustomSelectRef.current.focus();\r\n                    this.saleSubmitButton.current.disabled = false;\r\n\r\n                }\r\n            })\r\n    }\r\n\r\n    roundToNiceNumber(value) {\r\n        var val = 0;\r\n        if (value.toString().length == 4) {\r\n            val = Math.ceil(value / 100) * 100\r\n        }\r\n        else if (value.toString().length > 4) {\r\n            val = Math.ceil(value / 1000) * 1000\r\n        }\r\n\r\n        return val;\r\n    }\r\n    render() {\r\n        var _this = this;\r\n        return (\r\n            <div className=\"container-fluid\" id=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1 className=\"text-danger\">Control de Ventas</h1>\r\n                    </div>\r\n                </div>\r\n                <input ref={this.saleSubmitButton} onClick={this.submitHandler} type=\"button\" className=\"form-control btn btn-primary\" value=\"Enviar\" />\r\n                <form className=\"mt-5\" onSubmit={this.productsHandler}>\r\n                    <div className=\"col\">\r\n                        <span className=\"text-danger\">{this.state.stockError}</span>\r\n                        <span className=\"text-danger h3\">{this.state.error}</span>\r\n                        <span className=\"text-success h3\">{this.state.success}</span>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 col-md-7 mt-2\">\r\n                            <CustomSelect dolarReference={_this.props.dolarReference} isMulti={false} innerRef={this.CustomSelectRef} changeHandler={this.optionChangeHandler} name={\"ProductSelect\"} />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-3 mt-2\">\r\n                            <input onChange={this.onChangeHandler} ref={this.quantityInput} type=\"text\" className=\"form-control\" placeholder=\"Cantidad\" id=\"quantity\" name=\"quantity\" defaultValue=\"1\" />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-10 col-lg-2 mt-2\">\r\n                            <input type=\"submit\" className=\"form-control btn btn-primary\" hidden />\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <div ref={this.productsTable} className=\"table-responsive w-100\" style={{ height: \"380px\" }}>\r\n                            <table className=\"table table-striped table-dark overflow-auto\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"col\">Count</th>\r\n                                        <th scope=\"col\">Product ID</th>\r\n                                        <th scope=\"col\">Nombre</th>\r\n                                        <th scope=\"col\">Precio $</th>\r\n                                        <th scope=\"col\">Precio Bs</th>\r\n                                        <th scope=\"col\">Cantidad</th>\r\n                                        <th scope=\"col\">Total $</th>\r\n                                        <th scope=\"col\">Total Bs</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {this.state.addedProducts.map((product, index) => {\r\n                                        return (\r\n                                            <tr key={index} productid={product.id}>\r\n                                                <th>{index + 1}</th>\r\n                                                <th>{product.id}</th>\r\n                                                <th><img className=\"float-left mr-2\" style={{ maxWidth: \"20px\" }} src={product.imagePath} />{product.name}</th>\r\n                                                <th>{Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(product.price)}</th>\r\n                                                <th>{Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(product.priceBs)}</th>\r\n                                                <th>{product.quantity}</th>\r\n                                                <th>{product.totalFormattedDollars}</th>\r\n                                                <th>{product.totalFormattedBs}</th>\r\n                                                <th>\r\n                                                    <button onClick={this.clickHandler} className=\"btn btn-danger\">Delete</button>\r\n                                                </th>\r\n                                            </tr>\r\n                                        )\r\n                                    })}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <div className=\"d-flex flex-column align-items-end\">\r\n                            <label className=\"font-weight-bold h4\">{\"Subtotal Bs: \"}\r\n                                <span className=\"font-weight-bold h4 text-danger\">{Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(this.state.subtotalBs)}</span>\r\n                            </label>\r\n                            <label className=\"font-weight-bold h4\">{\"Total Bs: \"}\r\n                                <span className=\"font-weight-bold h4 text-danger\">{Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(this.state.totalBs)}</span>\r\n                            </label>\r\n                            <hr className=\"w-100\" />\r\n                            <label className=\"font-weight-bold h4\">{\"Subtotal $: \"}\r\n                                <span className=\"font-weight-bold h4 text-danger\">{Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(this.state.subtotalDollars)}</span>\r\n                            </label>\r\n                            <label className=\"font-weight-bold h4\">{\"Total $: \"}\r\n                                <span className=\"font-weight-bold h4 text-danger\">{Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(this.state.totalDollars)}</span>\r\n                            </label>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SalesControl;","import React, { Component } from \"react\";\r\n\r\nimport ResourceTable from \"./ResourceTable\";\r\n\r\nclass Inventory extends Component {\r\n\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1 className=\"text-danger float-left\">Ventas</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-3\">\r\n                    <div className=\"col-md-12\">\r\n                        <ResourceTable asyncTable={true} sourceURL={\"/api/inventory\"} columns={[\r\n                            { title: \"Product ID\", data: \"id\" },\r\n                            { title: \"Nombre Producto\", data: \"name\" },\r\n                            {\r\n                                title: \"Inventario\", data: \"stock\", render: function (data, type, row) {\r\n                                    if (data <= 0) {\r\n                                        return `<span class=\"text-danger\">${data}</span>`\r\n                                    }\r\n                                    return `<span class=\"text-success\">${data}</span>`\r\n                                }\r\n                            },\r\n                            { title: \"Total productos vendidos\", data: \"salesTotal\" },\r\n                            { title: \"Total productos comprados\", data: \"supplyingsTotal\" }\r\n                        ]} actions={[]} />\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Inventory;","import React, { Component } from \"react\"\r\nimport ResourceTable from \"./ResourceTable\";\r\n\r\nconst moment = require(\"moment\");\r\n\r\nconst $ = require(\"jquery\");\r\nconst DataTable = require(\"datatables.net\");\r\n\r\nclass Reports extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            resource: \"sales\",\r\n            parameters: \"\"\r\n        }\r\n\r\n        this.submitHandler = this.submitHandler.bind(this);\r\n        this.changeHandler = this.changeHandler.bind(this);\r\n\r\n        this.reportForm = React.createRef();\r\n        this.resourceTable = React.createRef();\r\n    }\r\n\r\n    changeHandler(event) {\r\n        let dateRangeFromValue = document.body.querySelector(\"#rangeDateFrom\").value;\r\n        let dateRangeToValue = document.body.querySelector(\"#rangeDateTo\").value;\r\n        let greaterThanDate = document.body.querySelector(\"#greaterThanDate\").value;\r\n        let lowerThanDate = document.body.querySelector(\"#lowerThanDate\").value;\r\n        let equalDate = document.body.querySelector(\"#equalDate\").value;\r\n\r\n        var previousParameters = this.state.parameters;\r\n        var parameters = \"\";\r\n        if (event.target.name == \"dateRadios\") {\r\n            $(\"form\").find(\"input[type=date]\").val(\"\");\r\n            switch (event.target.id) {\r\n                case \"today\":\r\n                    parameters = `from=${moment(new Date()).format(\"YYYY-MM-DD\")}&to=${moment(new Date()).format(\"YYYY-MM-DD\")}`\r\n                    break;\r\n                case \"yesterday\":\r\n                    parameters = `from=${moment(new Date()).subtract(1, \"days\").format(\"YYYY-MM-DD\")}&to=${moment(new Date()).subtract(1, \"days\").format(\"YYYY-MM-DD\")}`\r\n                    break;\r\n                case \"lastWeek\":\r\n                    parameters = `from=${moment(new Date()).subtract(7, \"days\").format(\"YYYY-MM-DD\")}&to=${moment(new Date()).format(\"YYYY-MM-DD\")}`\r\n                    break;\r\n                case \"fortnight\":\r\n                    parameters = `from=${moment(new Date()).subtract(15, \"days\").format(\"YYYY-MM-DD\")}&to=${moment(new Date()).format(\"YYYY-MM-DD\")}`\r\n                    break;\r\n                case \"month\":\r\n                    parameters = `from=${moment(new Date()).subtract(1, \"months\").format(\"YYYY-MM-DD\")}&to=${moment(new Date()).format(\"YYYY-MM-DD\")}`\r\n                    break;\r\n                case \"quarter\":\r\n                    parameters = `from=${moment(new Date()).subtract(3, \"months\").format(\"YYYY-MM-DD\")}&to=${moment(new Date()).format(\"YYYY-MM-DD\")}`\r\n                    break;\r\n                case \"semester\":\r\n                    parameters = `from=${moment(new Date()).subtract(6, \"months\").format(\"YYYY-MM-DD\")}&to=${moment(new Date()).format(\"YYYY-MM-DD\")}`\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            parameters += \"&group=true\"\r\n        }\r\n        else if (event.target.name == \"reportType\") {\r\n            this.setState({\r\n                resource: event.target.id,\r\n                parameters: \"\"\r\n            }, function () {\r\n                this.setState({\r\n                    parameters: previousParameters\r\n                })\r\n            });\r\n            return;\r\n        }\r\n        else {\r\n            $(\"form\").find(\"input[name=dateRadios]\").prop(\"checked\", false);\r\n            $(\"form\").find(\"input[type=date]\").val(\"\");\r\n            switch (event.target.id) {\r\n                case \"greaterThanDate\":\r\n                    parameters = `createdAt=${greaterThanDate}&operation=gte`\r\n                    event.target.value = greaterThanDate;\r\n                    break;\r\n                case \"lowerThanDate\":\r\n                    parameters = `createdAt=${lowerThanDate}&operation=lte`\r\n                    event.target.value = lowerThanDate;\r\n                    break;\r\n                case \"equalDate\":\r\n                    parameters = `createdAt=${equalDate}&operation=eq`\r\n                    event.target.value = equalDate;\r\n                    break;\r\n                case \"rangeDateFrom\":\r\n                    if (dateRangeToValue) {\r\n                        parameters = `from=${moment(dateRangeFromValue || \"\").format(\"YYYY-MM-DD\")}&to=${dateRangeToValue}`\r\n                    }\r\n                    else {\r\n                        parameters = `from=${moment(dateRangeFromValue || \"\").format(\"YYYY-MM-DD\")}`\r\n                    }\r\n                    event.target.value = dateRangeFromValue;\r\n                    $(\"#rangeDateTo\").val(dateRangeToValue);\r\n                    break;\r\n                case \"rangeDateTo\":\r\n                    if (dateRangeFromValue) {\r\n                        parameters = `from=${dateRangeFromValue}&to=${moment(dateRangeToValue || \"\").format(\"YYYY-MM-DD\")}`\r\n                    }\r\n                    else {\r\n                        parameters = `to=${moment(dateRangeToValue || \"\").format(\"YYYY-MM-DD\")}`\r\n                    }\r\n                    event.target.value = dateRangeToValue;\r\n                    $(\"#rangeDateFrom\").val(dateRangeFromValue);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            parameters += \"&group=true\"\r\n        }\r\n        this.setState({\r\n            parameters\r\n        });\r\n    }\r\n    componentDidUpdate() {\r\n        if (this.resourceTable.current) {\r\n            this.resourceTable.current.changeSourceURL(`/api/${this.state.resource}?${this.state.parameters}`);\r\n        }\r\n    }\r\n    submitHandler(event) {\r\n        event.preventDefault();\r\n        console.log(this.state.parameters);\r\n        this.reportForm.current.reset();\r\n    }\r\n    render() {\r\n        var salesColumns = [\r\n            /*\r\n            {\r\n                render: function (data, type, row, meta) {\r\n                    return `<img src=\"${row.product.imagePath}\" style=\"max-width:35px;\"/>`\r\n                },\r\n                title: \"Imagen\", data: \"product.imagePath\"\r\n            },\r\n            */\r\n            { title: \"Product ID\", data: \"product.id\" },\r\n            { title: \"Nombre\", data: \"product.name\" },\r\n            //{ title: \"Transacciones\", data: \"transactions\" },\r\n            { title: \"Cantidad de productos\", data: \"salesTotal\" },\r\n            {\r\n                render: function (data, type, row, meta) {\r\n                    return Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(row.grossTotalDollars)\r\n                }, title: (this.state.resource == \"sales\") ? \"Ganancia bruta $\" : \"Costo bruto $\", data: \"grossTotalDollars\"\r\n            },\r\n            {\r\n                render: function (data, type, row, meta) {\r\n                    return Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(row.grossTotalBs)\r\n                }, title: (this.state.resource == \"sales\") ? \"Ganancia bruta Bs\" : \"Costo bruto Bs\", data: \"grossTotalBs\"\r\n            },\r\n            {\r\n                render: function (data, type, row, meta) {\r\n                    return Intl.NumberFormat('en-US', {\r\n                        style: 'currency',\r\n                        currency: 'USD',\r\n                    }).format(row.netIncomeDollars)\r\n                }, title: (this.state.resource == \"sales\") ? \"Ganancia Neta $\" : \"Ganancia neta $\", data: \"netIncomeDollars\"\r\n            },\r\n            {\r\n                render: function (data, type, row, meta) {\r\n                    return Intl.NumberFormat('es-VE', {\r\n                        style: 'currency',\r\n                        currency: 'VES',\r\n                    }).format(row.netIncomeBs)\r\n                }, title: (this.state.resource == \"sales\") ? \"Ganancia Neta Bs\" : \"Ganancia Neta Bs\", data: \"netIncomeBs\"\r\n            }\r\n        ];\r\n\r\n        var supplyingsColumns = [\r\n            /*\r\n            {\r\n                render: function (data, type, row, meta) {\r\n                    return `<img src=\"${row.product.imagePath}\" style=\"max-width:35px;\"/>`\r\n                },\r\n                title: \"Imagen\", data: \"product.imagePath\"\r\n            },\r\n            */\r\n            { title: \"Product ID\", data: \"product.id\" },\r\n            { title: \"Nombre\", data: \"product.name\" },\r\n            //{ title: \"Transacciones\", data: \"transactions\" },\r\n            { title: \"Cantidad de productos\", data: \"quantity\" },\r\n            {\r\n                render: function (data, type, row, meta) {\r\n                    return Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(row.grossTotalDollars)\r\n                }, title: (this.state.resource == \"sales\") ? \"Ganancia bruta $\" : \"Costo bruto $\", data: \"grossTotalDollars\"\r\n            },\r\n            {\r\n                render: function (data, type, row, meta) {\r\n                    return Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(row.grossTotalBs)\r\n                }, title: (this.state.resource == \"sales\") ? \"Ganancia bruta Bs\" : \"Costo bruto Bs\", data: \"grossTotalBs\"\r\n            }\r\n        ];\r\n\r\n        return (\r\n            <div className=\"\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1 className=\"text-danger float-left\">Reportes</h1>\r\n                    </div>\r\n                </div>\r\n                <hr />\r\n                <form ref={this.reportForm} onSubmit={this.submitHandler}>\r\n                    <div className=\"col-12\">\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <h3 className=\"mr-4\">Tipo de reporte:</h3>\r\n                        </div>\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input onChange={this.changeHandler} className=\"form-check-input\" type=\"radio\" name=\"reportType\" id=\"supplyings\" value=\"supplyingRadio\" />\r\n                            <label className=\"form-check-label\" htmlFor=\"supplyingRadio\">Compra</label>\r\n                        </div>\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input onChange={this.changeHandler} className=\"form-check-input\" type=\"radio\" name=\"reportType\" id=\"sales\" value=\"saleRadio\" defaultChecked />\r\n                            <label className=\"form-check-label\" htmlFor=\"saleRadio\">Venta</label>\r\n                        </div>\r\n                    </div>\r\n                    <hr className=\"col-12 p-0\" />\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 col-lg-2\">\r\n                            <h5 className=\"mr-4\">Rango de fechas:</h5>\r\n                            <div className=\"form-group\">\r\n                                <input onChange={this.changeHandler} type=\"date\" name=\"rangeDateFrom\" id=\"rangeDateFrom\" />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input onChange={this.changeHandler} type=\"date\" name=\"rangeDateTo\" id=\"rangeDateTo\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12 col-lg-4\">\r\n                            <div className=\"form-check form-check-inline\">\r\n                                <label className=\"btn btn-secondary\" htmlFor=\"semester\" name=\"labelDateRadios\">\r\n                                    <input onChange={this.changeHandler} className=\"form-check-input\" type=\"radio\" name=\"dateRadios\" id=\"semester\" />\r\n                                    6 meses\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"form-check form-check-inline\">\r\n                                <label className=\"btn btn-secondary\" htmlFor=\"quarter\" name=\"labelDateRadios\">\r\n                                    <input onChange={this.changeHandler} className=\"form-check-input\" type=\"radio\" name=\"dateRadios\" id=\"quarter\" />\r\n                                3 meses\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"form-check form-check-inline\">\r\n                                <label className=\"btn btn-secondary\" htmlFor=\"month\" name=\"labelDateRadios\">\r\n                                    <input onChange={this.changeHandler} className=\"form-check-input\" type=\"radio\" name=\"dateRadios\" id=\"month\" />\r\n                                1 mes\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"form-check form-check-inline\">\r\n                                <label className=\"btn btn-secondary\" htmlFor=\"fortnight\" name=\"labelDateRadios\">\r\n                                    <input onChange={this.changeHandler} className=\"form-check-input\" type=\"radio\" name=\"dateRadios\" id=\"fortnight\" />\r\n                                15 días\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"form-check form-check-inline\">\r\n                                <label className=\"btn btn-secondary\" htmlFor=\"lastWeek\" name=\"labelDateRadios\">\r\n                                    <input onChange={this.changeHandler} className=\"form-check-input\" type=\"radio\" name=\"dateRadios\" id=\"lastWeek\" />\r\n                                Útima semana\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"form-check form-check-inline\">\r\n                                <label className=\"btn btn-secondary\" htmlFor=\"yesterday\" name=\"labelDateRadios\">\r\n                                    <input onChange={this.changeHandler} className=\"form-check-input\" type=\"radio\" name=\"dateRadios\" id=\"yesterday\" />\r\n                                Ayer\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"form-check form-check-inline\">\r\n                                <label className=\"btn btn-secondary\" htmlFor=\"today\" name=\"labelDateRadios\">\r\n                                    <input onChange={this.changeHandler} className=\"form-check-input\" type=\"radio\" name=\"dateRadios\" id=\"today\" />\r\n                                Hoy\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12 col-lg-2\">\r\n                            <div className=\"\">\r\n                                <h5 className=\"\">Fecha mayor o igual a:</h5>\r\n                                <input onChange={this.changeHandler} type=\"date\" name=\"greaterThanDate\" id=\"greaterThanDate\" />\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className=\"col-12 col-lg-2\">\r\n                            <div className=\"\">\r\n                                <h5 className=\"\">Fecha menor o igual a:</h5>\r\n                                <input onChange={this.changeHandler} type=\"date\" name=\"lowerThanDate\" id=\"lowerThanDate\" />\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className=\"col-12 col-lg-2\">\r\n                            <div className=\"\">\r\n                                <h5 className=\"\">Fecha igual a:</h5>\r\n                                <input onChange={this.changeHandler} type=\"date\" name=\"equalDate\" id=\"equalDate\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <hr />\r\n                </form>\r\n\r\n                <div className=\"row mt-3\">\r\n                    <div className=\"col-md-12\">\r\n                        {this.state.parameters != \"\" && <ResourceTable ref={this.resourceTable} asyncTable={true} sourceURL={`/api/${this.state.resource}?${this.state.parameters}`} columns={\r\n                            (this.state.resource == \"sales\") ? salesColumns : supplyingsColumns\r\n                        } actions={[]} dolarReference={this.props.dolarReference} />}\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Reports;","import React, { Component } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport isAuthenticated from \"../requests/isAuthenticated\";\r\n\r\nclass PrivateRoute extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            loading: true,\r\n            isAuthenticated: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        isAuthenticated().then(isAuthenticated => {\r\n            this.setState({\r\n                loading: false,\r\n                isAuthenticated\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { component: Component, ...rest } = this.props\r\n        return (\r\n            <Route\r\n                render={props =>\r\n                    this.state.isAuthenticated ? (\r\n                        <Component {...props} {...rest} />\r\n                    ) : (\r\n                            this.state.loading ? (\r\n                                <div>LOADING</div>\r\n                            ) : (\r\n                                    <Redirect to={{ pathname: '/signin', state: { from: this.props.location } }} />\r\n                                )\r\n                        )\r\n                }\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default PrivateRoute;","import React, { Component } from \"react\";\r\n\r\nimport Categories from \"./Categories\";\r\nimport Clients from \"./Clients\";\r\nimport Products from \"./Products\";\r\nimport Sales from \"./Sales\";\r\nimport Suppliers from \"./Suppliers\";\r\nimport Supplyings from \"./Supplyings\";\r\nimport Users from \"./Users\";\r\nimport Navigation from \"./Navigation\";\r\nimport SalesControl from \"./SalesControl\";\r\nimport Inventory from \"./Inventory\";\r\nimport Reports from \"./Reports\";\r\nimport PrivateRoute from \"../components/PrivateRoute\";\r\n\r\nimport { Route } from \"react-router-dom\";\r\n\r\nimport $ from \"jquery\";\r\nclass Dashboard extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            formattedDolareReference: \"\",\r\n            dolarReference: 0,\r\n            loading: false,\r\n            newDolarReference: null\r\n        }\r\n\r\n        this.fetchDolarReference = this.fetchDolarReference.bind(this);\r\n        this.dolarReferenceSubmitHandler = this.dolarReferenceSubmitHandler.bind(this);\r\n        this.changeHandler = this.changeHandler.bind(this);\r\n        this.closeEditDolarModalButton = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchDolarReference();\r\n    }\r\n\r\n    fetchDolarReference() {\r\n        this.setState({\r\n            loading: true\r\n        });\r\n        fetch(\"/api/dolarReference\", {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if (res.data) {\r\n                    this.setState({\r\n                        dolarReference: res.data.price,\r\n                        formattedDolareReference: Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(res.data.price),\r\n                        loading: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        dolarReference: 0,\r\n                        formattedDolareReference: Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(0),\r\n                        loading: false\r\n                    })\r\n                }\r\n            })\r\n    }\r\n\r\n    changeHandler(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    dolarReferenceSubmitHandler(event) {\r\n        event.preventDefault();\r\n\r\n        fetch(\"/api/dolarReference\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({ price: this.state.newDolarReference })\r\n        })\r\n            .then(res => {\r\n                if (res.status == 204) {\r\n                    window.location.reload();\r\n                } else {\r\n                    alert(\"Error\")\r\n                }\r\n            })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row sticky-top\">\r\n                    <div className=\"col-md-12 p-0\">\r\n                        <Navigation />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"bg-danger text-light col-12\">\r\n                        Precio del Dolar <span id=\"dolarReference\" className=\"badge badge-light\">{(this.state.loading) ? \"Loading...\" : this.state.formattedDolareReference}</span>\r\n                        <button className=\"btn btn-secondary ml-4\" data-toggle=\"modal\" data-target=\"#dolarEditModal\" >Editar</button>\r\n                    </div>\r\n\r\n                </div>\r\n                <main className=\"mt-5\">\r\n                    <Route path=\"/control-de-ventas\" render={(props) => (<SalesControl {...props} dolarReference={this.state.dolarReference} />)} />\r\n                    <Route path=\"/inventario\" component={Inventory} />\r\n                    <Route path=\"/reportes\" render={(props) => (<Reports {...props} dolarReference={this.state.dolarReference} />)} />\r\n                    <Route path=\"/categorias\" component={Categories} />\r\n                    <Route path=\"/clientes\" component={Clients} />\r\n                    <Route path=\"/productos\" render={(props) => (<Products {...props} dolarReference={this.state.dolarReference} />)} />\r\n                    <Route path=\"/ventas\" component={Sales} />\r\n                    <Route path=\"/abastecimiento\" render={(props) => (<Supplyings {...props} dolarReference={this.state.dolarReference} />)} />\r\n                    <Route path=\"/proveedores\" component={Suppliers} />\r\n                    <Route path=\"/usuarios\" component={Users} />\r\n                </main>\r\n                <div className=\"modal fade\" id=\"dolarEditModal\" tabindex=\"-1\" aria-labelledby=\"dolarEditModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"dolarEditModalLabel\">Nuevo precio del dolar</h5>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                    <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n                            <form onSubmit={this.dolarReferenceSubmitHandler}>\r\n                                <div className=\"modal-body\">\r\n                                    <input name=\"newDolarReference\" onChange={this.changeHandler} className=\"form-control\" type=\"number\" placeholder=\"Ingrese el nuevo precio del dolar. Ej: 400000\" />\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button ref={this.closeEditDolarModalButton} type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                    <button type=\"submit\" className=\"btn btn-primary\">Save changes</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Dashboard;","const initialState = {\r\n    data: [],\r\n    next: {},\r\n    previous: {},\r\n    loading: false\r\n};\r\nexport default function productReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case \"LOAD_PRODUCTS\":\r\n            return {\r\n                ...state,\r\n                data: action.paginatedProducts.data,\r\n                next: action.paginatedProducts.next,\r\n                previous: action.paginatedProducts.previous\r\n            }\r\n        case \"LOADING\":\r\n            return { ...state, loading: action.loading }\r\n        default:\r\n            return state;\r\n    }\r\n}","\r\nconst initialState = {\r\n    activeCategoryId: 0,\r\n    activeCategoryName: \"\",\r\n    data: []\r\n}\r\nexport default function categoriesReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case \"LOAD_CATEGORIES\":\r\n            return { ...state, data: action.categories }\r\n        case \"SET_ACTIVE_CATEGORY_ID\":\r\n            return { ...state, activeCategoryId: action.categoryId }\r\n        case \"SET_ACTIVE_CATEGORY_NAME\":\r\n            return { ...state, activeCategoryName: action.categoryName }\r\n        default:\r\n            return state;\r\n    }\r\n}","import products from \"./productReducer\";\r\nimport categories from \"./categoriesReducer\";\r\n\r\nexport default { products, categories }","import { createStore, combineReducers } from \"redux\";\r\nimport reducers from \"../reducers\";\r\n\r\nconst rootReducer = combineReducers({\r\n    ...reducers\r\n})\r\nexport default function configureStore() {\r\n    return createStore(rootReducer);\r\n}","import React from 'react';\nimport './App.css';\n\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\n\nimport Header from \"./components/Header\";\nimport Navigation from \"./components/Navigation\";\nimport ProductCategories from \"./components/ProductCategories\";\nimport ProductList from \"./components/ProductList\";\nimport BackToTopButton from \"./components/BackToTopButton\";\nimport Login from \"./components/Login\";\nimport Dashboard from \"./adminComponents/Dashboard\";\n\nimport PrivateRoute from \"./components/PrivateRoute\";\n\nimport configureStore from \"./store/configureStore\";\nimport { Provider } from \"react-redux\";\n\nconst store = configureStore();\n\nfunction App() {\n\n  /*\n  <Route path=\"/\">\n              <div className=\"container-fluid\">\n                <div className=\"row bg-dark\" style={{ height: \"30px\" }} />\n                <div className=\"row sticky-top\">\n                  <div className=\"col-12\">\n                    <Header />\n                  </div>\n                </div>\n                <Navigation />\n\n                <div className=\"row\">\n                  <div className=\"col-md-12 mt-2\">\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"col-md-3 mt-2\">\n                    <div className=\"row\">\n                      <div className=\"col-12\">\n                        <ProductCategories />\n                      </div>\n                    </div>\n                    <div className=\"row\">\n                      <div className=\"col-12 d-flex flex-column align-items-center\">\n                        <BackToTopButton />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-md-8 mt-2 d-flex flex-wrap justify-content-start\">\n                    <ProductList />\n                  </div>\n                </div>\n              </div>\n            </Route>\n  */\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <Router>\n          <Switch>\n            <Route exact path=\"/signin\" component={Login} />\n            <PrivateRoute path=\"/\" component={Dashboard} />\n          </Switch>\n        </Router>\n      </div>\n\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = {\r\n    loadProducts: function (paginatedProducts) {\r\n        return { type: \"LOAD_PRODUCTS\", paginatedProducts }\r\n    },\r\n    setLoading: function (loading) {\r\n        return { type: \"LOADING\", loading }\r\n    },\r\n}","module.exports = {\r\n    loadCategories: function (categories) {\r\n        return { type: \"LOAD_CATEGORIES\", categories }\r\n    },\r\n    setActiveCategoryId: function (categoryId) {\r\n        return { type: \"SET_ACTIVE_CATEGORY_ID\", categoryId }\r\n    },\r\n    setActiveCategoryName: function (categoryName) {\r\n        return { type: \"SET_ACTIVE_CATEGORY_NAME\", categoryName }\r\n    }\r\n}"],"sourceRoot":""}
{"version":3,"sources":["actions/productActions.js","actions/categoriesActions.js","globalComponents/Suggestions.jsx","globalComponents/SearchInput.jsx","components/Header.jsx","components/Navigation.jsx","components/ProductCategories.jsx","components/CategoryTitle.jsx","components/ProductList.jsx","components/BackToTopButton.jsx","requests/isAuthenticated.js","components/Login.jsx","adminComponents/ResourceTable.jsx","adminComponents/Categories.jsx","adminComponents/Clients.jsx","globalComponents/CustomSelect.jsx","adminComponents/Products.jsx","adminComponents/Sales.jsx","adminComponents/Suppliers.jsx","adminComponents/Supplyings.jsx","adminComponents/Users.jsx","adminComponents/Navigation.jsx","adminComponents/SalesControl.jsx","adminComponents/Inventory.jsx","adminComponents/Reports.jsx","components/PrivateRoute.jsx","adminComponents/Dashboard.jsx","reducers/productReducer.js","reducers/categoriesReducer.js","reducers/index.js","store/configureStore.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","loadProducts","paginatedProducts","type","setLoading","loading","loadCategories","categories","setActiveCategoryId","categoryId","setActiveCategoryName","categoryName","Suggestions","this","props","noResults","className","suggestions","map","suggestion","onlyName","onClick","clickHandler","key","id","productid","style","maxWidth","src","imagePath","alt","name","minWidth","defaultValue","value","price","Component","SearchInput","state","showSuggestions","searchHandler","debounce","headerContainer","React","createRef","onBlurHandler","bind","event","target","length","fetch","then","result","json","data","setState","parentClassName","onChange","persist","placeholder","ref","suggestionBox","onOutsideClick","ProductCategories","fetchProducts","categoryHandler","dispatch","categoriesActions","document","querySelector","getAttribute","innerText","preventDefault","includes","parentElement","classList","remove","add","page","limit","productActions","category","index","categoryid","connect","ownProps","activeCategory","CategoryTitle","activeCategoryName","ProductList","observer","IntersectionObserver","loadMoreProductsHandler","elementToObserve","current","observe","actions","products","concat","entries","isIntersecting","next","product","push","speed","viewBox","backgroundColor","foregroundColor","x","y","rx","ry","width","height","unshift","previous","a","token","localStorage","getItem","res","auth","isAuthenticated","Login","onSubmitHandler","inputHandler","email","password","logginError","authenticated","history","method","headers","body","JSON","stringify","err","setItem","onSubmit","action","$","require","jsZip","window","JSZip","ResourceTable","recordsTable","modal","selectedRowData","sourceURL","newSourceURL","DataTable","ajax","url","load","$recordsTable","_this","asyncTable","initComplete","api","columns","every","column","dataSrc","header","append","on","splittedDataSrc","split","parameter","forEach","charAt","toUpperCase","slice","trim","footerCallback","row","totalDollars","reduce","b","pageTotalDollars","footer","html","Intl","NumberFormat","currency","format","totalBs","pageTotalBs","dom","select","buttons","text","extend","messageTop","exportOptions","modifier","attr","setModalAction","e","datatable","node","config","selected","setSelectedRowData","console","log","status","reload","error","catch","confirm","discountId","discount","results","count","productId","transactions","grossTotalBs","grossTotalDollars","dolarReference","netIncomeDollars","profitPercent","netIncomeBs","d","start","xhr","code","paging","pageLength","searchDelay","ordering","val","tr","closest","child","isShown","hide","removeClass","childFormat","show","addClass","addEventListener","children","focus","tabIndex","role","aria-labelledby","aria-hidden","modalStructure","Categories","submitSuccess","submitError","modalAction","submitHandler","editCategoryHandler","draw","title","render","meta","moment","utc","createdAt","updatedAt","data-dismiss","aria-label","htmlFor","required","Clients","autoFocus","CustomSelect","options","inputValue","callback","item","label","loadOptions","defaultOptions","inputId","isMulti","isClearable","innerRef","changeHandler","Products","selectedCategories","productImageFile","success","discountPercent","discountStartDate","discountEndDate","discountSubmitHandler","optionChangeHandler","CustomSelectRef","productForm","closeButton","selectedOptions","actionType","files","categoriesID","alert","formData","FormData","reset","click","response","percent","startDate","endDate","toString","Math","ceil","roundToNiceNumber","disc","step","min","Sales","childRowInfo","saleProducts","saleProduct","quantity","Suppliers","rif","inputChangeHandler","Supplyings","supplier","supplierChangeHandler","productChangeHandler","supplierSelect","productSelect","supplyingForm","selectedOption","supplierId","Users","permissions","form","Navigation","logout","removeItem","activeNavLink","href","data-toggle","data-target","aria-controls","aria-expanded","to","SalesControl","selectedProduct","addedProducts","subtotalDollars","subtotalBs","stockError","productsHandler","onChangeHandler","sendSaleForm","quantityInput","ctrlKey","stock","productFormatted","priceBs","totalFormattedDollars","totalFormattedBs","productExistsInTable","findIndex","Object","assign","parseFloat","newProducts","totalToSubtractDollars","totalToSubtractBs","currentTarget","setTimeout","hidden","scope","Inventory","Reports","resource","parameters","reportForm","resourceTable","dateRangeFromValue","dateRangeToValue","greaterThanDate","lowerThanDate","equalDate","previousParameters","find","Date","subtract","prop","changeSourceURL","salesColumns","supplyingsColumns","defaultChecked","PrivateRoute","component","rest","pathname","from","location","Dashboard","formattedDolareReference","fetchDolarReference","path","initialState","activeCategoryId","rootReducer","combineReducers","reducers","store","createStore","App","exact","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","StrictMode","getElementById","URL","process","origin","contentType","get","indexOf","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.37f0fc2f.chunk.js","sourcesContent":["module.exports = {\r\n    loadProducts: function (paginatedProducts) {\r\n        return { type: \"LOAD_PRODUCTS\", paginatedProducts }\r\n    },\r\n    setLoading: function (loading) {\r\n        return { type: \"LOADING\", loading }\r\n    },\r\n}","module.exports = {\r\n    loadCategories: function (categories) {\r\n        return { type: \"LOAD_CATEGORIES\", categories }\r\n    },\r\n    setActiveCategoryId: function (categoryId) {\r\n        return { type: \"SET_ACTIVE_CATEGORY_ID\", categoryId }\r\n    },\r\n    setActiveCategoryName: function (categoryName) {\r\n        return { type: \"SET_ACTIVE_CATEGORY_NAME\", categoryName }\r\n    }\r\n}","import React, { Component } from \"react\";\r\n\r\nclass Suggestions extends Component {\r\n\r\n    render() {\r\n        if (this.props.noResults) {\r\n            return (\r\n                <ul className=\"list-group position-absolute w-100\" >\r\n                    <li className=\"list-group-item text-justify\">No se encontraron resultados</li>\r\n                </ul>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <ul className=\"list-group position-absolute w-100 suggestionsBox\" >\r\n                    {this.props.suggestions.map(suggestion => {\r\n                        if (this.props.onlyName) {\r\n                            return <div onClick={this.props.clickHandler} key={suggestion.id} productid={suggestion.id} className=\"text-justify\">\r\n                                <li className=\"list-group-item\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-1\">\r\n                                            <img style={{ maxWidth: \"35px\" }} src={suggestion.imagePath} alt=\"IMG\" />\r\n                                        </div>\r\n                                        <div className=\"col-6 float-left\">\r\n                                            <h5 className=\"font-weight-bold\" id=\"productName\">{suggestion.name}</h5>\r\n                                        </div>\r\n                                    </div>\r\n                                </li>\r\n                            </div>\r\n                        }\r\n                        else {\r\n                            return <li onClick={this.props.clickHandler} key={suggestion.id} className=\"list-group-item text-justify\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12 col-sm-6 col-md-12 col-lg-12 col-xl-6\">\r\n                                        <img className=\"\" style={{ maxWidth: \"35px\" }} src={suggestion.imagePath} alt=\"IMG\" />\r\n                                        <span id=\"productName font-weight-bold\">{suggestion.name}</span>\r\n                                    </div>\r\n                                    <div className=\"col-6 col-sm-4 col-md-6 col-lg-6 col-xl-4\">\r\n                                        <div className=\"input-group \">\r\n                                            <input className=\"form-control text-center\" style={{ minWidth: \"45px\", maxWidth: \"70px\" }} type=\"number\" defaultValue=\"1\" name=\"numberOfItems\" id=\"numberOfItems\" />\r\n                                            <input className=\"bg-dark text-light\" type=\"button\" value=\"Comprar\" />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-6 col-sm-2 col-md-6 col-lg-6 col-xl-2 \">\r\n                                        <span className=\"text-danger\">{`${suggestion.price} Bs.`}</span>\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n                        }\r\n                    })}\r\n                </ul>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Suggestions","import React, { Component } from \"react\";\r\nimport OutsideClickHandler from 'react-outside-click-handler';\r\nimport Suggestions from \"./Suggestions\";\r\nimport debounce from \"lodash.debounce\";\r\n\r\nclass SearchInput extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {\r\n            showSuggestions: false,\r\n            suggestions: [],\r\n            noResults: false\r\n        };\r\n\r\n        this.searchHandler = debounce(this.searchHandler, 500);\r\n        this.headerContainer = React.createRef();\r\n        this.onBlurHandler = this.onBlurHandler.bind(this);\r\n    }\r\n\r\n    searchHandler(event) {\r\n        if (event.target.value.length > 0) {\r\n            fetch(`/api/products?name=${event.target.value}&page=1&limit=10`)\r\n                .then(result => result.json())\r\n                .then(result => {\r\n                    if (result.data.length > 0) {\r\n                        this.setState({\r\n                            showSuggestions: true,\r\n                            suggestions: result.data,\r\n                            noResults: false\r\n                        });\r\n                    }\r\n                    else {\r\n                        this.setState({\r\n                            showSuggestions: true,\r\n                            noResults: true\r\n                        });\r\n                    }\r\n\r\n                });\r\n        }\r\n        else {\r\n            this.setState({\r\n                showSuggestions: false,\r\n                suggestions: []\r\n            })\r\n        }\r\n    }\r\n    onBlurHandler() {\r\n        this.setState({\r\n            showSuggestions: false\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={this.props.parentClassName}>\r\n                <input onChange={event => {\r\n                    event.persist();\r\n                    this.searchHandler(event);\r\n                }} className={this.props.className} type=\"text\" placeholder=\"Buscar Producto\" id=\"searchInput\" />\r\n                <div ref={this.suggestionBox} className=\"\">\r\n                    {this.state.showSuggestions &&\r\n                        <OutsideClickHandler\r\n                            onOutsideClick={this.onBlurHandler}><Suggestions suggestions={this.state.suggestions} noResults={this.state.noResults} clickHandler={this.props.clickHandler} onlyName={this.props.onlyName}></Suggestions>\r\n                        </OutsideClickHandler>}\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchInput;","import React, { Component } from \"react\";\r\nimport SearchInput from \"../globalComponents/SearchInput\";\r\n\r\nclass Header extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.headerContainer = React.createRef();\r\n        this.scrollHandler = this.scrollHandler.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener(\"scroll\", this.scrollHandler);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"scroll\", this.scrollHandler);\r\n    }\r\n\r\n    scrollHandler() {\r\n        if (window.scrollY > 100) {\r\n            this.headerContainer.current.parentElement.style.backgroundColor = \"#3c4055\";\r\n            this.headerContainer.current.parentElement.style.outlineStyle = \"solid\";\r\n            this.headerContainer.current.parentElement.style.outlineWidth = \"2px\";\r\n            //this.headerContainer.current.querySelector(\"#brand-title\").classList.replace(\"text-danger\", \"text-light\")\r\n        }\r\n        else {\r\n            this.headerContainer.current.parentElement.style.backgroundColor = \"white\";\r\n            this.headerContainer.current.parentElement.style.outlineStyle = \"none\";\r\n            //this.headerContainer.current.querySelector(\"#brand-title\").classList.replace(\"text-light\", \"text-danger\")\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div ref={this.headerContainer} className=\"row\">\r\n                <div className=\"col-12 col-lg-5 brand-image-container\">\r\n                    <div className=\"brand-image h-100\" />\r\n                </div>\r\n                <SearchInput parentClassName={\"col-10 col-lg-4 my-auto\"} className={\"form-control\"} />\r\n                <div className=\"col-1 d-flex\">\r\n                    <img className=\"align-items-middle mx-auto\" src=\"/icons/shopping-cart.svg\" alt=\"Shopping Cart\" />\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component } from \"react\";\r\n\r\nclass Navigation extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row mt-3 mt-lg-0\">\r\n                <div className=\"col-12\">\r\n                    <nav className=\"navbar navbar-expand-md navbar-dark bg-dark pl-0 pr-0\">\r\n                        <button className=\"navbar-toggler col-sm-12\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                            <span className=\"navbar-toggler-icon\"></span>\r\n                        </button>\r\n                        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                            <ul className=\"navbar-nav mr-auto container\">\r\n                                <li className=\"nav-item\">\r\n                                    <a className=\"nav-link text-light font-weight-bold\" href=\"#\">HOME</a>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <a className=\"nav-link text-light font-weight-bold\" href=\"#\">PRODUCTOS</a>\r\n                                </li>\r\n\r\n                                <li className=\"nav-item\">\r\n                                    <a className=\"nav-link text-light font-weight-bold\" href=\"#\">SERVICIOS</a>\r\n                                </li>\r\n\r\n                                <li className=\"nav-item\">\r\n                                    <a className=\"nav-link text-light font-weight-bold\" href=\"#\">DESCUENTOS</a>\r\n                                </li>\r\n\r\n                                <li className=\"nav-item\">\r\n                                    <a className=\"nav-link text-light font-weight-bold\" href=\"#\">PROMOCIONES</a>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navigation","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as productActions from \"../actions/productActions\";\r\nimport * as categoriesActions from \"../actions/categoriesActions\";\r\n\r\nclass ProductCategories extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.fetchProducts = this.fetchProducts.bind(this);\r\n        this.categoryHandler = this.categoryHandler.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        fetch(\"/api/categories\")\r\n            .then(categories => categories.json())\r\n            .then(categories => {\r\n                if (categories.data.length > 0) {\r\n                    this.props.dispatch(categoriesActions.loadCategories(categories.data))\r\n                    this.props.dispatch(categoriesActions.setActiveCategoryId(document.querySelector(\".categoryItem, active\").getAttribute(\"categoryId\")))\r\n                    this.props.dispatch(categoriesActions.setActiveCategoryName(document.querySelector(\".categoryItem, active\").innerText));\r\n                }\r\n            });\r\n\r\n    }\r\n\r\n    categoryHandler(event) {\r\n        event.preventDefault();\r\n        if (!event.target.className.includes(\"active\")) {\r\n            event.target.parentElement.querySelector(\".active\").classList.remove(\"active\");\r\n            event.target.classList.add(\"active\");\r\n            this.props.dispatch(categoriesActions.setActiveCategoryId(event.target.getAttribute(\"categoryid\")))\r\n            this.props.dispatch(categoriesActions.setActiveCategoryName(event.target.innerText))\r\n            this.fetchProducts(1, 16, event.target.getAttribute(\"categoryid\"))\r\n        }\r\n    }\r\n\r\n    fetchProducts(page, limit, categories) {\r\n        this.props.dispatch(productActions.setLoading(true));\r\n        fetch(`/api/products?page=${page}&limit=${limit}&categories=${categories}`)\r\n            .then(result => result.json())\r\n            .then(paginatedProducts => {\r\n                this.props.dispatch(productActions.loadProducts(paginatedProducts));\r\n                this.props.dispatch(productActions.setLoading(false));\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"col-xs-6 col-sm-12 col-md-12 p-0 mt-0 mt-md-5 productcategoriesContainer\">\r\n                <div className=\"card rounded-0\">\r\n                    <div className=\"card-header\">\r\n                        <h5 className=\"card-title text-danger font-weight-bold\">Categorias</h5>\r\n                    </div>\r\n                    <div className=\"card-body p-0\">\r\n                        <div className=\"list-group\">\r\n                            {\r\n                                this.props.categories ?\r\n                                    this.props.categories.map((category, index) => {\r\n                                        if (index === 0) {\r\n                                            return <li onClick={this.categoryHandler} categoryid={category.id} key={category.id} className=\"categoryItem list-group-item active btn\">{category.name}</li>\r\n                                        }\r\n                                        else {\r\n                                            return <li onClick={this.categoryHandler} categoryid={category.id} key={category.id} className=\"categoryItem list-group-item btn\">{category.name}</li>\r\n                                        }\r\n                                    })\r\n                                    :\r\n                                    <span>No hay categorias</span>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\nfunction mapStateToProps(state, ownProps) {\r\n    return {\r\n        categories: state.categories.data,\r\n        activeCategory: state.categories.activeCategory\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(ProductCategories);","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass CategoryTitle extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <h3 className=\"float-left text-danger mt-2\">{this.props.activeCategory}</h3>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n    return {\r\n        activeCategory: state.categories.activeCategoryName\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(CategoryTitle);","import React, { Component } from \"react\";\r\nimport ContentLoader from 'react-content-loader'\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../actions/productActions\";\r\nimport CategoryTitle from \"../components/CategoryTitle\";\r\n\r\nclass ProductList extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.observer = new IntersectionObserver(this.loadMoreProductsHandler.bind(this));\r\n        this.elementToObserve = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchProducts(1, 16);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.elementToObserve.current) {\r\n            this.observer.observe(this.elementToObserve.current)\r\n        }\r\n    }\r\n\r\n    fetchProducts(page, limit, categories = 1) {\r\n        this.props.dispatch(actions.setLoading(true));\r\n        fetch(`/api/products?page=${page}&limit=${limit}&categories=${categories}`)\r\n            .then(result => result.json())\r\n            .then(paginatedProducts => {\r\n                paginatedProducts.data = this.props.products.concat(paginatedProducts.data);\r\n                this.props.dispatch(actions.loadProducts(paginatedProducts));\r\n                this.props.dispatch(actions.setLoading(false));\r\n            });\r\n    }\r\n\r\n    loadMoreProductsHandler(entries) {\r\n        if (entries[0].isIntersecting) {\r\n            if (this.props.next) {\r\n                this.fetchProducts(this.props.next.page, this.props.next.limit, this.props.activeCategory)\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.props.products.length > 0) {\r\n            let products = this.props.products.map((product, index) => {\r\n                return (\r\n                    <div className=\"col-6 col-sm-6 col-md-4 col-lg-3 p-0 pr-2 pb-2\" key={index}>\r\n                        <div className=\"card\">\r\n                            <img className=\"card-img-top productImage\" src={product.imagePath} alt=\"Imagen del producto\" />\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title font-weight-bold overflow-hidden text-truncate text-dark\">{product.name}</h5>\r\n                                <h5 className=\"text-danger\">Bs. {product.price}</h5>\r\n                            </div>\r\n                            <div className=\"card-footer\">\r\n                                <div className=\"input-group d-flex justify-content-center\">\r\n                                    <input className=\"form-control text-center\" style={{ maxWidth: \"35%\" }} type=\"number\" defaultValue=\"1\" name=\"numberOfItems\" id=\"numberOfItems\" />\r\n                                    <input className=\"bg-dark text-light\" type=\"button\" value=\"Comprar\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            });\r\n\r\n            if (this.props.next) {\r\n                products.push((\r\n                    <div className=\"col-xs-12 col-sm-6 col-md-4 col-lg-3 p-0 pr-2 pb-2\" key=\"contentLoader\" ref={this.elementToObserve}>\r\n                        <ContentLoader\r\n                            speed={1}\r\n                            viewBox=\"0 0 200 400\"\r\n                            backgroundColor=\"#f3f3f3\"\r\n                            foregroundColor=\"#ecebeb\"\r\n                        >\r\n                            <rect x=\"0\" y=\"6\" rx=\"0\" ry=\"0\" width=\"239\" height=\"250\" />\r\n                            <rect x=\"0\" y=\"292\" rx=\"0\" ry=\"0\" width=\"239\" height=\"15\" />\r\n                            <rect x=\"59\" y=\"291\" rx=\"0\" ry=\"0\" width=\"2\" height=\"0\" />\r\n                            <rect x=\"0\" y=\"313\" rx=\"0\" ry=\"0\" width=\"239\" height=\"15\" />\r\n                            <rect x=\"0\" y=\"361\" rx=\"0\" ry=\"0\" width=\"239\" height=\"36\" />\r\n                        </ContentLoader >\r\n                    </div>\r\n                ))\r\n            }\r\n            products.unshift(<div className=\"col-12\">\r\n                <CategoryTitle />\r\n            </div>)\r\n            return products\r\n        }\r\n        else if (this.props.loading) {\r\n            return <p>Loading</p>\r\n        }\r\n        else {\r\n            return <p>No hay productos</p>\r\n        }\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n    return {\r\n        products: state.products.data,\r\n        next: state.products.next,\r\n        previous: state.products.previous,\r\n        loading: state.products.loading,\r\n        activeCategory: state.categories.activeCategory\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ProductList);","import React, { Component } from \"react\";\r\n\r\nclass BackToTopButton extends Component {\r\n    constructor() {\r\n        super()\r\n        this.backToTopButton = React.createRef();\r\n\r\n        this.state = {\r\n            show: false\r\n        }\r\n\r\n        this.scrollHandler = this.scrollHandler.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener(\"scroll\", this.scrollHandler)\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener('scroll', this.scrollHandler);\r\n    }\r\n    scrollHandler() {\r\n        if (window.scrollY > 100) {\r\n            this.setState({\r\n                show: true\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                show: false\r\n            });\r\n        }\r\n    }\r\n\r\n    clickHandler() {\r\n        window.scrollTo(0, 0);\r\n    }\r\n    render() {\r\n        return this.state.show && <button ref={this.backToTopButton} onClick={this.clickHandler} id=\"back-to-top\" className=\"btn btn-secondary btn-lg back-to-top\">Back to Top</button>\r\n    }\r\n}\r\n\r\nexport default BackToTopButton","async function isAuthenticated() {\r\n    let token = localStorage.getItem(\"jwt\");\r\n    if (!token) return false;\r\n    return fetch(`/sessions/isAuthenticated?token=${token}`)\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            return res.auth;\r\n        });\r\n}\r\n\r\nexport default isAuthenticated","import React, { Component } from \"react\";\r\nimport isAuthenticated from \"../requests/isAuthenticated\"\r\nclass Login extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.onSubmitHandler = this.onSubmitHandler.bind(this);\r\n        this.inputHandler = this.inputHandler.bind(this);\r\n\r\n        this.state = {\r\n            email: null,\r\n            password: null,\r\n            logginError: null\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        isAuthenticated().then(authenticated => {\r\n            if (authenticated) {\r\n                this.props.history.push(\"/\")\r\n            }\r\n        })\r\n    }\r\n    onSubmitHandler(event) {\r\n        event.preventDefault();\r\n        this.setState({\r\n            logginError: null\r\n        })\r\n        fetch(\"/sessions\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                email: this.state.email,\r\n                password: this.state.password\r\n            })\r\n        }).then(result => result.json())\r\n            .then(result => {\r\n                if (result.err) {\r\n                    this.setState({\r\n                        logginError: result.err\r\n                    })\r\n                }\r\n                else {\r\n                    localStorage.setItem(\"jwt\", result.token);\r\n                    this.props.history.push(\"/\");\r\n                }\r\n            });\r\n    }\r\n\r\n    inputHandler(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container h-100 col-10 col-md-4\">\r\n                <div className=\"row h-100 justify-content-center align-items-center\">\r\n                    <form onSubmit={this.onSubmitHandler} className=\"col-12\" action=\"/sessions\" method=\"POST\">\r\n                        <div className=\"form-group\">\r\n                            <input onChange={this.inputHandler} type=\"text\" className=\"form-control\" name=\"email\" id=\"email\" placeholder=\"Email\" />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input onChange={this.inputHandler} type=\"password\" className=\"form-control\" name=\"password\" id=\"password\" placeholder=\"Password\" />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <button className=\"btn btn-primary\" type=\"submit\">Enviar</button>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <p className=\"text-danger\">{this.state.logginError}</p>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Login;","import React, { Component } from \"react\";\r\nimport debounce from \"lodash.debounce\";\r\n\r\n\r\nconst $ = require('jquery');\r\nconst DataTable = require('datatables.net');\r\nconst jsZip = require('jszip');\r\nrequire('pdfmake');\r\nrequire('datatables.net-buttons-dt');\r\nrequire('datatables.net-buttons/js/buttons.html5.js');\r\nrequire('datatables.net-buttons/js/buttons.print.js');\r\nrequire('datatables.net-select-dt');\r\nwindow.JSZip = jsZip;\r\n\r\nclass ResourceTable extends Component {\r\n\r\n    constructor(props) {\r\n        super();\r\n\r\n        this.recordsTable = React.createRef();\r\n        this.modal = React.createRef();\r\n\r\n        this.state = {\r\n            selectedRowData: null,\r\n            sourceURL: props.sourceURL\r\n        }\r\n\r\n    }\r\n\r\n    changeSourceURL(newSourceURL) {\r\n        let recordsTable = this.recordsTable.current;\r\n        let $recordsTable = $(recordsTable);\r\n\r\n        $recordsTable.DataTable().ajax.url(newSourceURL).load();\r\n    }\r\n\r\n    componentDidMount() {\r\n        let recordsTable = this.recordsTable.current;\r\n        let $recordsTable = $(recordsTable);\r\n        var _this = this;\r\n        if (this.props.asyncTable) {\r\n            $recordsTable = $recordsTable.DataTable({\r\n                initComplete: function () {\r\n                    this.api().columns().every(function () {\r\n                        var column = this;\r\n                        if (column.dataSrc() == \"createdAt\" || column.dataSrc() == \"updatedAt\") {\r\n                            $(this.header()).append(\"<br><input class='p-0 m-0 h-100' type='date' />\");\r\n                        }\r\n                        else {\r\n                            $(this.header()).append(\"<br><input class='p-0 m-0 h-100' type='text' placeholder='Filtrar'/>\");\r\n                        }\r\n                        $('input', this.header()).on(\"keyup change\", debounce(function () {\r\n                            let splittedDataSrc = column.dataSrc().split(\".\");\r\n                            let parameter = \"\";\r\n                            splittedDataSrc.forEach((split, index) => {\r\n                                if (index == 0) {\r\n                                    parameter = splittedDataSrc[0];\r\n                                }\r\n                                else {\r\n                                    parameter += splittedDataSrc[index].charAt(0).toUpperCase() + splittedDataSrc[index].slice(1);\r\n                                }\r\n                            });\r\n                            $recordsTable.ajax.url(`${_this.state.sourceURL}?${parameter}=${this.value.trim()}`).load();\r\n                        }, 500));\r\n\r\n                    });\r\n                },\r\n                footerCallback: function (row, data) {\r\n                    var api = this.api();\r\n                    api.columns().every(function () {\r\n                        var column = this;\r\n                        if (column.dataSrc() == \"grossTotalDollars\") {\r\n                            let totalDollars = api\r\n                                .column(5)\r\n                                .data()\r\n                                .reduce(function (a, b) {\r\n                                    return a + b\r\n                                }, 0);\r\n                            let pageTotalDollars = api\r\n                                .column(5, { page: 'current' })\r\n                                .data()\r\n                                .reduce(function (a, b) {\r\n                                    return a + b\r\n                                }, 0);\r\n\r\n                            if (totalDollars) {\r\n                                $(column.footer()).html(\r\n                                    `${Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(pageTotalDollars)} <br>\r\n                                            <span class=\"text-danger\">(${Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(totalDollars)} Total)</span>`\r\n                                );\r\n                            }\r\n                            else {\r\n                                $(column.footer()).html(\"\");\r\n                            }\r\n\r\n                        }\r\n                        if (column.dataSrc() == \"grossTotalBs\") {\r\n                            let totalBs = api\r\n                                .column(6)\r\n                                .data()\r\n                                .reduce(function (a, b) {\r\n                                    return a + b\r\n                                }, 0);\r\n\r\n                            let pageTotalBs = api\r\n                                .column(6, { page: 'current' })\r\n                                .data()\r\n                                .reduce(function (a, b) {\r\n                                    return a + b\r\n                                }, 0);\r\n                            if (pageTotalBs) {\r\n                                $(column.footer()).html(\r\n                                    `${Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(pageTotalBs)} <br>\r\n                                        <span class=\"text-danger\">(${Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(totalBs)} Total)</span>`\r\n                                );\r\n                            } else {\r\n                                $(column.footer()).html(\"\");\r\n                            }\r\n                        }\r\n                        if (column.dataSrc() == \"netIncomeDollars\") {\r\n                            let totalDollars = api\r\n                                .column(7)\r\n                                .data()\r\n                                .reduce(function (a, b) {\r\n                                    return a + b\r\n                                }, 0);\r\n\r\n                            let pageTotalDollars = api\r\n                                .column(7, { page: 'current' })\r\n                                .data()\r\n                                .reduce(function (a, b) {\r\n                                    return a + b\r\n                                }, 0);\r\n                            if (pageTotalDollars) {\r\n                                $(column.footer()).html(\r\n                                    `${Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(pageTotalDollars)} <br>\r\n                                        <span class=\"text-danger\">(${Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(totalDollars)} Total)</span>`\r\n                                );\r\n                            } else {\r\n                                $(column.footer()).html(\"\");\r\n                            }\r\n                        }\r\n                        if (column.dataSrc() == \"netIncomeBs\") {\r\n                            let totalBs = api\r\n                                .column(8)\r\n                                .data()\r\n                                .reduce(function (a, b) {\r\n                                    return a + b\r\n                                }, 0);\r\n\r\n                            let pageTotalBs = api\r\n                                .column(8, { page: 'current' })\r\n                                .data()\r\n                                .reduce(function (a, b) {\r\n                                    return a + b\r\n                                }, 0);\r\n                            if (pageTotalBs) {\r\n                                $(column.footer()).html(\r\n                                    `${Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(pageTotalBs)} <br>\r\n                                        <span class=\"text-danger\">(${Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(totalBs)} Total)</span>`\r\n                                );\r\n                            } else {\r\n                                $(column.footer()).html(\"\");\r\n                            }\r\n                        }\r\n                    })\r\n                },\r\n                dom: 'Brtip',\r\n                select: \"single\",\r\n                buttons: [{\r\n                    text: \"Imprimir\",\r\n                    name: \"imprimir\",\r\n                    className: \"btn btn-secondary float-right\",\r\n                    extend: \"print\",\r\n                    messageTop: \"Reporte\",\r\n                    footer: true,\r\n                    exportOptions: {\r\n                        modifier: {\r\n                            page: 'all'\r\n                        }\r\n                    }\r\n                }].concat(this.props.actions.map(action => {\r\n                    if (action == \"add\") {\r\n                        return {\r\n                            text: 'Add',\r\n                            name: 'add',\r\n                            className: \"btn btn-success\",\r\n                            attr: {\r\n                                \"data-toggle\": \"modal\",\r\n                                \"data-target\": \"#exampleModal\"\r\n                            },\r\n                            action: function () {\r\n                                _this.props.setModalAction(\"add\")\r\n                            }\r\n                        }\r\n                    }\r\n                    if (action == \"edit\") {\r\n                        return {\r\n                            text: 'Edit',\r\n                            name: 'edit',\r\n                            className: \"btn btn-secondary\",\r\n                            extend: \"selected\",\r\n                            attr: {\r\n                                \"data-toggle\": \"modal\",\r\n                                \"data-target\": \"#exampleModal\"\r\n                            },\r\n                            action: (e, datatable, node, config) => {\r\n                                var selectedRowData = datatable.row({ selected: true }).data();\r\n                                _this.props.setSelectedRowData(selectedRowData);\r\n                                _this.props.setModalAction(\"edit\");\r\n                            }\r\n                        };\r\n                    }\r\n                    if (action == \"delete\") {\r\n                        return {\r\n                            text: 'Delete',\r\n                            name: 'delete',\r\n                            className: \"btn btn-danger\",\r\n                            extend: \"selected\",\r\n                            action: function (e, datatable, node, config) {\r\n                                var selectedRowData = datatable.row({ selected: true }).data();\r\n                                fetch(`${_this.props.sourceURL}/${selectedRowData.id}`, {\r\n                                    method: \"DELETE\",\r\n                                    headers: {\r\n                                        \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n                                    }\r\n                                })\r\n                                    .then(res => {\r\n                                        console.log(res);\r\n                                        if (res.status == 204) {\r\n                                            datatable.ajax.reload();\r\n                                        }\r\n                                        else {\r\n                                            res.json().then(error => {\r\n                                                _this.setState({\r\n                                                    error\r\n                                                })\r\n                                            })\r\n                                        }\r\n                                    })\r\n                                    .catch(error => {\r\n                                        _this.setState({\r\n                                            error\r\n                                        })\r\n                                    })\r\n                            }\r\n                        }\r\n                    }\r\n                    if (action == \"date-range\") {\r\n                        return {\r\n                            text: 'Reload',\r\n                            name: 'reload',\r\n                            className: \"btn btn-primary\",\r\n                            action: function (e, datatable, node, config) {\r\n                                datatable.ajax.url(_this.state.sourceURL).load();\r\n                            }\r\n                        }\r\n                    }\r\n                    if (action == \"discount\") {\r\n                        return [\r\n                            {\r\n                                text: 'Apply Discount',\r\n                                name: 'discountButton',\r\n                                className: \"btn btn-primary\",\r\n                                attr: {\r\n                                    \"data-toggle\": \"modal\",\r\n                                    \"data-target\": \"#discountModal\"\r\n                                },\r\n                                extend: \"selected\",\r\n                                action: function (e, datatable, node, config) {\r\n                                    var selectedRowData = datatable.row({ selected: true }).data();\r\n                                    _this.props.setSelectedRowData(selectedRowData);\r\n                                    _this.props.setModalAction(\"applyDiscount\")\r\n\r\n                                }\r\n\r\n                            },\r\n                            {\r\n                                text: 'Cancel Discount',\r\n                                name: 'cancelDiscountButton',\r\n                                className: \"btn btn-danger\",\r\n                                extend: \"selected\",\r\n                                action: function (e, datatable, node, config) {\r\n                                    let response = window.confirm(\"¿Seguro que desea eliminar el descuento?\");\r\n                                    if (response == true) {\r\n                                        let selectedRowData = datatable.row({ selected: true }).data();\r\n                                        let discountId = selectedRowData.discount[0].id;\r\n                                        fetch(`/api/discounts/${discountId}`, {\r\n                                            headers: {\r\n                                                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n                                            },\r\n                                            method: \"DELETE\"\r\n                                        })\r\n                                            .then(res => {\r\n                                                if (res.status == 204) {\r\n                                                    datatable.ajax.reload();\r\n                                                }\r\n                                            })\r\n                                    }\r\n                                    else {\r\n\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                        ]\r\n                    }\r\n\r\n                })),\r\n                //serverSide: true,\r\n                ajax: {\r\n                    url: this.state.sourceURL,\r\n                    dataSrc: function (results) {\r\n                        if (typeof results.count == \"object\") {\r\n                            results.data.forEach((row, index) => {\r\n                                if (row.productId == results.count[index].id) {\r\n                                    row.count = results.count[index].count\r\n                                }\r\n                            })\r\n                        }\r\n\r\n                        if (_this.props.sourceURL.includes(\"/api/sales\") && _this.props.sourceURL.includes(\"group=true\")) {\r\n                            results.data.forEach((row, index) => {\r\n                                row.product = row.product[0];\r\n                                row.transactions = results.count[index].count;\r\n                                row.grossTotalBs = row.grossTotalDollars * row.dolarReference;\r\n\r\n                                row.netIncomeDollars = row.grossTotalDollars * (row.product.profitPercent / 100);\r\n                                row.netIncomeBs = row.netIncomeDollars * row.dolarReference;\r\n                            })\r\n                        }\r\n                        else if (_this.props.sourceURL.includes(\"/api/supplyings\")) {\r\n                            results.data.forEach(row => {\r\n                                row.transactions = row.count;\r\n                                row.grossTotalBs = row.grossTotalDollars * row.dolarReference;\r\n                            })\r\n                        }\r\n                        return results.data;\r\n                    },\r\n                    headers: { 'Authorization': `Bearer ${localStorage.getItem(\"jwt\")}` },\r\n                    data: function (d) {\r\n                        d.page = d.start / d.length + 1;\r\n                        d.limit = d.length;\r\n                    },\r\n                    error: function (xhr, error, code) {\r\n                        //alert(code)\r\n                    }\r\n                },\r\n                paging: true,\r\n                pageLength: (_this.props.sourceURL.includes(\"sales\") || _this.props.sourceURL.includes(\"supplyings\")) ? 1000000 : 10,\r\n                searchDelay: 500,\r\n                columns: this.props.columns,\r\n                ordering: false\r\n            });\r\n\r\n            if (this.props.actions.includes(\"date-range\")) {\r\n                $(\".dt-buttons\").append(`<div class=\"d-flex justify-content-end\">\r\n                    <label class=\"mr-2\" for=\"dateFrom\">From:</label>\r\n                    <input type=\"date\" id=\"dateFrom\" name=\"dateFrom\">\r\n                    <label class=\"mr-2 ml-2\" for=\"dateTo\">To:</label>\r\n                    <input type=\"date\" id=\"dateTo\" name=\"dateTo\">\r\n                    </div>`)\r\n\r\n                $(\".dt-buttons input[type=date]\").on(\"change\", function () {\r\n                    $recordsTable.ajax.url(`${_this.state.sourceURL}?from=${$(\"#dateFrom\").val()}&to=${$(\"#dateTo\").val()}`).load();\r\n                })\r\n            }\r\n\r\n            $('#resourceTable tbody').on('click', 'td.details-control', function () {\r\n                var tr = $(this).closest('tr');\r\n                var row = $recordsTable.row(tr);\r\n\r\n                if (row.child.isShown()) {\r\n                    // This row is already open - close it\r\n                    row.child.hide();\r\n                    tr.removeClass('shown');\r\n                }\r\n                else {\r\n                    // Open this row\r\n                    console.log(_this.props.childFormat(row.data()));\r\n                    row.child(_this.props.childFormat(row.data())).show();\r\n                    tr.addClass('shown');\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            $recordsTable = $recordsTable.DataTable({\r\n                dom: \"\",\r\n                data: this.props.data,\r\n                columns: this.props.columns\r\n            });\r\n        }\r\n\r\n\r\n\r\n        this.modal.current.addEventListener(\"focus\", () => {\r\n            this.modal.current.querySelector(\".form-group\").children[0].focus();\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"bg-light table-responsive\">\r\n                <table id=\"resourceTable\" className=\"table table-bordered\" ref={this.recordsTable} >\r\n                    <thead></thead>\r\n                    <tbody></tbody>\r\n                    <tfoot>\r\n                        <tr>\r\n                            {this.props.columns.map((column, index) => {\r\n                                return <td key={index}></td>\r\n                            })}\r\n                        </tr>\r\n                    </tfoot>\r\n                </table>\r\n                {this.state.error && <span className=\"text-danger\">{this.state.error}</span>}\r\n                <div ref={this.modal} className=\"modal\" id=\"exampleModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n                        <div className=\"modal-content\">\r\n                            {this.props.modalStructure}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ResourceTable;","import React, { Component } from \"react\";\r\nimport ResourceTable from \"./ResourceTable\";\r\n\r\nimport moment from \"moment\";\r\n\r\nconst $ = require(\"jquery\");\r\nconst DataTable = require('datatables.net');\r\n\r\nclass Categories extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            submitSuccess: null,\r\n            submitError: null,\r\n            selectedRowData: null,\r\n            modalAction: null\r\n        }\r\n        this.submitHandler = this.submitHandler.bind(this);\r\n        this.setSelectedRowData = this.setSelectedRowData.bind(this);\r\n        this.editCategoryHandler = this.editCategoryHandler.bind(this);\r\n        this.setModalAction = this.setModalAction.bind(this);\r\n\r\n        this.categoryName = React.createRef();\r\n    }\r\n\r\n    submitHandler(event) {\r\n        event.preventDefault();\r\n        fetch((this.state.modalAction == \"add\") ? \"/api/categories\" : `/api/categories/${this.state.selectedRowData.id}`, {\r\n            method: (this.state.modalAction == \"add\") ? \"POST\" : \"PUT\",\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({ name: this.categoryName.current.value })\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if (res.error || res.err) {\r\n                    this.setState({\r\n                        submitError: res.error || res.err\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        submitSuccess: \"Se ha registrado con éxito\"\r\n                    })\r\n                    $(\"#resourceTable\").DataTable().draw();\r\n                }\r\n            })\r\n\r\n\r\n    }\r\n\r\n    editCategoryHandler() {\r\n        console.log(\"hola\");\r\n    }\r\n\r\n    setSelectedRowData(selectedRowData) {\r\n        this.setState({\r\n            selectedRowData\r\n        }, function () {\r\n            $(\"#name\").val(this.state.selectedRowData.name);\r\n        })\r\n    }\r\n\r\n    setModalAction(modalAction) {\r\n        this.setState({\r\n            modalAction\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1 className=\"text-danger float-left\">Categorías</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-3\">\r\n                    <div className=\"col-md-12\">\r\n                        <ResourceTable asyncTable={true} setModalAction={this.setModalAction} setSelectedRowData={this.setSelectedRowData} sourceURL={\"/api/categories\"} columns={[\r\n                            { title: \"ID\", data: \"id\" },\r\n                            { title: \"Nombre\", data: \"name\" },\r\n                            {\r\n                                render: function (data, type, row, meta) {\r\n                                    return moment.utc(row.createdAt).format(\"DD/MM/YYYY\");\r\n                                }, title: \"Fecha creación\", data: \"createdAt\", type: \"date\"\r\n                            },\r\n                            {\r\n                                render: function (data, type, row, meta) {\r\n                                    return moment.utc(row.updatedAt).format(\"DD/MM/YYYY\");\r\n                                }, title: \"Fecha actualización\", data: \"updatedAt\", type: \"date\"\r\n                            },\r\n                        ]} actions={[\"add\", \"edit\"]} modalStructure={\r\n                            <form onSubmit={this.submitHandler} className=\"float-left\">\r\n                                <div className=\"modal-header\">\r\n                                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">New Category</h5>\r\n                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                        <span aria-hidden=\"true\">&times;</span>\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"name\">Category Name: </label>\r\n                                        <input ref={this.categoryName} className=\"form-control\" type=\"text\" name=\"name\" id=\"name\" required />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Cerrar</button>\r\n                                    <button type=\"submit\" className=\"btn btn-primary\">Enviar</button>\r\n                                </div>\r\n                                {this.state.submitError && <span className=\"text-danger\">{this.state.submitError}</span>}\r\n                                {this.state.submitSuccess && <span className=\"text-success\">{this.state.submitSuccess}</span>}\r\n                            </form>\r\n                        } />\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\nexport default Categories;","import React, { Component } from \"react\";\r\nimport ResourceTable from \"./ResourceTable\";\r\nimport $ from \"jquery\";\r\nconst moment = require(\"moment\");\r\n\r\nclass Clients extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.submitHandler = this.submitHandler.bind(this);\r\n        this.setSelectedRowData = this.setSelectedRowData.bind(this);\r\n        this.setModalAction = this.setModalAction.bind(this);\r\n    }\r\n    setSelectedRowData(selectedRowData) {\r\n        this.setState({\r\n            selectedRowData\r\n        }, function () {\r\n            $(\"#name\").val(this.state.selectedRowData.name);\r\n        })\r\n    }\r\n\r\n    setModalAction(modalAction) {\r\n        this.setState({\r\n            modalAction\r\n        })\r\n    }\r\n\r\n    submitHandler(event) {\r\n        event.preventDefault();\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1 className=\"text-danger float-left\">Clientes</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-3\">\r\n                    <div className=\"col-md-12\">\r\n                        <ResourceTable asyncTable={true} setSelectedRowData={this.setSelectedRowData} setModalAction={this.setModalAction} sourceURL={\"/api/clients\"} columns={[\r\n                            { title: \"ID\", data: \"id\" },\r\n                            { title: \"Nombre\", data: \"name\" },\r\n                            { title: \"Cédula\", data: \"cedula\" },\r\n                            {\r\n                                render: function (data, type, row, meta) {\r\n                                    return moment.utc(row.createdAt).format(\"DD/MM/YYYY\");\r\n                                }, title: \"Fecha creación\", data: \"createdAt\", type: \"date\"\r\n                            },\r\n                            {\r\n                                render: function (data, type, row, meta) {\r\n                                    return moment.utc(row.updatedAt).format(\"DD/MM/YYYY\");\r\n                                }, title: \"Fecha actualización\", data: \"updatedAt\", type: \"date\"\r\n                            },\r\n                        ]} actions={[\"add\", \"edit\", \"delete\"]} modalStructure={\r\n                            <form onSubmit={this.submitHandler} className=\"float-left\">\r\n                                <div className=\"modal-header\">\r\n                                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">New Client</h5>\r\n                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                        <span aria-hidden=\"true\">&times;</span>\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"name\">Client Name: </label>\r\n                                        <input className=\"form-control\" type=\"text\" name=\"name\" id=\"name\" autoFocus />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"cedula\">Cédula: </label>\r\n                                        <input className=\"form-control\" type=\"text\" name=\"cedula\" id=\"cedula\" autoFocus />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Cerrar</button>\r\n                                    <button type=\"submit\" className=\"btn btn-primary\">Enviar</button>\r\n                                </div>\r\n                            </form>\r\n                        } />\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Clients;","import React, { Component } from \"react\";\r\nimport Async from 'react-select/async';\r\n\r\nclass CustomSelect extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            options: []\r\n        }\r\n\r\n        this.searchHandler = this.searchHandler.bind(this);\r\n    }\r\n\r\n    searchHandler(inputValue, callback) {\r\n        fetch(this.props.sourceURL || `/api/products?name=${inputValue}`)\r\n            .then(result => result.json())\r\n            .then(results => {\r\n                if (results.data.length > 0) {\r\n                    results.data.forEach(item => {\r\n                        item.value = item.name;\r\n                        if (item.imagePath) {\r\n                            item.label = [<img className=\"float-left\" style={{ maxWidth: \"20px\" }} src={item.imagePath} alt=\"IMG\" />, item.name];\r\n                        }\r\n                        else {\r\n                            item.label = item.name\r\n                        }\r\n                    });\r\n                    callback(results.data)\r\n                }\r\n            });\r\n    }\r\n    render() {\r\n        return (\r\n            <Async\r\n                loadOptions={this.searchHandler}\r\n                defaultOptions\r\n                placeholder=\"Buscar\"\r\n                autoFocus\r\n                inputId=\"selectedProduct\"\r\n                isMulti={this.props.isMulti}\r\n                isClearable\r\n                ref={this.props.innerRef}\r\n                name={this.props.name}\r\n                onChange={this.props.changeHandler}\r\n                value={this.props.value}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default CustomSelect;","import React, { Component } from \"react\";\r\nimport ResourceTable from \"./ResourceTable\";\r\nimport CustomSelect from \"../globalComponents/CustomSelect\";\r\n\r\n\r\nimport moment from \"moment\";\r\nimport $ from \"jquery\";\r\nconst DataTable = require('datatables.net');\r\n\r\nclass Products extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {\r\n            selectedCategories: null,\r\n            name: \"\",\r\n            productImageFile: \"\",\r\n            profitPercent: \"\",\r\n            success: \"\",\r\n            error: \"\",\r\n            modalAction: null,\r\n            discountPercent: null,\r\n            discountStartDate: null,\r\n            discountEndDate: null,\r\n            selectedRowData: null\r\n        }\r\n\r\n        this.submitHandler = this.submitHandler.bind(this);\r\n        this.discountSubmitHandler = this.discountSubmitHandler.bind(this);\r\n        this.optionChangeHandler = this.optionChangeHandler.bind(this);\r\n        this.changeHandler = this.changeHandler.bind(this);\r\n        this.setModalAction = this.setModalAction.bind(this);\r\n        this.setSelectedRowData = this.setSelectedRowData.bind(this);\r\n\r\n        this.CustomSelectRef = React.createRef();\r\n        this.productForm = React.createRef();\r\n        this.closeButton = React.createRef();\r\n    }\r\n\r\n    setModalAction(modalAction) {\r\n        this.setState({\r\n            modalAction\r\n        })\r\n    }\r\n\r\n    setSelectedRowData(selectedRowData) {\r\n        let categories = [];\r\n        selectedRowData.category.forEach(category => {\r\n            categories.push({ id: category.id, label: category.name, value: category.name });\r\n        })\r\n        this.setState({\r\n            selectedRowData,\r\n            selectedCategories: categories,\r\n            name: selectedRowData.name,\r\n            profitPercent: selectedRowData.profitPercent\r\n        }, () => {\r\n            $(\"#name\").val(this.state.selectedRowData.name);\r\n            $(\"#profitPercent\").val(this.state.selectedRowData.profitPercent);\r\n        })\r\n    }\r\n\r\n    optionChangeHandler(selectedOptions, actionType) {\r\n        this.setState({\r\n            selectedCategories: selectedOptions\r\n        });\r\n    }\r\n\r\n    changeHandler(event) {\r\n        this.setState({\r\n            [event.target.name]: (event.target.type == \"file\") ? event.target.files[0] : event.target.value\r\n        });\r\n    }\r\n    submitHandler(event) {\r\n        event.preventDefault();\r\n        var categoriesID = \"\";\r\n        if (this.state.selectedCategories) {\r\n            this.state.selectedCategories.forEach((category, index) => {\r\n                categoriesID += category.id\r\n                if (index != this.state.selectedCategories.length - 1) {\r\n                    categoriesID += \",\"\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            alert(\"Seleccione las categorías\")\r\n        }\r\n\r\n        var formData = new FormData();\r\n\r\n        formData.append(\"productImageFile\", this.state.productImageFile);\r\n        formData.append(\"name\", this.state.name);\r\n        formData.append(\"profitPercent\", this.state.profitPercent);\r\n        formData.append(\"categories\", categoriesID);\r\n\r\n        fetch((this.state.modalAction == \"add\") ? \"/api/products\" : `/api/products/${this.state.selectedRowData.id}`, {\r\n            method: (this.state.modalAction == \"add\") ? \"POST\" : \"PATCH\",\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n                \"Accept\": \"application/json\"\r\n            },\r\n            body: formData\r\n        })\r\n            .then(res => {\r\n                if (res.status == 200) {\r\n                    this.setState({\r\n                        success: \"El producto se ha registrado con exito\"\r\n                    });\r\n                    this.productForm.current.reset();\r\n                    this.closeButton.current.click();\r\n                    $(\"#resourceTable\").DataTable().ajax.reload();\r\n                }\r\n                else if (res.status == 409) {\r\n                    res.json().then(response => {\r\n                        this.setState({\r\n                            error: response.error || response.err\r\n                        })\r\n                    })\r\n\r\n                }\r\n            })\r\n            .catch(error => {\r\n                this.setState({\r\n                    error: error\r\n                })\r\n            })\r\n    }\r\n\r\n    discountSubmitHandler(event) {\r\n        event.preventDefault();\r\n        if (this.state.discountPercent && this.state.discountStartDate && this.state.discountEndDate) {\r\n            fetch(\"/api/discounts\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                    productId: this.state.selectedRowData.id,\r\n                    percent: this.state.discountPercent,\r\n                    startDate: this.state.discountStartDate,\r\n                    endDate: this.state.discountEndDate\r\n                })\r\n            })\r\n                .then(res => {\r\n                    if (res.status == 200) {\r\n                        this.setState({\r\n                            success: \"Se ha registrado con éxito\"\r\n                        })\r\n                    } else {\r\n                        res.json().then(res => {\r\n                            this.setState({\r\n                                error: res.error || res.err\r\n                            })\r\n                        })\r\n                    }\r\n                })\r\n        }\r\n        else {\r\n            alert(\"Rellene todos los campos\")\r\n        }\r\n    }\r\n\r\n    roundToNiceNumber(value) {\r\n        var val = 0;\r\n        if (value.toString().length == 4) {\r\n            val = Math.ceil(value / 100) * 100\r\n        }\r\n        else if (value.toString().length > 4) {\r\n            val = Math.ceil(value / 1000) * 1000\r\n        }\r\n\r\n        return val;\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1 className=\"text-danger float-left\">Productos</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-3\">\r\n                    <div className=\"col-md-12\">\r\n                        <ResourceTable asyncTable={true} setSelectedRowData={this.setSelectedRowData} setModalAction={this.setModalAction} sourceURL={\"/api/products\"} columns={[\r\n                            {\r\n                                render: function (data, type, row, meta) {\r\n                                    if (row.imagePath) {\r\n                                        return `<img src=\"${row.imagePath}\" style=\"max-width:35px;\"/>`\r\n                                    }\r\n                                    else {\r\n                                        return \"\";\r\n                                    }\r\n                                },\r\n                                title: \"Imagen\"\r\n                            },\r\n                            { title: \"ID\", data: \"id\" },\r\n                            { title: \"Nombre\", data: \"name\" },\r\n                            { title: \"Precio $\", data: \"price\" },\r\n                            {\r\n                                render: (data) => {\r\n                                    return Intl.NumberFormat(\"es-Ve\", { style: \"currency\", currency: \"VES\" }).format(this.roundToNiceNumber(data * this.props.dolarReference))\r\n                                }, title: \"Precio Bs\", data: \"price\"\r\n                            },\r\n                            {\r\n                                render: function (data) {\r\n                                    return data + \"%\"\r\n                                }, title: \"Porcentaje de Ganancia\", data: \"profitPercent\"\r\n                            },\r\n                            {\r\n                                render: function (data, type, row, meta) {\r\n                                    let disc = data.map(discount => {\r\n                                        return discount.percent\r\n                                    })\r\n\r\n                                    return (disc.length) ? disc + \"%\" : 0 + \"%\"\r\n                                }, title: \"Descuento\", data: \"discount\"\r\n                            },\r\n                            {\r\n                                title: \"Descuento desde\", data: \"discount[0].startDate\"\r\n                            },\r\n                            {\r\n                                title: \"Descuento hasta\", data: \"discount[0].endDate\"\r\n                            },\r\n\r\n                            {\r\n                                render: function (data, type, row, meta) {\r\n                                    return moment.utc(row.createdAt).format(\"DD/MM/YYYY\");\r\n                                }, title: \"Fecha creación\", data: \"createdAt\", type: \"date\"\r\n                            },\r\n                            {\r\n                                render: function (data, type, row, meta) {\r\n                                    return moment.utc(row.updatedAt).format(\"DD/MM/YYYY\");\r\n                                }, title: \"Fecha actualización\", data: \"updatedAt\", type: \"date\"\r\n                            },\r\n                        ]} actions={[\"add\", \"edit\", \"delete\", \"discount\"]} modalStructure={\r\n                            <form ref={this.productForm} onSubmit={this.submitHandler} className=\"float-left\">\r\n                                <div className=\"modal-header\">\r\n                                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">New Product</h5>\r\n                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                        <span aria-hidden=\"true\">&times;</span>\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"name\">Product Name: </label>\r\n                                        <input onChange={this.changeHandler} className=\"form-control\" type=\"text\" name=\"name\" id=\"name\" required />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"profitPercent\">Profit Percent: </label>\r\n                                        <div className=\"input-group\">\r\n                                            <div className=\"input-group-prepend\">\r\n                                                <div className=\"input-group-text\">%</div>\r\n                                            </div>\r\n                                            <input onChange={this.changeHandler} className=\"form-control\" type=\"number\" step=\"0.1\" name=\"profitPercent\" id=\"profitPercent\" required />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"productImageFile\">Imagen: </label>\r\n                                        <div className=\"custom-file\">\r\n                                            <input onChange={this.changeHandler} type=\"file\" className=\"custom-file-input\" id=\"productImageFile\" name=\"productImageFile\" />\r\n                                            <label className=\"custom-file-label\" htmlFor=\"image\">Choose file</label>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"price\">Categorías: </label>\r\n                                        <CustomSelect sourceURL=\"/api/categories\"\r\n                                            isMulti={true}\r\n                                            innerRef={this.CustomSelectRef}\r\n                                            changeHandler={this.optionChangeHandler}\r\n                                            value={this.state.selectedCategories}\r\n                                            required />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button ref={this.closeButton} type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Cerrar</button>\r\n                                    <button type=\"submit\" className=\"btn btn-primary\">Enviar</button>\r\n                                </div>\r\n                                {this.state.success && <span className=\"text-success\">{this.state.success}</span>}\r\n                                {this.state.error && <span className=\"text-danger\">{this.state.error}</span>}\r\n                            </form>\r\n                        } />\r\n                        <div id=\"discountModal\" className=\"modal\" tabIndex=\"-1\">\r\n                            <div className=\"modal-dialog\">\r\n                                <div className=\"modal-content\">\r\n                                    <div className=\"modal-header\">\r\n                                        <h5 className=\"modal-title\"></h5>\r\n                                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                            <span aria-hidden=\"true\">&times;</span>\r\n                                        </button>\r\n                                    </div>\r\n                                    <form onSubmit={this.discountSubmitHandler}>\r\n                                        <div className=\"modal-body\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"discountPercent\">Discount Percent: </label>\r\n                                                <div className=\"input-group\">\r\n                                                    <input onChange={this.changeHandler} className=\"form-control\" type=\"number\" step=\"0.01\" min=\"0\" name=\"discountPercent\" id=\"discountPercent\" required />\r\n                                                    <div className=\"input-group-append\">\r\n                                                        <div className=\"input-group-text\">%</div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <label htmlFor=\"discountStartDate\">Start Date:</label>\r\n                                                <div className=\"input-group\">\r\n                                                    <input onChange={this.changeHandler} className=\"form-control\" type=\"date\" name=\"discountStartDate\" id=\"discountStartDate\" required />\r\n                                                </div>\r\n                                                <label htmlFor=\"discountEndDate\">End Date:</label>\r\n                                                <div className=\"input-group\">\r\n                                                    <input onChange={this.changeHandler} className=\"form-control\" type=\"date\" name=\"discountEndDate\" id=\"discountEndDate\" required />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"modal-footer\">\r\n                                            <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Cerrar</button>\r\n                                            <button type=\"submit\" className=\"btn btn-primary\">Enviar</button>\r\n                                        </div>\r\n                                        {this.state.success && <span className=\"text-success\">{this.state.success}</span>}\r\n                                        {this.state.error && <span className=\"text-danger\">{this.state.error}</span>}\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Products;","import React, { Component } from \"react\";\r\n\r\nimport moment from \"moment\";\r\nimport ResourceTable from \"./ResourceTable\";\r\nclass Sales extends Component {\r\n    constructor() {\r\n        super()\r\n        this.submitHandler = this.submitHandler.bind(this);\r\n    }\r\n\r\n    submitHandler(event) {\r\n        event.preventDefault()\r\n        console.log(\"hola\");\r\n    }\r\n\r\n    childFormat(d) {\r\n        let childRowInfo = \"\";\r\n        d.saleProducts.forEach(saleProduct => {\r\n            childRowInfo += `\r\n            <div class='form-row align-items-center'>\r\n                    <div class=\"col-1\">\r\n                        <label for=\"productId\">Product ID</label>\r\n                        <input class=\"form-control\" id=\"productId\" value=\"${saleProduct.productId}\" disabled/>\r\n                    </div>\r\n                    <div class=\"col-4\">\r\n                        <label for=\"productName\">Name</label>\r\n                        <input class=\"form-control\" id=\"productName\" value=\"${saleProduct.product[0].name}\" disabled/>\r\n                    </div>\r\n                    <div class=\"col-1\">\r\n                        <label for=\"productPrice\">Price</label>\r\n                        <input class=\"form-control\" id=\"productPrice\" value=\"$${saleProduct.price}\" disabled/>\r\n                    </div>\r\n                    <div class=\"col-1\">\r\n                        <label for=\"discount\">Discount</label>\r\n                        <input class=\"form-control\" id=\"discount\" value=\"${saleProduct.discount}%\" disabled/>\r\n                    </div>\r\n                    <div class=\"col-1\">\r\n                        <label for=\"productQuantity\">Quantity</label>\r\n                        <input class=\"form-control\" id=\"productQuantity\" value=\"${saleProduct.quantity}\" disabled/>\r\n                    </div>\r\n                    <div class=\"col-2\">\r\n                        <label for=\"dolarValue\">Dolar value</label>\r\n                        <input class=\"form-control\" id=\"dolarValue\" value=\"${Intl.NumberFormat(\"es-VE\", { style: \"currency\", currency: \"VES\" }).format(saleProduct.dolarReference)}\" disabled/>\r\n                    </div>\r\n            </div>\r\n            `\r\n        })\r\n        childRowInfo += \"\"\r\n        return childRowInfo\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1 className=\"text-danger float-left\">Ventas</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-3\">\r\n                    <div className=\"col-md-12\">\r\n                        <ResourceTable asyncTable={true} childFormat={this.childFormat} sourceURL={\"/api/sales\"} columns={[\r\n                            { title: \"ID\", data: \"id\" },\r\n                            {\r\n                                \"title\": \"Productos\",\r\n                                \"className\": 'details-control',\r\n                                \"orderable\": false,\r\n                                \"data\": null,\r\n                                \"defaultContent\": '<button class=\"btn btn-success\">Ver Productos</button>'\r\n                            },\r\n                            {\r\n                                render: function (data, type, row, meta) {\r\n                                    return moment.utc(row.createdAt).format(\"DD/MM/YYYY\");\r\n                                }, title: \"Fecha creación\", data: \"sales.createdAt\", type: \"date\"\r\n                            },\r\n                            {\r\n                                render: function (data, type, row, meta) {\r\n                                    return moment.utc(row.updatedAt).format(\"DD/MM/YYYY\");\r\n                                }, title: \"Fecha actualización\", data: \"sales.updatedAt\", type: \"date\"\r\n                            },\r\n                        ]} actions={[\"edit\", \"delete\", \"date-range\"]} />\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Sales;","import React, { Component } from \"react\";\r\nimport moment from \"moment\";\r\nimport ResourceTable from \"./ResourceTable\";\r\n\r\nimport $ from \"jquery\";\r\nimport DataTable from \"datatables.net\";\r\nclass Suppliers extends Component {\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {\r\n            name: null,\r\n            rif: null,\r\n            success: null,\r\n            error: null\r\n        }\r\n        this.submitHandler = this.submitHandler.bind(this);\r\n        this.inputChangeHandler = this.inputChangeHandler.bind(this);\r\n        this.setModalAction = this.setModalAction.bind(this);\r\n\r\n    }\r\n\r\n    setModalAction(modalAction) {\r\n        this.setState({\r\n            modalAction\r\n        })\r\n    }\r\n\r\n    submitHandler(event) {\r\n        event.preventDefault();\r\n        if (this.state.name && this.state.rif) {\r\n            fetch(\"/api/suppliers\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                    name: this.state.name,\r\n                    rif: this.state.rif\r\n                })\r\n            })\r\n                .then(res => {\r\n                    if (res.status == 200) {\r\n                        this.setState({\r\n                            success: \"Se ha registrado de forma exitosa.\"\r\n                        });\r\n                        $(\"#resourceTable\").DataTable().draw();\r\n                    }\r\n                    else {\r\n                        res.text().then(error => {\r\n                            this.setState({\r\n                                error\r\n                            })\r\n                        })\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n    inputChangeHandler(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1 className=\"text-danger float-left\">Proveedores</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-3\">\r\n                    <div className=\"col-md-12\">\r\n                        <ResourceTable asyncTable={true} setModalAction={this.setModalAction} sourceURL={\"/api/suppliers\"} columns={[\r\n                            { title: \"ID\", data: \"id\" },\r\n                            { title: \"Nombre\", data: \"name\" },\r\n                            { title: \"RIF\", data: \"rif\" },\r\n                            {\r\n                                render: function (data, type, row, meta) {\r\n                                    return moment.utc(row.createdAt).format(\"DD/MM/YYYY\");\r\n                                }, title: \"Fecha creación\", data: \"createdAt\", type: \"date\"\r\n                            },\r\n                            {\r\n                                render: function (data, type, row, meta) {\r\n                                    return moment.utc(row.updatedAt).format(\"DD/MM/YYYY\");\r\n                                }, title: \"Fecha actualización\", data: \"updatedAt\", type: \"date\"\r\n                            },\r\n                        ]} actions={[\"add\", \"edit\", \"delete\"]} modalStructure={\r\n                            <form onSubmit={this.submitHandler} className=\"float-left\">\r\n                                <div className=\"modal-header\">\r\n                                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">New Supplier</h5>\r\n                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                        <span aria-hidden=\"true\">&times;</span>\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"name\">Supplier Name: </label>\r\n                                        <input onChange={this.inputChangeHandler} className=\"form-control\" type=\"text\" name=\"name\" id=\"name\" required />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"rif\">RIF: </label>\r\n                                        <input onChange={this.inputChangeHandler} className=\"form-control\" type=\"text\" name=\"rif\" id=\"rif\" required />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Cerrar</button>\r\n                                    <button type=\"submit\" className=\"btn btn-primary\">Enviar</button>\r\n                                </div>\r\n                                {this.state.success && <span className=\"text-success\">{this.state.success}</span>}\r\n                                {this.state.error && <span className=\"text-danger\">{this.state.error}</span>}\r\n                            </form>\r\n                        } />\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Suppliers;","import React, { Component } from \"react\";\r\nimport moment from \"moment\";\r\nimport ResourceTable from \"./ResourceTable\";\r\nimport CustomSelect from \"../globalComponents/CustomSelect\";\r\n\r\nimport $ from \"jquery\";\r\nconst DataTable = require('datatables.net');\r\n\r\nclass Supplyings extends Component {\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {\r\n            supplier: null,\r\n            product: null,\r\n            price: null,\r\n            quantity: null,\r\n            success: null,\r\n            error: null\r\n        }\r\n        this.submitHandler = this.submitHandler.bind(this);\r\n        this.supplierChangeHandler = this.supplierChangeHandler.bind(this);\r\n        this.productChangeHandler = this.productChangeHandler.bind(this);\r\n        this.inputChangeHandler = this.inputChangeHandler.bind(this);\r\n        this.setModalAction = this.setModalAction.bind(this);\r\n\r\n        this.supplierSelect = React.createRef();\r\n        this.productSelect = React.createRef();\r\n        this.supplyingForm = React.createRef();\r\n\r\n    }\r\n\r\n    setModalAction(modalAction) {\r\n        this.setState({\r\n            modalAction\r\n        })\r\n    }\r\n\r\n    supplierChangeHandler(selectedOption) {\r\n        this.setState({\r\n            supplier: selectedOption\r\n        });\r\n    }\r\n\r\n    productChangeHandler(selectedOption) {\r\n        this.setState({\r\n            product: selectedOption\r\n        });\r\n    }\r\n\r\n    inputChangeHandler(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n    submitHandler(event) {\r\n        event.preventDefault();\r\n        if (this.state.supplier && this.state.product && this.state.price && this.state.quantity) {\r\n            fetch(\"/api/supplyings\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                    supplierId: this.state.supplier.id,\r\n                    productId: this.state.product.id,\r\n                    price: this.state.price,\r\n                    quantity: this.state.quantity,\r\n                    dolarReference: this.props.dolarReference\r\n                })\r\n            }).then(res => {\r\n                if (res.status == 200) {\r\n                    this.setState({\r\n                        success: \"Se ha registrado el abastecimiento con éxito\"\r\n                    })\r\n                    this.supplyingForm.current.reset();\r\n                    $(\"#resourceTable\").DataTable().draw();\r\n                }\r\n                else {\r\n                    res.text().then(error => {\r\n                        this.setState({\r\n                            error\r\n                        })\r\n                    })\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            alert(\"Por favor rellene todos los campos\")\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1 className=\"text-danger float-left\">Abastecimiento</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-3\">\r\n                    <div className=\"col-md-12\">\r\n                        <ResourceTable asyncTable={true} setModalAction={this.setModalAction} sourceURL={\"/api/supplyings\"} columns={[\r\n                            { title: \"ID\", data: \"id\" },\r\n                            { title: \"ID Proveedor\", data: \"supplierId\" },\r\n                            { title: \"Nombre Proveedor\", data: \"supplier.name\" },\r\n                            { title: \"ID Product\", data: \"productId\" },\r\n                            { title: \"Nombre Producto\", data: \"product.name\" },\r\n                            {\r\n                                render: function (data) {\r\n                                    return \"$\" + data\r\n                                }, title: \"Precio de Compra\", data: \"price\"\r\n                            },\r\n                            {\r\n                                render: function (data) {\r\n                                    return (data > 1) ? data + \" Unidades\" : data + \" Unidad\"\r\n                                }, title: \"Cantidad\", data: \"quantity\"\r\n                            },\r\n                            {\r\n                                render: function (data, type, row, meta) {\r\n                                    return moment.utc(row.createdAt).format(\"DD/MM/YYYY\");\r\n                                }, title: \"Fecha creación\", data: \"createdAt\", type: \"date\"\r\n                            },\r\n                            {\r\n                                render: function (data, type, row, meta) {\r\n                                    return moment.utc(row.updatedAt).format(\"DD/MM/YYYY\");\r\n                                }, title: \"Fecha actualización\", data: \"updatedAt\", type: \"date\"\r\n                            },\r\n                        ]} actions={[\"add\", \"edit\", \"delete\"]} modalStructure={\r\n                            <form ref={this.supplyingForm} onSubmit={this.submitHandler} className=\"float-left\">\r\n                                <div className=\"modal-header\">\r\n                                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">New Supplying</h5>\r\n                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                        <span aria-hidden=\"true\">&times;</span>\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"supplierId\">Supplier ID: </label>\r\n                                        <CustomSelect sourceURL=\"/api/suppliers\"\r\n                                            isMulti={false}\r\n                                            innerRef={this.supplierSelect}\r\n                                            changeHandler={this.supplierChangeHandler} required />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"productId\">Product ID: </label>\r\n                                        <CustomSelect\r\n                                            isMulti={false}\r\n                                            innerRef={this.productSelect}\r\n                                            changeHandler={this.productChangeHandler} required />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"price\">Price: </label>\r\n                                        <input onChange={this.inputChangeHandler} className=\"form-control\" type=\"number\" step=\"0.00000000000000001\" name=\"price\" id=\"price\" required />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"quantity\">Quantity: </label>\r\n                                        <input onChange={this.inputChangeHandler} className=\"form-control\" type=\"number\" step=\"0.1\" name=\"quantity\" id=\"quantity\" required />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Cerrar</button>\r\n                                    <button type=\"submit\" className=\"btn btn-primary\">Enviar</button>\r\n                                </div>\r\n                                {this.state.success && <span className=\"text-success\">{this.state.success}</span>}\r\n                                {this.state.error && <span className=\"text-danger\">{this.state.error}</span>}\r\n                            </form>\r\n                        } />\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Supplyings;","import React, { Component } from \"react\";\r\nimport moment from \"moment\";\r\nimport ResourceTable from \"./ResourceTable\";\r\n\r\nimport $ from \"jquery\";\r\nimport DataTable from \"datatables.net\";\r\n\r\nclass Users extends Component {\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {\r\n            email: null,\r\n            password: null,\r\n            permissions: null,\r\n            success: null,\r\n            error: null\r\n        }\r\n\r\n        this.submitHandler = this.submitHandler.bind(this);\r\n\r\n        this.inputChangeHandler = this.inputChangeHandler.bind(this);\r\n\r\n        this.form = React.createRef();\r\n    }\r\n\r\n    submitHandler(event) {\r\n        event.preventDefault();\r\n\r\n        if (this.state.email && this.state.password && this.state.permissions) {\r\n\r\n            fetch(\"/api/users\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                    email: this.state.email,\r\n                    password: this.state.password,\r\n                    permissions: this.state.permissions\r\n                })\r\n            }).then(res => {\r\n                if (res.status == 200) {\r\n                    this.setState({\r\n                        success: \"Se ha registrado con éxito\"\r\n                    });\r\n                    this.form.current.reset();\r\n                    $(\"resourceTable\").DataTable().draw();\r\n                }\r\n                else {\r\n                    res.text().then(error => {\r\n                        this.setState({\r\n                            error\r\n                        })\r\n                    })\r\n                }\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    inputChangeHandler(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1 className=\"text-danger float-left\">Usuarios</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-3\">\r\n                    <div className=\"col-md-12\">\r\n                        <ResourceTable asyncTable={true} sourceURL={\"/api/users\"} columns={[\r\n                            { title: \"ID\", data: \"id\" },\r\n                            { title: \"Email\", data: \"email\" },\r\n                            { title: \"Permisos\", data: \"permissions\" },\r\n                            {\r\n                                render: function (data, type, row, meta) {\r\n                                    return moment.utc(row.createdAt).format(\"DD/MM/YYYY\");\r\n                                }, title: \"Fecha creación\", data: \"createdAt\", type: \"date\"\r\n                            },\r\n                            {\r\n                                render: function (data, type, row, meta) {\r\n                                    return moment.utc(row.updatedAt).format(\"DD/MM/YYYY\");\r\n                                }, title: \"Fecha actualización\", data: \"updatedAt\", type: \"date\"\r\n                            },\r\n                        ]} actions={[\"add\", \"delete\"]} modalStructure={\r\n                            <form ref={this.form} onSubmit={this.submitHandler} className=\"float-left\">\r\n                                <div className=\"modal-header\">\r\n                                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">New Supplier</h5>\r\n                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                        <span aria-hidden=\"true\">&times;</span>\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"email\">Email: </label>\r\n                                        <input onChange={this.inputChangeHandler} className=\"form-control\" type=\"text\" name=\"email\" id=\"email\" required />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"password\">Password: </label>\r\n                                        <input onChange={this.inputChangeHandler} className=\"form-control\" type=\"password\" name=\"password\" id=\"password\" required />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"permissions\">Permissions: </label>\r\n                                        <input onChange={this.inputChangeHandler} className=\"form-control\" type=\"text\" name=\"permissions\" id=\"permissions\" required />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Cerrar</button>\r\n                                    <button type=\"submit\" className=\"btn btn-primary\">Enviar</button>\r\n                                </div>\r\n                                {this.state.success && <span className=\"text-success\">{this.state.success}</span>}\r\n                                {this.state.error && <span className=\"text-danger\">{this.state.error}</span>}\r\n                            </form>\r\n                        } />\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Users;","import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nclass Navigation extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.clickHandler = this.clickHandler.bind(this);\r\n        this.logout = this.logout.bind(this);\r\n    }\r\n\r\n    logout() {\r\n        localStorage.removeItem(\"jwt\");\r\n    }\r\n\r\n    clickHandler(event) {\r\n        this.setState({\r\n            activeNavLink: event.target.innerText\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark flex-lg-column flex-xl-row\">\r\n                <a className=\"navbar-brand text-danger\" href=\"/\">Supermercado Melquisedec</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n\r\n                <div className=\"collapse navbar-collapse row p-0 m-0\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav flex-lg-row mx-auto container-fluid p-0 m-0\">\r\n                        <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\r\n                            <NavLink className=\"nav-link\" onClick={this.clickHandler} to=\"/control-de-ventas\"><span className=\"d-md-inline\">Control de Ventas</span></NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\r\n                            <NavLink className=\"nav-link\" onClick={this.clickHandler} to=\"/inventario\"><span className=\"d-md-inline\">Inventario</span></NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\r\n                            <NavLink className=\"nav-link\" onClick={this.clickHandler} to=\"/reportes\"><span className=\"d-md-inline\">Reportes</span></NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\r\n                            <NavLink className=\"nav-link\" onClick={this.clickHandler} to=\"/categorias\"><span className=\"d-md-inline\">Categorías</span></NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\r\n                            <NavLink className=\"nav-link\" onClick={this.clickHandler} to=\"/clientes\"><span className=\"d-md-inline\">Clientes</span></NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\r\n                            <NavLink className=\"nav-link\" onClick={this.clickHandler} to=\"/productos\"><span className=\"d-md-inline\">Productos</span></NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\r\n                            <NavLink className=\"nav-link\" onClick={this.clickHandler} to=\"/ventas\"><span className=\"d-md-inline\">Ventas</span></NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\r\n                            <NavLink className=\"nav-link\" onClick={this.clickHandler} to=\"/abastecimiento\"><span className=\"d-md-inline\">Abastecimiento</span></NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\r\n                            <NavLink className=\"nav-link\" onClick={this.clickHandler} to=\"/proveedores\"><span className=\"d-md-inline\">Proveedores</span></NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\r\n                            <NavLink className=\"nav-link\" onClick={this.clickHandler} to=\"/usuarios\"><span className=\"d-md-inline\">Usuarios</span></NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\r\n                            <NavLink className=\"nav-link btn btn-danger px-0\" onClick={this.logout} to=\"/signin\">Cerrar Sesión</NavLink>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navigation;","import React, { Component } from \"react\";\r\n\r\nimport CustomSelect from \"../globalComponents/CustomSelect\";\r\n\r\nclass SalesControl extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            selectedProduct: null,\r\n            addedProducts: [],\r\n            subtotalDollars: null,\r\n            subtotalBs: null,\r\n            totalDollars: null,\r\n            totalBs: null,\r\n            quantity: 1,\r\n            stockError: \"\",\r\n            error: \"\",\r\n            success: \"\"\r\n        }\r\n        this.productsHandler = this.productsHandler.bind(this);\r\n        this.submitHandler = this.submitHandler.bind(this);\r\n        this.optionChangeHandler = this.optionChangeHandler.bind(this);\r\n        this.onChangeHandler = this.onChangeHandler.bind(this);\r\n        this.clickHandler = this.clickHandler.bind(this);\r\n\r\n\r\n        this.sendSaleForm = React.createRef();\r\n        this.quantityInput = React.createRef();\r\n        this.CustomSelectRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.body.addEventListener(\"keyup\", (event) => {\r\n            let key = event.key;\r\n            if (event.ctrlKey && key == \"Enter\") {\r\n                this.submitHandler();\r\n            }\r\n        });\r\n    }\r\n    optionChangeHandler(selectedOption, actionType) {\r\n        if (actionType.action == \"select-option\") {\r\n            this.quantityInput.current.focus();\r\n            this.quantityInput.current.select();\r\n        }\r\n        this.setState({\r\n            selectedProduct: selectedOption\r\n        })\r\n    }\r\n    onChangeHandler(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    productsHandler(event) {\r\n        event.preventDefault();\r\n\r\n        if (this.state.selectedProduct != null) {\r\n            fetch(`/api/inventory/${this.state.selectedProduct.id}`, {\r\n                headers: {\r\n                    \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n                }\r\n            })\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    let stock = res.data[0].stock;\r\n                    if (stock > 0 && stock >= this.state.quantity) {\r\n                        let product = this.state.selectedProduct;\r\n\r\n                        let productFormatted = {};\r\n\r\n                        let discount = 0;\r\n                        if (product.discount.length) {\r\n                            discount = product.discount[0].percent;\r\n                        }\r\n\r\n                        product.discount = discount;\r\n                        product.quantity = this.state.quantity || 1;\r\n\r\n\r\n                        product.totalDollars = product.price * product.quantity - (product.price * (discount / 100));\r\n                        product.totalBs = this.roundToNiceNumber(product.totalDollars * this.props.dolarReference);\r\n                        product.priceBs = this.roundToNiceNumber(product.price * this.props.dolarReference);\r\n\r\n                        if (discount) {\r\n                            product.totalFormattedDollars = <span className={(discount) ? \"text-danger\" : \"\"}>{Intl.NumberFormat('es-VE', { style: 'currency', currency: 'USD' }).format(product.totalDollars) + ` (-${discount}%)`}</span>;\r\n                            product.totalFormattedBs = <span className={(discount) ? \"text-danger\" : \"\"}>{Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(product.totalBs) + ` (-${discount}%)`}</span>;\r\n                        }\r\n                        else {\r\n                            product.totalFormattedDollars = Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(product.totalDollars);\r\n                            product.totalFormattedBs = Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(product.totalBs);\r\n                        }\r\n\r\n                        productFormatted = {\r\n                            id: product.id,\r\n                            name: product.name,\r\n                            price: product.price,\r\n                            priceBs: product.priceBs,\r\n                            quantity: product.quantity,\r\n                            totalDollars: product.totalDollars,\r\n                            totalBs: product.totalBs,\r\n                            imagePath: product.imagePath,\r\n                            totalFormattedDollars: product.totalFormattedDollars,\r\n                            totalFormattedBs: product.totalFormattedBs,\r\n                            discount: product.discount\r\n                        };\r\n\r\n                        this.CustomSelectRef.current.select.state.value = [];\r\n                        this.quantityInput.current.value = 1\r\n                        this.CustomSelectRef.current.focus();\r\n\r\n                        let productExistsInTable = false;\r\n                        this.state.addedProducts.forEach(product => {\r\n                            if (productFormatted.id == product.id) {\r\n                                productExistsInTable = true;\r\n                                product.quantity += productFormatted.quantity;\r\n                            }\r\n                        })\r\n                        if (!productExistsInTable) {\r\n                            this.setState({\r\n                                quantity: 1,\r\n                                addedProducts: this.state.addedProducts.concat(productFormatted),\r\n                                selectedProduct: null,\r\n                                stockError: \"\"\r\n                            }, function () {\r\n                                let totalDollars = 0;\r\n                                let totalBs = 0;\r\n                                this.state.addedProducts.map(product => {\r\n                                    totalDollars += parseFloat(product.totalDollars);\r\n                                    totalBs += parseFloat(product.totalBs);\r\n                                });\r\n                                this.setState({\r\n                                    subtotalDollars: totalDollars,\r\n                                    subtotalBs: totalBs,\r\n                                    totalDollars,\r\n                                    totalBs\r\n                                })\r\n                            });\r\n                        }\r\n                        else {\r\n                            var index = this.state.addedProducts.findIndex(product => product.id === productFormatted.id);\r\n\r\n                            this.setState({\r\n                                addedProducts: [\r\n                                    ...this.state.addedProducts.slice(0, index),\r\n                                    Object.assign({}, this.state.addedProducts[index], { ...productFormatted }),\r\n                                    ...this.state.addedProducts.slice(index + 1)\r\n                                ],\r\n                                quantity: 1,\r\n                                selectedProduct: null,\r\n                                stockError: \"\"\r\n                            })\r\n                        }\r\n                    }\r\n                    else {\r\n                        this.setState({\r\n                            stockError: \"No hay productos suficientes en el inventario\"\r\n                        });\r\n                    }\r\n                });\r\n        }\r\n        else {\r\n            this.setState({\r\n                stockError: \"Seleccione un producto\"\r\n            })\r\n        }\r\n    }\r\n    clickHandler(event) {\r\n        let newProducts = [];\r\n        let totalToSubtractDollars = 0;\r\n        let totalToSubtractBs = 0;\r\n        this.state.addedProducts.forEach(product => {\r\n            if (product.id != event.currentTarget.parentElement.parentElement.getAttribute(\"productid\")) {\r\n                newProducts.push(product);\r\n            }\r\n            else {\r\n                totalToSubtractDollars += product.totalDollars;\r\n                totalToSubtractBs += product.totalBs;\r\n            }\r\n        })\r\n        this.setState({\r\n            addedProducts: newProducts,\r\n            subtotalDollars: this.state.subtotalDollars - totalToSubtractDollars,\r\n            subtotalBs: this.state.subtotalBs - totalToSubtractBs,\r\n            totalDollars: this.state.totalDollars - totalToSubtractDollars,\r\n            totalBs: this.state.totalBs - totalToSubtractBs\r\n        });\r\n        this.CustomSelectRef.current.focus();\r\n    }\r\n\r\n    submitHandler() {\r\n        if (!this.state.addedProducts.length) {\r\n            this.setState({\r\n                stockError: \"Seleccione un producto\"\r\n            })\r\n            return\r\n        }\r\n        let saleProducts = [];\r\n        this.state.addedProducts.forEach(product => {\r\n            saleProducts.push({\r\n                id: product.id,\r\n                quantity: product.quantity,\r\n                price: product.price,\r\n                dolarReference: this.props.dolarReference,\r\n                discount: product.discount\r\n            })\r\n        });\r\n        fetch(\"/api/sales\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n                'Content-Type': 'application/json'\r\n\r\n            },\r\n            body: JSON.stringify({\r\n                products: saleProducts\r\n            })\r\n        }).then(res => res.json())\r\n            .then(res => {\r\n                if (res.err) {\r\n                    this.setState({\r\n                        error: res.err\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        success: \"La venta se ha realizado con éxito\",\r\n                        subtotalDollars: 0,\r\n                        subtotalBs: 0,\r\n                        totalDollars: 0,\r\n                        totalBs: 0,\r\n                        addedProducts: []\r\n                    })\r\n                    setTimeout(() => {\r\n                        this.setState({\r\n                            success: \"\"\r\n                        })\r\n                    }, 3000);\r\n                    this.CustomSelectRef.current.select.state.value = [];\r\n                    this.quantityInput.current.value = 1\r\n                    this.CustomSelectRef.current.focus();\r\n\r\n                }\r\n            })\r\n    }\r\n\r\n    roundToNiceNumber(value) {\r\n        var val = 0;\r\n        if (value.toString().length == 4) {\r\n            val = Math.ceil(value / 100) * 100\r\n        }\r\n        else if (value.toString().length > 4) {\r\n            val = Math.ceil(value / 1000) * 1000\r\n        }\r\n\r\n        return val;\r\n    }\r\n    render() {\r\n        var _this = this;\r\n        return (\r\n            <div className=\"container-fluid\" id=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1 className=\"text-danger\">Control de Ventas</h1>\r\n                    </div>\r\n                </div>\r\n                <form className=\"mt-5\" onSubmit={this.productsHandler}>\r\n                    <div className=\"col\">\r\n                        <span className=\"text-danger\">{this.state.stockError}</span>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 col-md-7 mt-2\">\r\n                            <CustomSelect isMulti={false} innerRef={this.CustomSelectRef} changeHandler={this.optionChangeHandler} name={\"ProductSelect\"} />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-3 mt-2\">\r\n                            <input onChange={this.onChangeHandler} ref={this.quantityInput} type=\"text\" className=\"form-control\" placeholder=\"Cantidad\" id=\"quantity\" name=\"quantity\" defaultValue=\"1\" />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-10 col-lg-2 mt-2\">\r\n                            <input type=\"submit\" className=\"form-control btn btn-primary\" hidden />\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <div className=\"table-responsive\">\r\n                            <table className=\"table table-striped table-dark\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"col\">Count</th>\r\n                                        <th scope=\"col\">Product ID</th>\r\n                                        <th scope=\"col\">Nombre</th>\r\n                                        <th scope=\"col\">Precio $</th>\r\n                                        <th scope=\"col\">Precio Bs</th>\r\n                                        <th scope=\"col\">Cantidad</th>\r\n                                        <th scope=\"col\">Total $</th>\r\n                                        <th scope=\"col\">Total Bs</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {this.state.addedProducts.map((product, index) => {\r\n                                        return (\r\n                                            <tr key={index} productid={product.id}>\r\n                                                <th>{index + 1}</th>\r\n                                                <th>{product.id}</th>\r\n                                                <th><img className=\"float-left mr-2\" style={{ maxWidth: \"20px\" }} src={product.imagePath} />{product.name}</th>\r\n                                                <th>{Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(product.price)}</th>\r\n                                                <th>{Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(product.priceBs)}</th>\r\n                                                <th>{product.quantity}</th>\r\n                                                <th>{product.totalFormattedDollars}</th>\r\n                                                <th>{product.totalFormattedBs}</th>\r\n                                                <th>\r\n                                                    <button onClick={this.clickHandler} className=\"btn btn-danger\">Delete</button>\r\n                                                </th>\r\n                                            </tr>\r\n                                        )\r\n                                    })}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <div className=\"d-flex flex-column align-items-end\">\r\n                            <label className=\"font-weight-bold h4\">{\"Subtotal Bs: \"}\r\n                                <span className=\"font-weight-bold h4 text-danger\">{Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(this.state.subtotalBs)}</span>\r\n                            </label>\r\n                            <label className=\"font-weight-bold h4\">{\"Total Bs: \"}\r\n                                <span className=\"font-weight-bold h4 text-danger\">{Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(this.state.totalBs)}</span>\r\n                            </label>\r\n                            <hr className=\"w-100\" />\r\n                            <label className=\"font-weight-bold h4\">{\"Subtotal $: \"}\r\n                                <span className=\"font-weight-bold h4 text-danger\">{Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(this.state.subtotalDollars)}</span>\r\n                            </label>\r\n                            <label className=\"font-weight-bold h4\">{\"Total $: \"}\r\n                                <span className=\"font-weight-bold h4 text-danger\">{Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(this.state.totalDollars)}</span>\r\n                            </label>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n                <input onClick={this.submitHandler} type=\"submit\" className=\"form-control btn btn-primary mt-2\" value=\"Enviar\" />\r\n                <div className=\"mt-2\">\r\n                    <span className=\"text-danger h3\">{this.state.error}</span>\r\n                    <span className=\"text-success h3\">{this.state.success}</span>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SalesControl;","import React, { Component } from \"react\";\r\n\r\nimport ResourceTable from \"./ResourceTable\";\r\n\r\nclass Inventory extends Component {\r\n\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1 className=\"text-danger float-left\">Ventas</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-3\">\r\n                    <div className=\"col-md-12\">\r\n                        <ResourceTable asyncTable={true} sourceURL={\"/api/inventory\"} columns={[\r\n                            { title: \"Product ID\", data: \"id\" },\r\n                            { title: \"Nombre Producto\", data: \"name\" },\r\n                            {\r\n                                title: \"Inventario\", data: \"stock\", render: function (data, type, row) {\r\n                                    if (data <= 0) {\r\n                                        return `<span class=\"text-danger\">${data}</span>`\r\n                                    }\r\n                                    return `<span class=\"text-success\">${data}</span>`\r\n                                }\r\n                            },\r\n                            { title: \"Total productos vendidos\", data: \"salesTotal\" },\r\n                            { title: \"Total productos comprados\", data: \"supplyingsTotal\" }\r\n                        ]} actions={[]} />\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Inventory;","import React, { Component } from \"react\"\r\nimport ResourceTable from \"./ResourceTable\";\r\n\r\nconst moment = require(\"moment\");\r\n\r\nconst $ = require(\"jquery\");\r\nconst DataTable = require(\"datatables.net\");\r\n\r\nclass Reports extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            resource: \"sales\",\r\n            parameters: \"\"\r\n        }\r\n\r\n        this.submitHandler = this.submitHandler.bind(this);\r\n        this.changeHandler = this.changeHandler.bind(this);\r\n\r\n        this.reportForm = React.createRef();\r\n        this.resourceTable = React.createRef();\r\n    }\r\n\r\n    changeHandler(event) {\r\n        let dateRangeFromValue = document.body.querySelector(\"#rangeDateFrom\").value;\r\n        let dateRangeToValue = document.body.querySelector(\"#rangeDateTo\").value;\r\n        let greaterThanDate = document.body.querySelector(\"#greaterThanDate\").value;\r\n        let lowerThanDate = document.body.querySelector(\"#lowerThanDate\").value;\r\n        let equalDate = document.body.querySelector(\"#equalDate\").value;\r\n\r\n        var previousParameters = this.state.parameters;\r\n        var parameters = \"\";\r\n        if (event.target.name == \"dateRadios\") {\r\n            $(\"form\").find(\"input[type=date]\").val(\"\");\r\n            switch (event.target.id) {\r\n                case \"today\":\r\n                    parameters = `from=${moment(new Date()).format(\"YYYY-MM-DD\")}&to=${moment(new Date()).format(\"YYYY-MM-DD\")}`\r\n                    break;\r\n                case \"yesterday\":\r\n                    parameters = `from=${moment(new Date()).subtract(1, \"days\").format(\"YYYY-MM-DD\")}&to=${moment(new Date()).subtract(1, \"days\").format(\"YYYY-MM-DD\")}`\r\n                    break;\r\n                case \"lastWeek\":\r\n                    parameters = `from=${moment(new Date()).subtract(7, \"days\").format(\"YYYY-MM-DD\")}&to=${moment(new Date()).format(\"YYYY-MM-DD\")}`\r\n                    break;\r\n                case \"fortnight\":\r\n                    parameters = `from=${moment(new Date()).subtract(15, \"days\").format(\"YYYY-MM-DD\")}&to=${moment(new Date()).format(\"YYYY-MM-DD\")}`\r\n                    break;\r\n                case \"month\":\r\n                    parameters = `from=${moment(new Date()).subtract(1, \"months\").format(\"YYYY-MM-DD\")}&to=${moment(new Date()).format(\"YYYY-MM-DD\")}`\r\n                    break;\r\n                case \"quarter\":\r\n                    parameters = `from=${moment(new Date()).subtract(3, \"months\").format(\"YYYY-MM-DD\")}&to=${moment(new Date()).format(\"YYYY-MM-DD\")}`\r\n                    break;\r\n                case \"semester\":\r\n                    parameters = `from=${moment(new Date()).subtract(6, \"months\").format(\"YYYY-MM-DD\")}&to=${moment(new Date()).format(\"YYYY-MM-DD\")}`\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            parameters += \"&group=true\"\r\n        }\r\n        else if (event.target.name == \"reportType\") {\r\n            this.setState({\r\n                resource: event.target.id,\r\n                parameters: \"\"\r\n            }, function () {\r\n                this.setState({\r\n                    parameters: previousParameters\r\n                })\r\n            });\r\n            return;\r\n        }\r\n        else {\r\n            $(\"form\").find(\"input[name=dateRadios]\").prop(\"checked\", false);\r\n            $(\"form\").find(\"input[type=date]\").val(\"\");\r\n            switch (event.target.id) {\r\n                case \"greaterThanDate\":\r\n                    parameters = `createdAt=${greaterThanDate}&operation=gte`\r\n                    event.target.value = greaterThanDate;\r\n                    break;\r\n                case \"lowerThanDate\":\r\n                    parameters = `createdAt=${lowerThanDate}&operation=lte`\r\n                    event.target.value = lowerThanDate;\r\n                    break;\r\n                case \"equalDate\":\r\n                    parameters = `createdAt=${equalDate}&operation=eq`\r\n                    event.target.value = equalDate;\r\n                    break;\r\n                case \"rangeDateFrom\":\r\n                    if (dateRangeToValue) {\r\n                        parameters = `from=${moment(dateRangeFromValue || \"\").format(\"YYYY-MM-DD\")}&to=${dateRangeToValue}`\r\n                    }\r\n                    else {\r\n                        parameters = `from=${moment(dateRangeFromValue || \"\").format(\"YYYY-MM-DD\")}`\r\n                    }\r\n                    event.target.value = dateRangeFromValue;\r\n                    $(\"#rangeDateTo\").val(dateRangeToValue);\r\n                    break;\r\n                case \"rangeDateTo\":\r\n                    if (dateRangeFromValue) {\r\n                        parameters = `from=${dateRangeFromValue}&to=${moment(dateRangeToValue || \"\").format(\"YYYY-MM-DD\")}`\r\n                    }\r\n                    else {\r\n                        parameters = `to=${moment(dateRangeToValue || \"\").format(\"YYYY-MM-DD\")}`\r\n                    }\r\n                    event.target.value = dateRangeToValue;\r\n                    $(\"#rangeDateFrom\").val(dateRangeFromValue);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            parameters += \"&group=true\"\r\n        }\r\n        this.setState({\r\n            parameters\r\n        });\r\n    }\r\n    componentDidUpdate() {\r\n        if (this.resourceTable.current) {\r\n            this.resourceTable.current.changeSourceURL(`/api/${this.state.resource}?${this.state.parameters}`);\r\n        }\r\n    }\r\n    submitHandler(event) {\r\n        event.preventDefault();\r\n        console.log(this.state.parameters);\r\n        this.reportForm.current.reset();\r\n    }\r\n    render() {\r\n        var salesColumns = [\r\n            {\r\n                render: function (data, type, row, meta) {\r\n                    return `<img src=\"${row.product.imagePath}\" style=\"max-width:35px;\"/>`\r\n                },\r\n                title: \"Imagen\", data: \"product.imagePath\"\r\n            },\r\n            { title: \"Product ID\", data: \"product.id\" },\r\n            { title: \"Nombre\", data: \"product.name\" },\r\n            { title: \"Transacciones\", data: \"transactions\" },\r\n            { title: \"Cantidad de productos\", data: \"salesTotal\" },\r\n            {\r\n                render: function (data, type, row, meta) {\r\n                    return Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(row.grossTotalDollars)\r\n                }, title: (this.state.resource == \"sales\") ? \"Ganancia bruta $\" : \"Costo bruto $\", data: \"grossTotalDollars\"\r\n            },\r\n            {\r\n                render: function (data, type, row, meta) {\r\n                    return Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(row.grossTotalBs)\r\n                }, title: (this.state.resource == \"sales\") ? \"Ganancia bruta Bs\" : \"Costo bruto Bs\", data: \"grossTotalBs\"\r\n            },\r\n            {\r\n                render: function (data, type, row, meta) {\r\n                    return Intl.NumberFormat('en-US', {\r\n                        style: 'currency',\r\n                        currency: 'USD',\r\n                    }).format(row.netIncomeDollars)\r\n                }, title: (this.state.resource == \"sales\") ? \"Ganancia Neta $\" : \"Ganancia neta $\", data: \"netIncomeDollars\"\r\n            },\r\n            {\r\n                render: function (data, type, row, meta) {\r\n                    return Intl.NumberFormat('es-VE', {\r\n                        style: 'currency',\r\n                        currency: 'VES',\r\n                    }).format(row.netIncomeBs)\r\n                }, title: (this.state.resource == \"sales\") ? \"Ganancia Neta Bs\" : \"Ganancia Neta Bs\", data: \"netIncomeBs\"\r\n            }\r\n        ];\r\n\r\n        var supplyingsColumns = [\r\n            {\r\n                render: function (data, type, row, meta) {\r\n                    return `<img src=\"${row.product.imagePath}\" style=\"max-width:35px;\"/>`\r\n                },\r\n                title: \"Imagen\", data: \"product.imagePath\"\r\n            },\r\n            { title: \"Product ID\", data: \"product.id\" },\r\n            { title: \"Nombre\", data: \"product.name\" },\r\n            { title: \"Transacciones\", data: \"transactions\" },\r\n            { title: \"Cantidad de productos\", data: \"quantity\" },\r\n            {\r\n                render: function (data, type, row, meta) {\r\n                    return Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(row.grossTotalDollars)\r\n                }, title: (this.state.resource == \"sales\") ? \"Ganancia bruta $\" : \"Costo bruto $\", data: \"grossTotalDollars\"\r\n            },\r\n            {\r\n                render: function (data, type, row, meta) {\r\n                    return Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(row.grossTotalBs)\r\n                }, title: (this.state.resource == \"sales\") ? \"Ganancia bruta Bs\" : \"Costo bruto Bs\", data: \"grossTotalBs\"\r\n            }\r\n        ];\r\n\r\n        return (\r\n            <div className=\"\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1 className=\"text-danger float-left\">Reportes</h1>\r\n                    </div>\r\n                </div>\r\n                <hr />\r\n                <form ref={this.reportForm} onSubmit={this.submitHandler}>\r\n                    <div className=\"col-12\">\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <h3 className=\"mr-4\">Tipo de reporte:</h3>\r\n                        </div>\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input onChange={this.changeHandler} className=\"form-check-input\" type=\"radio\" name=\"reportType\" id=\"supplyings\" value=\"supplyingRadio\" />\r\n                            <label className=\"form-check-label\" htmlFor=\"supplyingRadio\">Compra</label>\r\n                        </div>\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input onChange={this.changeHandler} className=\"form-check-input\" type=\"radio\" name=\"reportType\" id=\"sales\" value=\"saleRadio\" defaultChecked />\r\n                            <label className=\"form-check-label\" htmlFor=\"saleRadio\">Venta</label>\r\n                        </div>\r\n                    </div>\r\n                    <hr className=\"col-12 p-0\" />\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 col-lg-2\">\r\n                            <h5 className=\"mr-4\">Rango de fechas:</h5>\r\n                            <div className=\"form-group\">\r\n                                <input onChange={this.changeHandler} type=\"date\" name=\"rangeDateFrom\" id=\"rangeDateFrom\" />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input onChange={this.changeHandler} type=\"date\" name=\"rangeDateTo\" id=\"rangeDateTo\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12 col-lg-4\">\r\n                            <div className=\"form-check form-check-inline\">\r\n                                <label className=\"btn btn-secondary\" htmlFor=\"semester\" name=\"labelDateRadios\">\r\n                                    <input onChange={this.changeHandler} className=\"form-check-input\" type=\"radio\" name=\"dateRadios\" id=\"semester\" />\r\n                                    6 meses\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"form-check form-check-inline\">\r\n                                <label className=\"btn btn-secondary\" htmlFor=\"quarter\" name=\"labelDateRadios\">\r\n                                    <input onChange={this.changeHandler} className=\"form-check-input\" type=\"radio\" name=\"dateRadios\" id=\"quarter\" />\r\n                                3 meses\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"form-check form-check-inline\">\r\n                                <label className=\"btn btn-secondary\" htmlFor=\"month\" name=\"labelDateRadios\">\r\n                                    <input onChange={this.changeHandler} className=\"form-check-input\" type=\"radio\" name=\"dateRadios\" id=\"month\" />\r\n                                1 mes\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"form-check form-check-inline\">\r\n                                <label className=\"btn btn-secondary\" htmlFor=\"fortnight\" name=\"labelDateRadios\">\r\n                                    <input onChange={this.changeHandler} className=\"form-check-input\" type=\"radio\" name=\"dateRadios\" id=\"fortnight\" />\r\n                                15 días\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"form-check form-check-inline\">\r\n                                <label className=\"btn btn-secondary\" htmlFor=\"lastWeek\" name=\"labelDateRadios\">\r\n                                    <input onChange={this.changeHandler} className=\"form-check-input\" type=\"radio\" name=\"dateRadios\" id=\"lastWeek\" />\r\n                                Útima semana\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"form-check form-check-inline\">\r\n                                <label className=\"btn btn-secondary\" htmlFor=\"yesterday\" name=\"labelDateRadios\">\r\n                                    <input onChange={this.changeHandler} className=\"form-check-input\" type=\"radio\" name=\"dateRadios\" id=\"yesterday\" />\r\n                                Ayer\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"form-check form-check-inline\">\r\n                                <label className=\"btn btn-secondary\" htmlFor=\"today\" name=\"labelDateRadios\">\r\n                                    <input onChange={this.changeHandler} className=\"form-check-input\" type=\"radio\" name=\"dateRadios\" id=\"today\" />\r\n                                Hoy\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12 col-lg-2\">\r\n                            <div className=\"\">\r\n                                <h5 className=\"\">Fecha mayor o igual a:</h5>\r\n                                <input onChange={this.changeHandler} type=\"date\" name=\"greaterThanDate\" id=\"greaterThanDate\" />\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className=\"col-12 col-lg-2\">\r\n                            <div className=\"\">\r\n                                <h5 className=\"\">Fecha menor o igual a:</h5>\r\n                                <input onChange={this.changeHandler} type=\"date\" name=\"lowerThanDate\" id=\"lowerThanDate\" />\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className=\"col-12 col-lg-2\">\r\n                            <div className=\"\">\r\n                                <h5 className=\"\">Fecha igual a:</h5>\r\n                                <input onChange={this.changeHandler} type=\"date\" name=\"equalDate\" id=\"equalDate\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <hr />\r\n                </form>\r\n\r\n                <div className=\"row mt-3\">\r\n                    <div className=\"col-md-12\">\r\n                        {this.state.parameters != \"\" && <ResourceTable ref={this.resourceTable} asyncTable={true} sourceURL={`/api/${this.state.resource}?${this.state.parameters}`} columns={\r\n                            (this.state.resource == \"sales\") ? salesColumns : supplyingsColumns\r\n                        } actions={[]} dolarReference={this.props.dolarReference} />}\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Reports;","import React, { Component } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport isAuthenticated from \"../requests/isAuthenticated\";\r\n\r\nclass PrivateRoute extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            loading: true,\r\n            isAuthenticated: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        isAuthenticated().then(isAuthenticated => {\r\n            this.setState({\r\n                loading: false,\r\n                isAuthenticated\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { component: Component, ...rest } = this.props\r\n        return (\r\n            <Route\r\n                render={props =>\r\n                    this.state.isAuthenticated ? (\r\n                        <Component {...props} {...rest} />\r\n                    ) : (\r\n                            this.state.loading ? (\r\n                                <div>LOADING</div>\r\n                            ) : (\r\n                                    <Redirect to={{ pathname: '/signin', state: { from: this.props.location } }} />\r\n                                )\r\n                        )\r\n                }\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default PrivateRoute;","import React, { Component } from \"react\";\r\n\r\nimport Categories from \"./Categories\";\r\nimport Clients from \"./Clients\";\r\nimport Products from \"./Products\";\r\nimport Sales from \"./Sales\";\r\nimport Suppliers from \"./Suppliers\";\r\nimport Supplyings from \"./Supplyings\";\r\nimport Users from \"./Users\";\r\nimport Navigation from \"./Navigation\";\r\nimport SalesControl from \"./SalesControl\";\r\nimport Inventory from \"./Inventory\";\r\nimport Reports from \"./Reports\";\r\nimport PrivateRoute from \"../components/PrivateRoute\";\r\n\r\nimport { Route } from \"react-router-dom\";\r\nclass Dashboard extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            formattedDolareReference: \"\",\r\n            dolarReference: 0,\r\n            loading: false\r\n        }\r\n\r\n        this.fetchDolarReference = this.fetchDolarReference.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchDolarReference();\r\n    }\r\n\r\n    fetchDolarReference() {\r\n        this.setState({\r\n            loading: true\r\n        });\r\n        fetch(\"/api/dolarReference\", {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if (res.data) {\r\n                    this.setState({\r\n                        dolarReference: res.data.price,\r\n                        formattedDolareReference: Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(res.data.price),\r\n                        loading: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        dolarReference: 0,\r\n                        formattedDolareReference: Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(0),\r\n                        loading: false\r\n                    })\r\n                }\r\n            })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row sticky-top\">\r\n                    <div className=\"col-md-12 p-0\">\r\n                        <Navigation />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"bg-danger text-light col-12\">\r\n                        Precio del Dolar <span id=\"dolarReference\" className=\"badge badge-light\">{(this.state.loading) ? \"Loading...\" : this.state.formattedDolareReference}</span>\r\n                    </div>\r\n                </div>\r\n                <main className=\"mt-5\">\r\n                    <Route path=\"/control-de-ventas\" render={(props) => (<SalesControl {...props} dolarReference={this.state.dolarReference} />)} />\r\n                    <Route path=\"/inventario\" component={Inventory} />\r\n                    <Route path=\"/reportes\" render={(props) => (<Reports {...props} dolarReference={this.state.dolarReference} />)} />\r\n                    <Route path=\"/categorias\" component={Categories} />\r\n                    <Route path=\"/clientes\" component={Clients} />\r\n                    <Route path=\"/productos\" render={(props) => (<Products {...props} dolarReference={this.state.dolarReference} />)} />\r\n                    <Route path=\"/ventas\" component={Sales} />\r\n                    <Route path=\"/abastecimiento\" render={(props) => (<Supplyings {...props} dolarReference={this.state.dolarReference} />)} />\r\n                    <Route path=\"/proveedores\" component={Suppliers} />\r\n                    <Route path=\"/usuarios\" component={Users} />\r\n                </main>\r\n            </div>\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Dashboard;","const initialState = {\r\n    data: [],\r\n    next: {},\r\n    previous: {},\r\n    loading: false\r\n};\r\nexport default function productReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case \"LOAD_PRODUCTS\":\r\n            return {\r\n                ...state,\r\n                data: action.paginatedProducts.data,\r\n                next: action.paginatedProducts.next,\r\n                previous: action.paginatedProducts.previous\r\n            }\r\n        case \"LOADING\":\r\n            return { ...state, loading: action.loading }\r\n        default:\r\n            return state;\r\n    }\r\n}","\r\nconst initialState = {\r\n    activeCategoryId: 0,\r\n    activeCategoryName: \"\",\r\n    data: []\r\n}\r\nexport default function categoriesReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case \"LOAD_CATEGORIES\":\r\n            return { ...state, data: action.categories }\r\n        case \"SET_ACTIVE_CATEGORY_ID\":\r\n            return { ...state, activeCategoryId: action.categoryId }\r\n        case \"SET_ACTIVE_CATEGORY_NAME\":\r\n            return { ...state, activeCategoryName: action.categoryName }\r\n        default:\r\n            return state;\r\n    }\r\n}","import products from \"./productReducer\";\r\nimport categories from \"./categoriesReducer\";\r\n\r\nexport default { products, categories }","import { createStore, combineReducers } from \"redux\";\r\nimport reducers from \"../reducers\";\r\n\r\nconst rootReducer = combineReducers({\r\n    ...reducers\r\n})\r\nexport default function configureStore() {\r\n    return createStore(rootReducer);\r\n}","import React from 'react';\nimport './App.css';\n\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\n\nimport Header from \"./components/Header\";\nimport Navigation from \"./components/Navigation\";\nimport ProductCategories from \"./components/ProductCategories\";\nimport ProductList from \"./components/ProductList\";\nimport BackToTopButton from \"./components/BackToTopButton\";\nimport Login from \"./components/Login\";\nimport Dashboard from \"./adminComponents/Dashboard\";\n\nimport PrivateRoute from \"./components/PrivateRoute\";\n\nimport configureStore from \"./store/configureStore\";\nimport { Provider } from \"react-redux\";\n\nconst store = configureStore();\n\nfunction App() {\n\n  /*\n  <Route path=\"/\">\n              <div className=\"container-fluid\">\n                <div className=\"row bg-dark\" style={{ height: \"30px\" }} />\n                <div className=\"row sticky-top\">\n                  <div className=\"col-12\">\n                    <Header />\n                  </div>\n                </div>\n                <Navigation />\n\n                <div className=\"row\">\n                  <div className=\"col-md-12 mt-2\">\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"col-md-3 mt-2\">\n                    <div className=\"row\">\n                      <div className=\"col-12\">\n                        <ProductCategories />\n                      </div>\n                    </div>\n                    <div className=\"row\">\n                      <div className=\"col-12 d-flex flex-column align-items-center\">\n                        <BackToTopButton />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-md-8 mt-2 d-flex flex-wrap justify-content-start\">\n                    <ProductList />\n                  </div>\n                </div>\n              </div>\n            </Route>\n  */\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <Router>\n          <Switch>\n            <Route exact path=\"/signin\" component={Login} />\n            <PrivateRoute path=\"/\" component={Dashboard} />\n          </Switch>\n        </Router>\n      </div>\n\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}
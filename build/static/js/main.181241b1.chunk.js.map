{"version":3,"sources":["globalComponents/Suggestions.jsx","globalComponents/SearchInput.jsx","components/Header.jsx","components/Navigation.jsx","components/ProductCategories.jsx","components/CategoryTitle.jsx","components/ProductList.jsx","components/BackToTopButton.jsx","requests/isAuthenticated.js","components/Login.jsx","requests/categories.js","adminComponents/Categories.jsx","requests/clients.js","adminComponents/Clients.jsx","adminComponents/ResourceTable.jsx","adminComponents/Products.jsx","adminComponents/Sales.jsx","adminComponents/Suppliers.jsx","adminComponents/Supplyings.jsx","adminComponents/Users.jsx","adminComponents/Navigation.jsx","adminComponents/Inventory.jsx","adminComponents/Reports.jsx","requests/debts.js","adminComponents/Debt.jsx","components/PrivateRoute.jsx","adminComponents/Dashboard.jsx","reducers/productReducer.js","reducers/categoriesReducer.js","reducers/index.js","store/configureStore.js","App.js","serviceWorker.js","index.js","globalComponents/CustomSelect.jsx","actions/productActions.js","actions/categoriesActions.js","adminComponents/SalesControl.jsx"],"names":["Suggestions","this","props","noResults","className","suggestions","map","suggestion","onlyName","onClick","clickHandler","key","id","productid","style","maxWidth","src","imagePath","alt","name","minWidth","type","defaultValue","value","price","Component","SearchInput","state","showSuggestions","searchHandler","debounce","headerContainer","React","createRef","onBlurHandler","bind","event","target","length","fetch","then","result","json","data","setState","parentClassName","onChange","persist","placeholder","ref","suggestionBox","onOutsideClick","ProductCategories","fetchProducts","categoryHandler","categories","dispatch","categoriesActions","document","querySelector","getAttribute","innerText","preventDefault","includes","parentElement","classList","remove","add","page","limit","productActions","paginatedProducts","category","index","categoryid","connect","ownProps","activeCategory","CategoryTitle","activeCategoryName","ProductList","observer","IntersectionObserver","loadMoreProductsHandler","elementToObserve","current","observe","actions","products","concat","entries","isIntersecting","next","product","push","speed","viewBox","backgroundColor","foregroundColor","x","y","rx","ry","width","height","unshift","loading","previous","a","token","localStorage","getItem","res","auth","isAuthenticated","Login","constructor","super","onSubmitHandler","inputHandler","email","password","logginError","componentDidMount","authenticated","history","method","headers","body","JSON","stringify","err","setItem","render","onSubmit","action","BASE_URL","functions","fetchAll","response","fetchById","fetchByName","create","newCategory","update","require","Categories","fetchMessage","submitMessage","submitMessageType","submitLoading","categoryName","categoryAction","selectedRowData","submitHandler","changeHandler","categoriesTable","addButton","text","attr","e","datatable","node","config","$","val","editButton","extend","row","selected","categoriesRequests","DataTable","columns","title","dom","buttons","select","toString","edit","rows","rowData","error","setTimeout","tabindex","aria-labelledby","aria-hidden","data-dismiss","aria-label","htmlFor","required","role","clients","client","newClient","Clients","cedula","phoneNumber","clientAction","optionChangeHandler","clientTable","customSelectRef","clientRequests","console","log","order","selectedOption","actionType","selectedClient","jsZip","window","JSZip","ResourceTable","recordsTable","modal","sourceURL","newSourceURL","ajax","url","load","$recordsTable","_this","asyncTable","initComplete","api","every","column","dataSrc","header","append","on","splittedDataSrc","split","parameter","forEach","charAt","toUpperCase","slice","trim","footerCallback","totalDollars","reduce","b","pageTotalDollars","footer","html","Intl","NumberFormat","currency","format","totalBs","pageTotalBs","messageTop","customize","win","find","css","exportOptions","modifier","setModalAction","setSelectedRowData","confirm","status","reload","catch","discountId","discount","serverSide","results","count","productId","grossTotalBs","grossTotalDollars","dolarReference","netIncomeDollars","profitPercent","netIncomeBs","d","start","xhr","code","paging","lengthMenu","pageLength","columnDefs","ordering","sorting","tr","closest","child","isShown","hide","removeClass","childFormat","show","addClass","addEventListener","children","focus","tabIndex","modalStructure","Products","selectedCategories","productImageFile","success","modalAction","discountPercent","discountStartDate","discountEndDate","discountSubmitHandler","CustomSelectRef","productForm","closeButton","label","selectedOptions","files","categoriesID","alert","formData","FormData","reset","click","percent","startDate","endDate","roundToNiceNumber","Math","ceil","meta","disc","step","CustomSelect","isMulti","innerRef","min","Sales","childRowInfo","saleProducts","saleProduct","quantity","defaultContent","Suppliers","rif","inputChangeHandler","draw","Supplyings","supplier","supplierChangeHandler","productChangeHandler","supplierSelect","productSelect","supplyingForm","supplierId","Users","permissions","form","Navigation","logout","removeItem","activeNavLink","href","data-toggle","data-target","aria-controls","aria-expanded","to","Inventory","moment","Reports","resource","parameters","reportForm","resourceTable","dateRangeFromValue","dateRangeToValue","greaterThanDate","lowerThanDate","equalDate","previousParameters","Date","subtract","prop","changeSourceURL","salesColumns","supplyingsColumns","defaultChecked","debts","debt","newDebt","Debt","debtType","debtTotal","debtAction","debtTable","total","debtsRequests","clientId","cancelled","class","PrivateRoute","component","rest","pathname","from","location","Dashboard","formattedDolareReference","newDolarReference","fetchDolarReference","dolarReferenceSubmitHandler","closeEditDolarModalButton","path","SalesControl","initialState","activeCategoryId","categoryId","rootReducer","combineReducers","reducers","store","createStore","App","exact","Boolean","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message","options","inputValue","callback","item","image","bufferBase64","Buffer","loadOptions","defaultOptions","autoFocus","inputId","isClearable","module","exports","loadProducts","setLoading","loadCategories","setActiveCategoryId","setActiveCategoryName","selectedProduct","addedProducts","subtotalDollars","subtotalBs","stockError","productsHandler","onChangeHandler","saleSubmitButton","sendSaleForm","quantityInput","productsTableDiv","productsTable","bodySize","getBoundingClientRect","tableSize","tableMaxHeight","top","maxHeight","ctrlKey","stock","parseInt","productFormatted","priceBs","totalFormattedDollars","totalFormattedBs","productExistsInTable","findIndex","Object","assign","parseFloat","scrollTop","scrollHeight","newProducts","totalToSubtractDollars","totalToSubtractBs","currentTarget","disabled","scope"],"mappings":"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","file":"static/js/main.181241b1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Suggestions extends Component {\r\n\r\n    render() {\r\n        if (this.props.noResults) {\r\n            return (\r\n                <ul className=\"list-group position-absolute w-100\" >\r\n                    <li className=\"list-group-item text-justify\">No se encontraron resultados</li>\r\n                </ul>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <ul className=\"list-group position-absolute w-100 suggestionsBox\" >\r\n                    {this.props.suggestions.map(suggestion => {\r\n                        if (this.props.onlyName) {\r\n                            return <div onClick={this.props.clickHandler} key={suggestion.id} productid={suggestion.id} className=\"text-justify\">\r\n                                <li className=\"list-group-item\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-1\">\r\n                                            <img style={{ maxWidth: \"35px\" }} src={suggestion.imagePath} alt=\"IMG\" />\r\n                                        </div>\r\n                                        <div className=\"col-6 float-left\">\r\n                                            <h5 className=\"font-weight-bold\" id=\"productName\">{suggestion.name}</h5>\r\n                                        </div>\r\n                                    </div>\r\n                                </li>\r\n                            </div>\r\n                        }\r\n                        else {\r\n                            return <li onClick={this.props.clickHandler} key={suggestion.id} className=\"list-group-item text-justify\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12 col-sm-6 col-md-12 col-lg-12 col-xl-6\">\r\n                                        <img className=\"\" style={{ maxWidth: \"35px\" }} src={suggestion.imagePath} alt=\"IMG\" />\r\n                                        <span id=\"productName font-weight-bold\">{suggestion.name}</span>\r\n                                    </div>\r\n                                    <div className=\"col-6 col-sm-4 col-md-6 col-lg-6 col-xl-4\">\r\n                                        <div className=\"input-group \">\r\n                                            <input className=\"form-control text-center\" style={{ minWidth: \"45px\", maxWidth: \"70px\" }} type=\"number\" defaultValue=\"1\" name=\"numberOfItems\" id=\"numberOfItems\" />\r\n                                            <input className=\"bg-dark text-light\" type=\"button\" value=\"Comprar\" />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-6 col-sm-2 col-md-6 col-lg-6 col-xl-2 \">\r\n                                        <span className=\"text-danger\">{`${suggestion.price} Bs.`}</span>\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n                        }\r\n                    })}\r\n                </ul>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Suggestions","import React, { Component } from \"react\";\r\nimport OutsideClickHandler from 'react-outside-click-handler';\r\nimport Suggestions from \"./Suggestions\";\r\nimport debounce from \"lodash.debounce\";\r\n\r\nclass SearchInput extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {\r\n            showSuggestions: false,\r\n            suggestions: [],\r\n            noResults: false\r\n        };\r\n\r\n        this.searchHandler = debounce(this.searchHandler, 500);\r\n        this.headerContainer = React.createRef();\r\n        this.onBlurHandler = this.onBlurHandler.bind(this);\r\n    }\r\n\r\n    searchHandler(event) {\r\n        if (event.target.value.length > 0) {\r\n            fetch(`/api/products?name=${event.target.value}&page=1&limit=10`)\r\n                .then(result => result.json())\r\n                .then(result => {\r\n                    if (result.data.length > 0) {\r\n                        this.setState({\r\n                            showSuggestions: true,\r\n                            suggestions: result.data,\r\n                            noResults: false\r\n                        });\r\n                    }\r\n                    else {\r\n                        this.setState({\r\n                            showSuggestions: true,\r\n                            noResults: true\r\n                        });\r\n                    }\r\n\r\n                });\r\n        }\r\n        else {\r\n            this.setState({\r\n                showSuggestions: false,\r\n                suggestions: []\r\n            })\r\n        }\r\n    }\r\n    onBlurHandler() {\r\n        this.setState({\r\n            showSuggestions: false\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={this.props.parentClassName}>\r\n                <input onChange={event => {\r\n                    event.persist();\r\n                    this.searchHandler(event);\r\n                }} className={this.props.className} type=\"text\" placeholder=\"Buscar Producto\" id=\"searchInput\" />\r\n                <div ref={this.suggestionBox} className=\"\">\r\n                    {this.state.showSuggestions &&\r\n                        <OutsideClickHandler\r\n                            onOutsideClick={this.onBlurHandler}><Suggestions suggestions={this.state.suggestions} noResults={this.state.noResults} clickHandler={this.props.clickHandler} onlyName={this.props.onlyName}></Suggestions>\r\n                        </OutsideClickHandler>}\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchInput;","import React, { Component } from \"react\";\r\nimport SearchInput from \"../globalComponents/SearchInput\";\r\n\r\nclass Header extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.headerContainer = React.createRef();\r\n        this.scrollHandler = this.scrollHandler.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener(\"scroll\", this.scrollHandler);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"scroll\", this.scrollHandler);\r\n    }\r\n\r\n    scrollHandler() {\r\n        if (window.scrollY > 100) {\r\n            this.headerContainer.current.parentElement.style.backgroundColor = \"#3c4055\";\r\n            this.headerContainer.current.parentElement.style.outlineStyle = \"solid\";\r\n            this.headerContainer.current.parentElement.style.outlineWidth = \"2px\";\r\n            //this.headerContainer.current.querySelector(\"#brand-title\").classList.replace(\"text-danger\", \"text-light\")\r\n        }\r\n        else {\r\n            this.headerContainer.current.parentElement.style.backgroundColor = \"white\";\r\n            this.headerContainer.current.parentElement.style.outlineStyle = \"none\";\r\n            //this.headerContainer.current.querySelector(\"#brand-title\").classList.replace(\"text-light\", \"text-danger\")\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div ref={this.headerContainer} className=\"row\">\r\n                <div className=\"col-12 col-lg-5 brand-image-container\">\r\n                    <div className=\"brand-image h-100\" />\r\n                </div>\r\n                <SearchInput parentClassName={\"col-10 col-lg-4 my-auto\"} className={\"form-control\"} />\r\n                <div className=\"col-1 d-flex\">\r\n                    <img className=\"align-items-middle mx-auto\" src=\"/icons/shopping-cart.svg\" alt=\"Shopping Cart\" />\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component } from \"react\";\r\n\r\nclass Navigation extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row mt-3 mt-lg-0\">\r\n                <div className=\"col-12\">\r\n                    <nav className=\"navbar navbar-expand-md navbar-dark bg-dark pl-0 pr-0\">\r\n                        <button className=\"navbar-toggler col-sm-12\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                            <span className=\"navbar-toggler-icon\"></span>\r\n                        </button>\r\n                        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                            <ul className=\"navbar-nav mr-auto container\">\r\n                                <li className=\"nav-item\">\r\n                                    <a className=\"nav-link text-light font-weight-bold\" href=\"#\">HOME</a>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <a className=\"nav-link text-light font-weight-bold\" href=\"#\">PRODUCTOS</a>\r\n                                </li>\r\n\r\n                                <li className=\"nav-item\">\r\n                                    <a className=\"nav-link text-light font-weight-bold\" href=\"#\">SERVICIOS</a>\r\n                                </li>\r\n\r\n                                <li className=\"nav-item\">\r\n                                    <a className=\"nav-link text-light font-weight-bold\" href=\"#\">DESCUENTOS</a>\r\n                                </li>\r\n\r\n                                <li className=\"nav-item\">\r\n                                    <a className=\"nav-link text-light font-weight-bold\" href=\"#\">PROMOCIONES</a>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navigation","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as productActions from \"../actions/productActions\";\r\nimport * as categoriesActions from \"../actions/categoriesActions\";\r\n\r\nclass ProductCategories extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.fetchProducts = this.fetchProducts.bind(this);\r\n        this.categoryHandler = this.categoryHandler.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        fetch(\"/api/categories\")\r\n            .then(categories => categories.json())\r\n            .then(categories => {\r\n                if (categories.data.length > 0) {\r\n                    this.props.dispatch(categoriesActions.loadCategories(categories.data))\r\n                    this.props.dispatch(categoriesActions.setActiveCategoryId(document.querySelector(\".categoryItem, active\").getAttribute(\"categoryId\")))\r\n                    this.props.dispatch(categoriesActions.setActiveCategoryName(document.querySelector(\".categoryItem, active\").innerText));\r\n                }\r\n            });\r\n\r\n    }\r\n\r\n    categoryHandler(event) {\r\n        event.preventDefault();\r\n        if (!event.target.className.includes(\"active\")) {\r\n            event.target.parentElement.querySelector(\".active\").classList.remove(\"active\");\r\n            event.target.classList.add(\"active\");\r\n            this.props.dispatch(categoriesActions.setActiveCategoryId(event.target.getAttribute(\"categoryid\")))\r\n            this.props.dispatch(categoriesActions.setActiveCategoryName(event.target.innerText))\r\n            this.fetchProducts(1, 16, event.target.getAttribute(\"categoryid\"))\r\n        }\r\n    }\r\n\r\n    fetchProducts(page, limit, categories) {\r\n        this.props.dispatch(productActions.setLoading(true));\r\n        fetch(`/api/products?page=${page}&limit=${limit}&categories=${categories}`)\r\n            .then(result => result.json())\r\n            .then(paginatedProducts => {\r\n                this.props.dispatch(productActions.loadProducts(paginatedProducts));\r\n                this.props.dispatch(productActions.setLoading(false));\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"col-xs-6 col-sm-12 col-md-12 p-0 mt-0 mt-md-5 productcategoriesContainer\">\r\n                <div className=\"card rounded-0\">\r\n                    <div className=\"card-header\">\r\n                        <h5 className=\"card-title text-danger font-weight-bold\">Categorias</h5>\r\n                    </div>\r\n                    <div className=\"card-body p-0\">\r\n                        <div className=\"list-group\">\r\n                            {\r\n                                this.props.categories ?\r\n                                    this.props.categories.map((category, index) => {\r\n                                        if (index === 0) {\r\n                                            return <li onClick={this.categoryHandler} categoryid={category.id} key={category.id} className=\"categoryItem list-group-item active btn\">{category.name}</li>\r\n                                        }\r\n                                        else {\r\n                                            return <li onClick={this.categoryHandler} categoryid={category.id} key={category.id} className=\"categoryItem list-group-item btn\">{category.name}</li>\r\n                                        }\r\n                                    })\r\n                                    :\r\n                                    <span>No hay categorias</span>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\nfunction mapStateToProps(state, ownProps) {\r\n    return {\r\n        categories: state.categories.data,\r\n        activeCategory: state.categories.activeCategory\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(ProductCategories);","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass CategoryTitle extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <h3 className=\"float-left text-danger mt-2\">{this.props.activeCategory}</h3>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n    return {\r\n        activeCategory: state.categories.activeCategoryName\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(CategoryTitle);","import React, { Component } from \"react\";\r\nimport ContentLoader from 'react-content-loader'\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../actions/productActions\";\r\nimport CategoryTitle from \"../components/CategoryTitle\";\r\n\r\nclass ProductList extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.observer = new IntersectionObserver(this.loadMoreProductsHandler.bind(this));\r\n        this.elementToObserve = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchProducts(1, 16);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.elementToObserve.current) {\r\n            this.observer.observe(this.elementToObserve.current)\r\n        }\r\n    }\r\n\r\n    fetchProducts(page, limit, categories = 1) {\r\n        this.props.dispatch(actions.setLoading(true));\r\n        fetch(`/api/products?page=${page}&limit=${limit}&categories=${categories}`)\r\n            .then(result => result.json())\r\n            .then(paginatedProducts => {\r\n                paginatedProducts.data = this.props.products.concat(paginatedProducts.data);\r\n                this.props.dispatch(actions.loadProducts(paginatedProducts));\r\n                this.props.dispatch(actions.setLoading(false));\r\n            });\r\n    }\r\n\r\n    loadMoreProductsHandler(entries) {\r\n        if (entries[0].isIntersecting) {\r\n            if (this.props.next) {\r\n                this.fetchProducts(this.props.next.page, this.props.next.limit, this.props.activeCategory)\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.props.products.length > 0) {\r\n            let products = this.props.products.map((product, index) => {\r\n                return (\r\n                    <div className=\"col-6 col-sm-6 col-md-4 col-lg-3 p-0 pr-2 pb-2\" key={index}>\r\n                        <div className=\"card\">\r\n                            <img className=\"card-img-top productImage\" src={product.imagePath} alt=\"Imagen del producto\" />\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title font-weight-bold overflow-hidden text-truncate text-dark\">{product.name}</h5>\r\n                                <h5 className=\"text-danger\">Bs. {product.price}</h5>\r\n                            </div>\r\n                            <div className=\"card-footer\">\r\n                                <div className=\"input-group d-flex justify-content-center\">\r\n                                    <input className=\"form-control text-center\" style={{ maxWidth: \"35%\" }} type=\"number\" defaultValue=\"1\" name=\"numberOfItems\" id=\"numberOfItems\" />\r\n                                    <input className=\"bg-dark text-light\" type=\"button\" value=\"Comprar\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            });\r\n\r\n            if (this.props.next) {\r\n                products.push((\r\n                    <div className=\"col-xs-12 col-sm-6 col-md-4 col-lg-3 p-0 pr-2 pb-2\" key=\"contentLoader\" ref={this.elementToObserve}>\r\n                        <ContentLoader\r\n                            speed={1}\r\n                            viewBox=\"0 0 200 400\"\r\n                            backgroundColor=\"#f3f3f3\"\r\n                            foregroundColor=\"#ecebeb\"\r\n                        >\r\n                            <rect x=\"0\" y=\"6\" rx=\"0\" ry=\"0\" width=\"239\" height=\"250\" />\r\n                            <rect x=\"0\" y=\"292\" rx=\"0\" ry=\"0\" width=\"239\" height=\"15\" />\r\n                            <rect x=\"59\" y=\"291\" rx=\"0\" ry=\"0\" width=\"2\" height=\"0\" />\r\n                            <rect x=\"0\" y=\"313\" rx=\"0\" ry=\"0\" width=\"239\" height=\"15\" />\r\n                            <rect x=\"0\" y=\"361\" rx=\"0\" ry=\"0\" width=\"239\" height=\"36\" />\r\n                        </ContentLoader >\r\n                    </div>\r\n                ))\r\n            }\r\n            products.unshift(<div className=\"col-12\">\r\n                <CategoryTitle />\r\n            </div>)\r\n            return products\r\n        }\r\n        else if (this.props.loading) {\r\n            return <p>Loading</p>\r\n        }\r\n        else {\r\n            return <p>No hay productos</p>\r\n        }\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n    return {\r\n        products: state.products.data,\r\n        next: state.products.next,\r\n        previous: state.products.previous,\r\n        loading: state.products.loading,\r\n        activeCategory: state.categories.activeCategory\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ProductList);","import React, { Component } from \"react\";\r\n\r\nclass BackToTopButton extends Component {\r\n    constructor() {\r\n        super()\r\n        this.backToTopButton = React.createRef();\r\n\r\n        this.state = {\r\n            show: false\r\n        }\r\n\r\n        this.scrollHandler = this.scrollHandler.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener(\"scroll\", this.scrollHandler)\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener('scroll', this.scrollHandler);\r\n    }\r\n    scrollHandler() {\r\n        if (window.scrollY > 100) {\r\n            this.setState({\r\n                show: true\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                show: false\r\n            });\r\n        }\r\n    }\r\n\r\n    clickHandler() {\r\n        window.scrollTo(0, 0);\r\n    }\r\n    render() {\r\n        return this.state.show && <button ref={this.backToTopButton} onClick={this.clickHandler} id=\"back-to-top\" className=\"btn btn-secondary btn-lg back-to-top\">Back to Top</button>\r\n    }\r\n}\r\n\r\nexport default BackToTopButton","async function isAuthenticated() {\r\n    let token = localStorage.getItem(\"jwt\");\r\n    if (!token) return false;\r\n    return fetch(`/sessions/isAuthenticated?token=${token}`)\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            return res.auth;\r\n        });\r\n}\r\n\r\nexport default isAuthenticated","import React, { Component } from \"react\";\r\nimport isAuthenticated from \"../requests/isAuthenticated\"\r\nclass Login extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.onSubmitHandler = this.onSubmitHandler.bind(this);\r\n        this.inputHandler = this.inputHandler.bind(this);\r\n\r\n        this.state = {\r\n            email: null,\r\n            password: null,\r\n            logginError: null\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        isAuthenticated().then(authenticated => {\r\n            if (authenticated) {\r\n                this.props.history.push(\"/\")\r\n            }\r\n        })\r\n    }\r\n    onSubmitHandler(event) {\r\n        event.preventDefault();\r\n        this.setState({\r\n            logginError: null\r\n        })\r\n        fetch(\"/sessions\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                email: this.state.email,\r\n                password: this.state.password\r\n            })\r\n        }).then(result => result.json())\r\n            .then(result => {\r\n                if (result.err) {\r\n                    this.setState({\r\n                        logginError: result.err\r\n                    })\r\n                }\r\n                else {\r\n                    localStorage.setItem(\"jwt\", result.token);\r\n                    this.props.history.push(\"/\");\r\n                }\r\n            });\r\n    }\r\n\r\n    inputHandler(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row h-100\">\r\n                    <div className=\"col-10 col-md-5 my-auto mx-auto\">\r\n                        <form onSubmit={this.onSubmitHandler} className=\"col-12\" action=\"/sessions\" method=\"POST\">\r\n                            <div className=\"form-group\">\r\n                                <input onChange={this.inputHandler} type=\"text\" className=\"form-control\" name=\"email\" id=\"email\" placeholder=\"Email\" />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input onChange={this.inputHandler} type=\"password\" className=\"form-control\" name=\"password\" id=\"password\" placeholder=\"Password\" />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <button className=\"btn btn-primary\" type=\"submit\">Enviar</button>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <p className=\"text-danger\">{this.state.logginError}</p>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Login;","const BASE_URL = \"/api/categories\";\r\n\r\nconst functions = {\r\n    fetchAll: async function () {\r\n        let categories = await fetch(BASE_URL, {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        })\r\n\r\n        let response = await categories.json();\r\n\r\n        return response;\r\n    },\r\n    fetchById: async function (id) {\r\n        let category = await fetch(BASE_URL + `?id=${id}`, {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        })\r\n\r\n        let response = await category.json();\r\n\r\n        return response;\r\n    },\r\n    fetchByName: async function (name) {\r\n        let categories = await fetch(BASE_URL + `?name=${name}`, {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        })\r\n\r\n        let response = await categories.json();\r\n\r\n        return response;\r\n    },\r\n    create: async function (category) {\r\n        let newCategory = await fetch(BASE_URL, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(category)\r\n        })\r\n\r\n        let response = await newCategory.json();\r\n\r\n        return response;\r\n    },\r\n    update: async function (category) {\r\n        let newCategory = await fetch(BASE_URL + `/${category.id}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify()\r\n        })\r\n\r\n        let response = await newCategory.json();\r\n\r\n        return response;\r\n    }\r\n}\r\n\r\nexport default functions","import React, { Component } from \"react\";\r\nimport categoriesRequests from \"../requests/categories\";\r\n\r\nimport $ from \"jquery\";\r\nrequire(\"datatables.net\")\r\nclass Categories extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            fetchMessage: null,\r\n            submitMessage: null,\r\n            submitMessageType: null,\r\n            submitLoading: false,\r\n            categoryName: null,\r\n            categoryAction: null,\r\n            selectedRowData: null\r\n        }\r\n        this.submitHandler = this.submitHandler.bind(this);\r\n        this.changeHandler = this.changeHandler.bind(this);\r\n\r\n        this.categoriesTable = React.createRef();\r\n\r\n        this.addButton = {\r\n            text: 'Add',\r\n            name: 'add',\r\n            className: \"btn btn-success\",\r\n            attr: {\r\n                \"data-toggle\": \"modal\",\r\n                \"data-target\": \"#categoryModal\"\r\n            },\r\n            action: (e, datatable, node, config) => {\r\n                $(\".modal-title\").text(\"Add new category\");\r\n                $(\"#categoryName\").val(\"\");\r\n                this.setState({\r\n                    categoryAction: \"Add\"\r\n                })\r\n            }\r\n        }\r\n\r\n        this.editButton = {\r\n            text: 'Edit',\r\n            name: 'edit',\r\n            className: \"btn btn-secondary\",\r\n            extend: \"selected\",\r\n            attr: {\r\n                \"data-toggle\": \"modal\",\r\n                \"data-target\": \"#categoryModal\"\r\n            },\r\n            action: (e, datatable, node, config) => {\r\n                let selectedRowData = datatable.row({ selected: true }).data();\r\n                $(\".modal-title\").text(\"Edit category\");\r\n                $(\"#categoryName\").val(selectedRowData.name);\r\n                this.setState({\r\n                    categoryAction: \"Edit\",\r\n                    selectedRowData\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let response = await categoriesRequests.fetchAll();\r\n        if (response.data) {\r\n            $(this.categoriesTable.current).DataTable({\r\n                data: response.data,\r\n                columns: [\r\n                    { title: \"ID\", data: \"id\" },\r\n                    { title: \"Nombre\", data: \"name\" },\r\n                    { title: \"Fecha creación\", data: \"createdAt\" }\r\n                ],\r\n                dom: \"Blftip\",\r\n                buttons: [this.addButton, this.editButton],\r\n                select: \"single\",\r\n\r\n            })\r\n        }\r\n        else { //error\r\n            this.setState({\r\n                fetchMessage: response.toString()\r\n            })\r\n        }\r\n    }\r\n\r\n    changeHandler(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    submitHandler(event) {\r\n        event.preventDefault();\r\n\r\n        var response = null;\r\n\r\n        this.setState({\r\n            submitLoading: true\r\n        }, async () => {\r\n            if (this.state.categoryAction == \"Add\") {\r\n                response = await categoriesRequests.create({\r\n                    name: this.state.categoryName\r\n                });\r\n\r\n\r\n            }\r\n            else if (this.state.categoryAction == \"Edit\") {\r\n                response = await categoriesRequests.edit({\r\n                    id: this.state.selectedRowData.id,\r\n                    name: this.state.categoryName\r\n                });\r\n\r\n\r\n                let rowData = $(this.categoriesTable.current).DataTable().rows().data();\r\n                rowData.map((row, index) => {\r\n                    if (row.id == this.state.selectedRowData.id) {\r\n                        let row = $(this.categoriesTable.current).DataTable().row(index);\r\n                        let rowData = row.data();\r\n                        row.data({\r\n                            ...rowData,\r\n                            name: this.state.categoryName\r\n                        })\r\n                    }\r\n                })\r\n\r\n            }\r\n\r\n            if (response.error) {\r\n                this.setState({\r\n                    submitMessage: response.error,\r\n                    submitMessageType: \"Error\",\r\n                    submitLoading: false\r\n                })\r\n            }\r\n            else {\r\n                this.setState({\r\n                    submitMessage: \"Se ha registrado con éxito\",\r\n                    submitMessageType: \"Success\",\r\n                    submitLoading: false\r\n                })\r\n                setTimeout(() => {\r\n                    this.setState({\r\n                        submitMessage: null,\r\n                        submitMessageType: null\r\n                    })\r\n                }, 3000);\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.fetchMessage && <span className=\"text-danger\">{this.state.fetchMessage}</span>}\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1 className=\"text-danger float-left\">Categorías</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-3\">\r\n                    <div className=\"col-md-12\">\r\n                        <table ref={this.categoriesTable} id=\"categoriesTable\" name=\"categoriesTable\" className=\"table table-bordered\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal fade\" id=\"categoryModal\" tabindex=\"-1\" aria-labelledby=\"categoryModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog modal-dialog-centered\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"categoryModalLabel\">Add new category</h5>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                    <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n                            <form onSubmit={this.submitHandler}>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"name\">Category Name: </label>\r\n                                        <input onChange={this.changeHandler} className=\"form-control\" type=\"text\" name=\"categoryName\" id=\"categoryName\" required />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Cerrar</button>\r\n                                    <button type=\"submit\" className=\"btn btn-primary\">\r\n                                        {this.state.submitLoading && <span className=\"spinner-border spinner-border-sm mr-2\" role=\"status\" aria-hidden=\"true\" />}\r\n                                        Enviar</button>\r\n                                </div>\r\n                                {this.state.submitMessage && <span className={(this.state.submitMessageType == \"Error\") ? \"text-danger\" : \"text-success\"}>{this.state.submitMessage}</span>}\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\nexport default Categories;","const BASE_URL = \"/api/clients\";\r\n\r\nconst functions = {\r\n    fetchAll: async function () {\r\n        let clients = await fetch(BASE_URL, {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        })\r\n\r\n        let response = await clients.json();\r\n\r\n        return response;\r\n    },\r\n    fetchById: async function (id) {\r\n        let client = await fetch(BASE_URL + `?id=${id}`, {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        })\r\n\r\n        let response = await client.json();\r\n\r\n        return response;\r\n    },\r\n    fetchByName: async function (name) {\r\n        let clients = await fetch(BASE_URL + `?name=${name}`, {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        })\r\n\r\n        let response = await clients.json();\r\n\r\n        return response;\r\n    },\r\n    create: async function (client) {\r\n        let newClient = await fetch(BASE_URL, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(client)\r\n        })\r\n\r\n        let response = await newClient.json();\r\n\r\n        return response;\r\n    },\r\n    update: async function (client) {\r\n        let response = await fetch(BASE_URL + `/${client.id}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(client)\r\n        })\r\n\r\n        let clients = await response.json();\r\n\r\n        return clients;\r\n    }\r\n}\r\n\r\nexport default functions","import React, { Component } from \"react\";\r\nimport clientRequests from \"../requests/clients\";\r\nimport $ from \"jquery\";\r\n\r\nrequire(\"datatables.net\")\r\nclass Clients extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            fetchMessage: null,\r\n            submitMessage: null,\r\n            submitMessageType: null,\r\n            submitLoading: false,\r\n            name: null,\r\n            cedula: null,\r\n            phoneNumber: null,\r\n            selectedRowData: null,\r\n            clientAction: null\r\n\r\n        }\r\n        this.submitHandler = this.submitHandler.bind(this);\r\n        this.changeHandler = this.changeHandler.bind(this);\r\n        this.optionChangeHandler = this.optionChangeHandler.bind(this);\r\n\r\n        this.clientTable = React.createRef();\r\n        this.customSelectRef = React.createRef();\r\n\r\n        this.addButton = {\r\n            text: 'Add',\r\n            name: 'add',\r\n            className: \"btn btn-success\",\r\n            attr: {\r\n                \"data-toggle\": \"modal\",\r\n                \"data-target\": \"#clientModal\"\r\n            },\r\n            action: (e, datatable, node, config) => {\r\n                $(\".modal-title\").text(\"Add new client\");\r\n                $(\"#name\").val(\"\");\r\n                $(\"#cedula\").val(\"\");\r\n                $(\"#phoneNumber\").val(\"\");\r\n                this.setState({\r\n                    clientAction: \"Add\"\r\n                })\r\n            }\r\n        }\r\n\r\n        this.editButton = {\r\n            text: 'Edit',\r\n            name: 'edit',\r\n            className: \"btn btn-secondary\",\r\n            extend: \"selected\",\r\n            attr: {\r\n                \"data-toggle\": \"modal\",\r\n                \"data-target\": \"#clientModal\"\r\n            },\r\n            action: (e, datatable, node, config) => {\r\n                let selectedRowData = datatable.row({ selected: true }).data();\r\n                $(\".modal-title\").text(\"Edit client\");\r\n                $(\"#name\").val(selectedRowData.name);\r\n                $(\"#cedula\").val(selectedRowData.cedula);\r\n                $(\"#phoneNumber\").val(selectedRowData.phoneNumber);\r\n                this.setState({\r\n                    clientAction: \"Edit\",\r\n                    selectedRowData,\r\n                    name: selectedRowData.name,\r\n                    cedula: selectedRowData.cedula,\r\n                    phoneNumber: selectedRowData.phoneNumber\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let response = await clientRequests.fetchAll();\r\n        if (response.data) {\r\n            console.log(response.data);\r\n            $(this.clientTable.current).DataTable({\r\n                data: response.data,\r\n                columns: [\r\n                    { title: \"ID\", data: \"id\" },\r\n                    { title: \"Nombre\", data: \"name\" },\r\n                    { title: \"Cédula\", data: \"cedula\" },\r\n                    { title: \"Teléfono\", data: \"phoneNumber\" },\r\n                    { title: \"Fecha creación\", data: \"createdAt\" }\r\n                ],\r\n                dom: \"Blftip\",\r\n                buttons: [this.addButton, this.editButton],\r\n                select: \"single\",\r\n                order: [0, \"DESC\"]\r\n            })\r\n        }\r\n        else { //error\r\n            this.setState({\r\n                fetchMessage: response.toString()\r\n            })\r\n        }\r\n    }\r\n\r\n    changeHandler(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    optionChangeHandler(selectedOption, actionType) {\r\n        this.setState({\r\n            selectedClient: selectedOption\r\n        })\r\n    }\r\n\r\n    submitHandler(event) {\r\n        event.preventDefault();\r\n\r\n        var response = null;\r\n\r\n        this.setState({\r\n            submitLoading: true\r\n        }, async () => {\r\n            if (this.state.clientAction == \"Add\") {\r\n                response = await clientRequests.create({\r\n                    name: this.state.name,\r\n                    cedula: this.state.cedula,\r\n                    phoneNumber: this.state.phoneNumber\r\n                });\r\n            }\r\n            else if (this.state.clientAction == \"Edit\") {\r\n                console.log(this.state);\r\n                response = await clientRequests.update({\r\n                    id: this.state.selectedRowData.id,\r\n                    name: this.state.name,\r\n                    cedula: this.state.cedula,\r\n                    phoneNumber: this.state.phoneNumber\r\n                });\r\n                let rowData = $(this.clientTable.current).DataTable().rows().data();\r\n                rowData.map((row, index) => {\r\n                    if (row.id == this.state.selectedRowData.id) {\r\n                        let row = $(this.clientTable.current).DataTable().row(index);\r\n                        let rowData = row.data();\r\n                        row.data({\r\n                            ...rowData,\r\n                            name: this.state.name,\r\n                            cedula: this.state.cedula,\r\n                            phoneNumber: this.state.phoneNumber\r\n                        })\r\n                    }\r\n                })\r\n\r\n            }\r\n\r\n            if (response && response.error) {\r\n                this.setState({\r\n                    submitMessage: JSON.stringify(response.error),\r\n                    submitMessageType: \"Error\",\r\n                    submitLoading: false\r\n                })\r\n            }\r\n            else {\r\n                this.setState({\r\n                    submitMessage: \"Se ha registrado con éxito\",\r\n                    submitMessageType: \"Success\",\r\n                    submitLoading: false\r\n                })\r\n                setTimeout(() => {\r\n                    this.setState({\r\n                        submitMessage: null,\r\n                        submitMessageType: null\r\n                    })\r\n                }, 3000);\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.fetchMessage && <span className=\"text-danger\">{this.state.fetchMessage}</span>}\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1 className=\"text-danger float-left\">Clientes</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-3\">\r\n                    <div className=\"col-md-12\">\r\n                        <table ref={this.clientTable} id=\"clientTable\" name=\"clientTable\" className=\"table table-bordered\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal fade\" id=\"clientModal\" tabindex=\"-1\" aria-labelledby=\"clientModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog modal-dialog-centered\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"clientModalLabel\">Add new client</h5>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                    <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n                            <form onSubmit={this.submitHandler}>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>Nombre: </label>\r\n                                        <input onChange={this.changeHandler} type=\"text\" className=\"form-control\" name=\"name\" id=\"name\" required />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Cédula: </label>\r\n                                        <input onChange={this.changeHandler} type=\"text\" className=\"form-control\" name=\"cedula\" id=\"cedula\" required />\r\n                                    </div>\r\n                                    <label htmlFor=\"debtTotal\">Teléfono: </label>\r\n                                    <input onChange={this.changeHandler} type=\"text\" className=\"form-control\" name=\"phoneNumber\" id=\"phoneNumber\" />\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Cerrar</button>\r\n                                    <button type=\"submit\" className=\"btn btn-primary\">\r\n                                        {this.state.submitLoading && <span className=\"spinner-border spinner-border-sm mr-2\" role=\"status\" aria-hidden=\"true\" />}\r\n                                        Enviar</button>\r\n                                </div>\r\n                                {this.state.submitMessage && <span className={(this.state.submitMessageType == \"Error\") ? \"text-danger\" : \"text-success\"}>{this.state.submitMessage}</span>}\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\nexport default Clients;","import React, { Component } from \"react\";\r\nimport debounce from \"lodash.debounce\";\r\n\r\n\r\nconst $ = require('jquery');\r\nconst DataTable = require('datatables.net');\r\nconst jsZip = require('jszip');\r\nrequire('pdfmake');\r\nrequire('datatables.net-buttons-dt');\r\nrequire('datatables.net-buttons/js/buttons.html5.js');\r\nrequire('datatables.net-buttons/js/buttons.print.js');\r\nrequire('datatables.net-buttons/js/buttons.colVis.js');\r\nrequire('datatables.net-select-dt');\r\nwindow.JSZip = jsZip;\r\n\r\nclass ResourceTable extends Component {\r\n\r\n    constructor(props) {\r\n        super();\r\n\r\n        this.recordsTable = React.createRef();\r\n        this.modal = React.createRef();\r\n\r\n        this.state = {\r\n            selectedRowData: null,\r\n            sourceURL: props.sourceURL\r\n        }\r\n\r\n    }\r\n\r\n    changeSourceURL(newSourceURL) {\r\n        let recordsTable = this.recordsTable.current;\r\n        let $recordsTable = $(recordsTable);\r\n\r\n        $recordsTable.DataTable().ajax.url(newSourceURL).load();\r\n    }\r\n\r\n    componentDidMount() {\r\n        let recordsTable = this.recordsTable.current;\r\n        let $recordsTable = $(recordsTable);\r\n        var _this = this;\r\n        if (this.props.asyncTable) {\r\n            $recordsTable = $recordsTable.DataTable({\r\n                initComplete: function () {\r\n                    this.api().columns().every(function () {\r\n                        var column = this;\r\n                        if (column.dataSrc() == \"createdAt\" || column.dataSrc() == \"updatedAt\") {\r\n                            $(this.header()).append(\"<br><input class='p-0 m-0 h-100' type='date' />\");\r\n                        }\r\n                        else {\r\n                            $(this.header()).append(\"<br><input class='p-0 m-0 h-100' type='text' placeholder='Filtrar'/>\");\r\n                        }\r\n                        $('input', this.header()).on(\"keyup change\", function () {\r\n                            let splittedDataSrc = column.dataSrc().split(\".\");\r\n                            let parameter = \"\";\r\n                            splittedDataSrc.forEach((split, index) => {\r\n                                if (index == 0) {\r\n                                    parameter = splittedDataSrc[0];\r\n                                }\r\n                                else {\r\n                                    parameter += splittedDataSrc[index].charAt(0).toUpperCase() + splittedDataSrc[index].slice(1);\r\n                                }\r\n                            });\r\n                            if (_this.props.sourceURL.includes(\"?\")) {\r\n                                $recordsTable.ajax.url(`${_this.props.sourceURL}&${parameter}=${this.value.trim()}`).load();\r\n                            }\r\n                            else {\r\n                                $recordsTable.ajax.url(`${_this.props.sourceURL}?${parameter}=${this.value.trim()}`).load();\r\n\r\n                            }\r\n                        });\r\n\r\n                    });\r\n                },\r\n                footerCallback: function (row, data) {\r\n                    var api = this.api();\r\n                    api.columns().every(function () {\r\n                        var column = this;\r\n                        if (column.dataSrc() == \"grossTotalDollars\") {\r\n                            let totalDollars = api\r\n                                .column(3)\r\n                                .data()\r\n                                .reduce(function (a, b) {\r\n                                    return a + b\r\n                                }, 0);\r\n                            let pageTotalDollars = api\r\n                                .column(3, { page: 'current' })\r\n                                .data()\r\n                                .reduce(function (a, b) {\r\n                                    return a + b\r\n                                }, 0);\r\n\r\n                            if (totalDollars) {\r\n                                $(column.footer()).html(\r\n                                    `${Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(pageTotalDollars)} <br>\r\n                                            <span class=\"text-danger\">(${Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(totalDollars)} Total)</span>`\r\n                                );\r\n                            }\r\n                            else {\r\n                                $(column.footer()).html(\"\");\r\n                            }\r\n\r\n                        }\r\n                        if (column.dataSrc() == \"grossTotalBs\") {\r\n                            let totalBs = api\r\n                                .column(4)\r\n                                .data()\r\n                                .reduce(function (a, b) {\r\n                                    return a + b\r\n                                }, 0);\r\n\r\n                            let pageTotalBs = api\r\n                                .column(4, { page: 'current' })\r\n                                .data()\r\n                                .reduce(function (a, b) {\r\n                                    return a + b\r\n                                }, 0);\r\n                            if (pageTotalBs) {\r\n                                $(column.footer()).html(\r\n                                    `${Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(pageTotalBs)} <br>\r\n                                        <span class=\"text-danger\">(${Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(totalBs)} Total)</span>`\r\n                                );\r\n                            } else {\r\n                                $(column.footer()).html(\"\");\r\n                            }\r\n                        }\r\n                        if (column.dataSrc() == \"netIncomeDollars\") {\r\n                            let totalDollars = api\r\n                                .column(5)\r\n                                .data()\r\n                                .reduce(function (a, b) {\r\n                                    return a + b\r\n                                }, 0);\r\n\r\n                            let pageTotalDollars = api\r\n                                .column(5, { page: 'current' })\r\n                                .data()\r\n                                .reduce(function (a, b) {\r\n                                    return a + b\r\n                                }, 0);\r\n                            if (pageTotalDollars) {\r\n                                $(column.footer()).html(\r\n                                    `${Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(pageTotalDollars)} <br>\r\n                                        <span class=\"text-danger\">(${Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(totalDollars)} Total)</span>`\r\n                                );\r\n                            } else {\r\n                                $(column.footer()).html(\"\");\r\n                            }\r\n                        }\r\n                        if (column.dataSrc() == \"netIncomeBs\") {\r\n                            let totalBs = api\r\n                                .column(6)\r\n                                .data()\r\n                                .reduce(function (a, b) {\r\n                                    return a + b\r\n                                }, 0);\r\n\r\n                            let pageTotalBs = api\r\n                                .column(6, { page: 'current' })\r\n                                .data()\r\n                                .reduce(function (a, b) {\r\n                                    return a + b\r\n                                }, 0);\r\n                            if (pageTotalBs) {\r\n                                $(column.footer()).html(\r\n                                    `${Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(pageTotalBs)} <br>\r\n                                        <span class=\"text-danger\">(${Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(totalBs)} Total)</span>`\r\n                                );\r\n                            } else {\r\n                                $(column.footer()).html(\"\");\r\n                            }\r\n                        }\r\n                    })\r\n                },\r\n                dom: 'Brltip',\r\n                select: \"single\",\r\n                buttons: [{\r\n                    text: \"Imprimir\",\r\n                    name: \"imprimir\",\r\n                    className: \"btn btn-secondary float-right\",\r\n                    extend: \"print\",\r\n                    messageTop: \"Lista de precios\",\r\n                    footer: true,\r\n                    title: (_this.props.sourceURL.includes(\"productss\")) ? \"Lista de precios\" : \"\",\r\n                    customize: function (win) {\r\n                        $(win.document.body).find('#messageTop').css('text-align', 'center');\r\n                    },\r\n                    exportOptions: {\r\n                        modifier: {\r\n                            page: 'all'\r\n                        },\r\n                        columns: (_this.props.sourceURL.includes(\"products\")) ? [1, 2, 3] : \":visible\"\r\n                    }\r\n                }].concat(this.props.actions.map(action => {\r\n                    if (action == \"add\") {\r\n                        return {\r\n                            text: 'Add',\r\n                            name: 'add',\r\n                            className: \"btn btn-success\",\r\n                            attr: {\r\n                                \"data-toggle\": \"modal\",\r\n                                \"data-target\": \"#exampleModal\"\r\n                            },\r\n                            action: function () {\r\n                                _this.props.setModalAction(\"add\")\r\n                            }\r\n                        }\r\n                    }\r\n                    if (action == \"edit\") {\r\n                        return {\r\n                            text: 'Edit',\r\n                            name: 'edit',\r\n                            className: \"btn btn-secondary\",\r\n                            extend: \"selected\",\r\n                            attr: {\r\n                                \"data-toggle\": \"modal\",\r\n                                \"data-target\": \"#exampleModal\"\r\n                            },\r\n                            action: (e, datatable, node, config) => {\r\n                                var selectedRowData = datatable.row({ selected: true }).data();\r\n                                _this.props.setSelectedRowData(selectedRowData);\r\n                                _this.props.setModalAction(\"edit\");\r\n                            }\r\n                        };\r\n                    }\r\n                    if (action == \"delete\") {\r\n                        return {\r\n                            text: 'Delete',\r\n                            name: 'delete',\r\n                            className: \"btn btn-danger\",\r\n                            extend: \"selected\",\r\n                            action: function (e, datatable, node, config) {\r\n                                var selectedRowData = datatable.row({ selected: true }).data();\r\n                                var r = window.confirm(\"¿Está seguro que desea eliminar este registro?\");\r\n                                if (r == true) {\r\n                                    fetch(`${_this.props.sourceURL}/${selectedRowData.id}`, {\r\n                                        method: \"DELETE\",\r\n                                        headers: {\r\n                                            \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n                                        }\r\n                                    })\r\n                                        .then(res => {\r\n                                            if (res.status == 204) {\r\n                                                datatable.ajax.reload();\r\n                                            }\r\n                                            else {\r\n                                                res.json().then(error => {\r\n                                                    _this.setState({\r\n                                                        error\r\n                                                    })\r\n                                                })\r\n                                            }\r\n                                        })\r\n                                        .catch(error => {\r\n                                            _this.setState({\r\n                                                error\r\n                                            })\r\n                                        })\r\n                                }\r\n\r\n                            }\r\n                        }\r\n                    }\r\n                    if (action == \"date-range\") {\r\n                        return {\r\n                            text: 'Reload',\r\n                            name: 'reload',\r\n                            className: \"btn btn-primary\",\r\n                            action: function (e, datatable, node, config) {\r\n                                datatable.ajax.url(_this.state.sourceURL).load();\r\n                            }\r\n                        }\r\n                    }\r\n                    if (action == \"discount\") {\r\n                        return [\r\n                            {\r\n                                text: 'Apply Discount',\r\n                                name: 'discountButton',\r\n                                className: \"btn btn-primary\",\r\n                                attr: {\r\n                                    \"data-toggle\": \"modal\",\r\n                                    \"data-target\": \"#discountModal\"\r\n                                },\r\n                                extend: \"selected\",\r\n                                action: function (e, datatable, node, config) {\r\n                                    var selectedRowData = datatable.row({ selected: true }).data();\r\n                                    _this.props.setSelectedRowData(selectedRowData);\r\n                                    _this.props.setModalAction(\"applyDiscount\")\r\n\r\n                                }\r\n\r\n                            },\r\n                            {\r\n                                text: 'Cancel Discount',\r\n                                name: 'cancelDiscountButton',\r\n                                className: \"btn btn-danger\",\r\n                                extend: \"selected\",\r\n                                action: function (e, datatable, node, config) {\r\n                                    let response = window.confirm(\"¿Seguro que desea eliminar el descuento?\");\r\n                                    if (response == true) {\r\n                                        let selectedRowData = datatable.row({ selected: true }).data();\r\n                                        let discountId = selectedRowData.discount[0].id;\r\n                                        fetch(`/api/discounts/${discountId}`, {\r\n                                            headers: {\r\n                                                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n                                            },\r\n                                            method: \"DELETE\"\r\n                                        })\r\n                                            .then(res => {\r\n                                                if (res.status == 204) {\r\n                                                    datatable.ajax.reload();\r\n                                                }\r\n                                            })\r\n                                    }\r\n                                    else {\r\n\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                        ]\r\n                    }\r\n\r\n                })),\r\n                serverSide: true,\r\n                ajax: {\r\n                    url: this.state.sourceURL,\r\n                    dataSrc: function (results) {\r\n                        if (typeof results.count == \"object\") {\r\n                            results.data.forEach((row, index) => {\r\n                                if (row.productId == results.count[index].id) {\r\n                                    row.count = results.count[index].count\r\n                                }\r\n                            })\r\n                        }\r\n\r\n                        if (_this.props.sourceURL.includes(\"/api/sales\") && _this.props.sourceURL.includes(\"group=true\")) {\r\n                            results.data.forEach((row, index) => {\r\n                                row.product = row.product[0];\r\n                                //row.transactions = results.count.reverse()[index].count;\r\n                                row.grossTotalBs = row.grossTotalDollars * row.dolarReference;\r\n\r\n                                row.netIncomeDollars = row.grossTotalDollars * (row.product.profitPercent / 100);\r\n                                row.netIncomeBs = row.netIncomeDollars * row.dolarReference;\r\n                            })\r\n                        }\r\n                        else if (_this.props.sourceURL.includes(\"/api/supplyings\") && _this.props.sourceURL.includes(\"group=true\")) {\r\n                            results.data.forEach((row, index) => {\r\n                                //row.transactions = results.count.reverse()[index].count;\r\n                                row.grossTotalBs = row.grossTotalDollars * row.dolarReference;\r\n                            })\r\n                        }\r\n                        return results.data;\r\n                    },\r\n                    headers: { 'Authorization': `Bearer ${localStorage.getItem(\"jwt\")}` },\r\n                    data: function (d) {\r\n                        if (d.length != -1) {\r\n                            d.page = d.start / d.length + 1;\r\n                            d.limit = d.length;\r\n                        }\r\n                        else {\r\n                            d.page = 1;\r\n                            d.limit = 0;\r\n                        }\r\n\r\n                    },\r\n                    error: function (xhr, error, code) {\r\n                        //alert(code)\r\n                    }\r\n                },\r\n                paging: true,\r\n                lengthMenu: [[10, 25, 50, 100, 1000000000000000], [10, 25, 50, 100, \"All\"]],\r\n                pageLength: (this.props.sourceURL.includes(\"group=true\")) ? 1000000000000000 : 10,\r\n                columns: this.props.columns,\r\n                columnDefs: (this.props.sourceURL.includes(\"products\")) ? [\r\n                    { width: \"30%\", \"targets\": 1 }\r\n                ] : null,\r\n                ordering: false,\r\n                order: _this.props.sorting || [[0, \"desc\"]]\r\n            });\r\n\r\n            if (this.props.actions.includes(\"date-range\")) {\r\n                $(\".dt-buttons\").append(`<div class=\"d-flex justify-content-end\">\r\n                    <label class=\"mr-2\" for=\"dateFrom\">From:</label>\r\n                    <input type=\"date\" id=\"dateFrom\" name=\"dateFrom\">\r\n                    <label class=\"mr-2 ml-2\" for=\"dateTo\">To:</label>\r\n                    <input type=\"date\" id=\"dateTo\" name=\"dateTo\">\r\n                    </div>`)\r\n\r\n                $(\".dt-buttons input[type=date]\").on(\"change\", function () {\r\n                    $recordsTable.ajax.url(`${_this.state.sourceURL}?from=${$(\"#dateFrom\").val()}&to=${$(\"#dateTo\").val()}`).load();\r\n                })\r\n            }\r\n\r\n            $('#resourceTable tbody').on('click', 'td.details-control', function () {\r\n                var tr = $(this).closest('tr');\r\n                var row = $recordsTable.row(tr);\r\n\r\n                if (row.child.isShown()) {\r\n                    // This row is already open - close it\r\n                    row.child.hide();\r\n                    tr.removeClass('shown');\r\n                }\r\n                else {\r\n                    // Open this row\r\n                    row.child(_this.props.childFormat(row.data())).show();\r\n                    tr.addClass('shown');\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            $recordsTable = $recordsTable.DataTable({\r\n                dom: \"\",\r\n                data: this.props.data,\r\n                columns: this.props.columns,\r\n\r\n            });\r\n        }\r\n\r\n\r\n\r\n        this.modal.current.addEventListener(\"focus\", () => {\r\n            this.modal.current.querySelector(\".form-group\").children[0].focus();\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"bg-light table-responsive\">\r\n                <table id=\"resourceTable\" className=\"table table-bordered\" ref={this.recordsTable} >\r\n                    <thead></thead>\r\n                    <tbody></tbody>\r\n                    <tfoot>\r\n                        <tr>\r\n                            {this.props.columns.map((column, index) => {\r\n                                return <td key={index}></td>\r\n                            })}\r\n                        </tr>\r\n                    </tfoot>\r\n                </table>\r\n                {this.state.error && <span className=\"text-danger\">{this.state.error}</span>}\r\n                <div ref={this.modal} className=\"modal\" id=\"exampleModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n                        <div className=\"modal-content\">\r\n                            {this.props.modalStructure}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ResourceTable;","import React, { Component } from \"react\";\r\nimport ResourceTable from \"./ResourceTable\";\r\nimport CustomSelect from \"../globalComponents/CustomSelect\";\r\n\r\n\r\nimport moment from \"moment\";\r\nimport $ from \"jquery\";\r\nconst DataTable = require('datatables.net');\r\n\r\nclass Products extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {\r\n            selectedCategories: null,\r\n            name: null,\r\n            productImageFile: null,\r\n            profitPercent: null,\r\n            success: null,\r\n            error: null,\r\n            modalAction: null,\r\n            discountPercent: null,\r\n            discountStartDate: null,\r\n            discountEndDate: null,\r\n            selectedRowData: null\r\n        }\r\n\r\n        this.submitHandler = this.submitHandler.bind(this);\r\n        this.discountSubmitHandler = this.discountSubmitHandler.bind(this);\r\n        this.optionChangeHandler = this.optionChangeHandler.bind(this);\r\n        this.changeHandler = this.changeHandler.bind(this);\r\n        this.setModalAction = this.setModalAction.bind(this);\r\n        this.setSelectedRowData = this.setSelectedRowData.bind(this);\r\n\r\n        this.CustomSelectRef = React.createRef();\r\n        this.productForm = React.createRef();\r\n        this.closeButton = React.createRef();\r\n    }\r\n\r\n    setModalAction(modalAction) {\r\n        this.setState({\r\n            modalAction\r\n        })\r\n    }\r\n\r\n    setSelectedRowData(selectedRowData) {\r\n        let categories = [];\r\n        selectedRowData.category.forEach(category => {\r\n            categories.push({ id: category.id, label: category.name, value: category.name });\r\n        })\r\n\r\n        this.setState({\r\n            selectedRowData,\r\n            selectedCategories: categories,\r\n            name: selectedRowData.name,\r\n            profitPercent: selectedRowData.profitPercent,\r\n        }, () => {\r\n            $(\"#name\").val(this.state.selectedRowData.name);\r\n            $(\"#profitPercent\").val(this.state.selectedRowData.profitPercent);\r\n        })\r\n    }\r\n\r\n    optionChangeHandler(selectedOptions, actionType) {\r\n        this.setState({\r\n            selectedCategories: selectedOptions\r\n        });\r\n    }\r\n\r\n    changeHandler(event) {\r\n        this.setState({\r\n            [event.target.name]: (event.target.type == \"file\") ? event.target.files[0] : event.target.value\r\n        });\r\n    }\r\n\r\n    submitHandler(event) {\r\n        event.preventDefault();\r\n        var categoriesID = \"\";\r\n        if (this.state.selectedCategories) {\r\n            this.state.selectedCategories.forEach((category, index) => {\r\n                categoriesID += category.id\r\n                if (index != this.state.selectedCategories.length - 1) {\r\n                    categoriesID += \",\"\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            alert(\"Seleccione las categorías\")\r\n        }\r\n\r\n        var formData = new FormData();\r\n\r\n        formData.append(\"productImageFile\", this.state.productImageFile);\r\n        formData.append(\"name\", this.state.name);\r\n        formData.append(\"profitPercent\", this.state.profitPercent);\r\n        formData.append(\"categories\", categoriesID);\r\n\r\n        fetch((this.state.modalAction == \"add\") ? \"/api/products\" : `/api/products/${this.state.selectedRowData.id}`, {\r\n            method: (this.state.modalAction == \"add\") ? \"POST\" : \"PATCH\",\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n                \"Accept\": \"application/json\"\r\n            },\r\n            body: formData\r\n        })\r\n            .then(res => {\r\n                if (res.status == 200) {\r\n                    this.setState({\r\n                        success: \"El producto se ha registrado con exito\",\r\n                        productImageFile: null\r\n                    });\r\n                    this.productForm.current.reset();\r\n                    this.closeButton.current.click();\r\n                    $(\"#resourceTable\").DataTable().ajax.reload(null, false);\r\n                }\r\n                else if (res.status == 409) {\r\n                    res.json().then(response => {\r\n                        this.setState({\r\n                            error: response.error || response.err,\r\n                        })\r\n                    })\r\n\r\n                }\r\n            })\r\n            .catch(error => {\r\n                this.setState({\r\n                    error: error\r\n                })\r\n            })\r\n    }\r\n\r\n    discountSubmitHandler(event) {\r\n        event.preventDefault();\r\n        if (this.state.discountPercent && this.state.discountStartDate && this.state.discountEndDate) {\r\n            fetch(\"/api/discounts\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                    productId: this.state.selectedRowData.id,\r\n                    percent: this.state.discountPercent,\r\n                    startDate: this.state.discountStartDate,\r\n                    endDate: this.state.discountEndDate\r\n                })\r\n            })\r\n                .then(res => {\r\n                    if (res.status == 200) {\r\n                        this.setState({\r\n                            success: \"Se ha registrado con éxito\"\r\n                        })\r\n                    } else {\r\n                        res.json().then(res => {\r\n                            this.setState({\r\n                                error: res.error || res.err\r\n                            })\r\n                        })\r\n                    }\r\n                })\r\n        }\r\n        else {\r\n            alert(\"Rellene todos los campos\")\r\n        }\r\n    }\r\n\r\n    roundToNiceNumber(value) {\r\n        var val = 0;\r\n        if (value.toString().length == 4) {\r\n            val = Math.ceil(value / 100) * 100\r\n        }\r\n        else if (value.toString().length > 4) {\r\n            val = Math.ceil(value / 1000) * 1000\r\n        }\r\n\r\n        return val;\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1 className=\"text-danger float-left\">Productos</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-3\">\r\n                    <div className=\"col-md-12\">\r\n                        <ResourceTable asyncTable={true} setSelectedRowData={this.setSelectedRowData} setModalAction={this.setModalAction} sourceURL={\"/api/products\"} columns={[\r\n                            { title: \"ID\", data: \"id\" },\r\n                            {\r\n                                render: function (data, type, row, meta) {\r\n                                    if (row.imagePath) {\r\n                                        return `<span class=\"p-0\"><img class=\"img-responsive m-0 p-0\" src=\"${row.imagePath}\" style=\"max-width:40px;\"></img>${data}</span>`\r\n                                    }\r\n                                    else {\r\n                                        return data\r\n                                    }\r\n                                },\r\n                                title: \"Nombre\", data: \"name\"\r\n                            },\r\n                            { title: \"Precio $\", data: \"price\" },\r\n                            {\r\n                                render: (data) => {\r\n                                    return Intl.NumberFormat(\"es-Ve\", { style: \"currency\", currency: \"VES\" }).format(this.roundToNiceNumber(data * this.props.dolarReference))\r\n                                }, title: \"Precio Bs\", data: \"price\"\r\n                            },\r\n                            {\r\n                                render: function (data) {\r\n                                    return data + \"%\"\r\n                                }, title: \"Porcentaje de Ganancia\", data: \"profitPercent\"\r\n                            },\r\n                            {\r\n                                render: function (data, type, row, meta) {\r\n                                    let disc = data.map(discount => {\r\n                                        return discount.percent\r\n                                    })\r\n\r\n                                    return (disc.length) ? disc + \"%\" : 0 + \"%\"\r\n                                }, title: \"Descuento\", data: \"discount\"\r\n                            },\r\n                            /*\r\n                            {\r\n                                title: \"Descuento desde\", data: \"discount[0].startDate\"\r\n                            },\r\n                            {\r\n                                title: \"Descuento hasta\", data: \"discount[0].endDate\"\r\n                            },\r\n                            */\r\n                            { title: \"Fecha creación\", data: \"createdAt\" },\r\n                            { title: \"Fecha actualización\", data: \"updatedAt\" }\r\n                        ]} actions={[\"add\", \"edit\", \"delete\", \"discount\"]} modalStructure={\r\n                            <form ref={this.productForm} onSubmit={this.submitHandler} className=\"float-left\">\r\n                                <div className=\"modal-header\">\r\n                                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">New Product</h5>\r\n                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                        <span aria-hidden=\"true\">&times;</span>\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"name\">Product Name: </label>\r\n                                        <input onChange={this.changeHandler} className=\"form-control\" type=\"text\" name=\"name\" id=\"name\" required />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"profitPercent\">Profit Percent: </label>\r\n                                        <div className=\"input-group\">\r\n                                            <div className=\"input-group-prepend\">\r\n                                                <div className=\"input-group-text\">%</div>\r\n                                            </div>\r\n                                            <input onChange={this.changeHandler} className=\"form-control\" type=\"number\" step=\"0.1\" name=\"profitPercent\" id=\"profitPercent\" required />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"productImageFile\">Imagen: </label>\r\n                                        <div className=\"custom-file\">\r\n                                            <input onChange={this.changeHandler} type=\"file\" className=\"custom-file-input\" id=\"productImageFile\" name=\"productImageFile\" />\r\n                                            <label className=\"custom-file-label\" htmlFor=\"image\">Choose file</label>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"price\">Categorías: </label>\r\n                                        <CustomSelect sourceURL=\"/api/categories\"\r\n                                            isMulti={true}\r\n                                            innerRef={this.CustomSelectRef}\r\n                                            changeHandler={this.optionChangeHandler}\r\n                                            value={this.state.selectedCategories}\r\n                                            required />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button ref={this.closeButton} type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Cerrar</button>\r\n                                    <button type=\"submit\" className=\"btn btn-primary\">Enviar</button>\r\n                                </div>\r\n                                {this.state.success && <span className=\"text-success\">{this.state.success}</span>}\r\n                                {this.state.error && <span className=\"text-danger\">{this.state.error}</span>}\r\n                            </form>\r\n                        } />\r\n                        <div id=\"discountModal\" className=\"modal\" tabIndex=\"-1\">\r\n                            <div className=\"modal-dialog\">\r\n                                <div className=\"modal-content\">\r\n                                    <div className=\"modal-header\">\r\n                                        <h5 className=\"modal-title\"></h5>\r\n                                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                            <span aria-hidden=\"true\">&times;</span>\r\n                                        </button>\r\n                                    </div>\r\n                                    <form onSubmit={this.discountSubmitHandler}>\r\n                                        <div className=\"modal-body\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"discountPercent\">Discount Percent: </label>\r\n                                                <div className=\"input-group\">\r\n                                                    <input onChange={this.changeHandler} className=\"form-control\" type=\"number\" step=\"0.01\" min=\"0\" name=\"discountPercent\" id=\"discountPercent\" required />\r\n                                                    <div className=\"input-group-append\">\r\n                                                        <div className=\"input-group-text\">%</div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <label htmlFor=\"discountStartDate\">Start Date:</label>\r\n                                                <div className=\"input-group\">\r\n                                                    <input onChange={this.changeHandler} className=\"form-control\" type=\"date\" name=\"discountStartDate\" id=\"discountStartDate\" required />\r\n                                                </div>\r\n                                                <label htmlFor=\"discountEndDate\">End Date:</label>\r\n                                                <div className=\"input-group\">\r\n                                                    <input onChange={this.changeHandler} className=\"form-control\" type=\"date\" name=\"discountEndDate\" id=\"discountEndDate\" required />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"modal-footer\">\r\n                                            <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Cerrar</button>\r\n                                            <button type=\"submit\" className=\"btn btn-primary\">Enviar</button>\r\n                                        </div>\r\n                                        {this.state.success && <span className=\"text-success\">{this.state.success}</span>}\r\n                                        {this.state.error && <span className=\"text-danger\">{this.state.error}</span>}\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Products;","import React, { Component } from \"react\";\r\n\r\nimport moment from \"moment\";\r\nimport ResourceTable from \"./ResourceTable\";\r\nclass Sales extends Component {\r\n    constructor() {\r\n        super()\r\n        this.submitHandler = this.submitHandler.bind(this);\r\n        this.roundToNiceNumber = this.roundToNiceNumber.bind(this);\r\n        this.childFormat = this.childFormat.bind(this);\r\n    }\r\n\r\n    submitHandler(event) {\r\n        event.preventDefault()\r\n        console.log(\"hola\");\r\n    }\r\n\r\n    roundToNiceNumber(value) {\r\n        var val = 0;\r\n        if (value.toString().length == 4) {\r\n            val = Math.ceil(value / 100) * 100\r\n        }\r\n        else if (value.toString().length > 4) {\r\n            val = Math.ceil(value / 1000) * 1000\r\n        }\r\n\r\n        return val;\r\n    }\r\n\r\n    childFormat(d) {\r\n        let childRowInfo = \"\";\r\n        d.saleProducts.forEach(saleProduct => {\r\n            childRowInfo += `\r\n            <div class='form-row align-items-center'>\r\n                    <div class=\"col-1\">\r\n                        <label for=\"productId\">Product ID</label>\r\n                        <input class=\"form-control\" id=\"productId\" value=\"${saleProduct.productId}\" disabled/>\r\n                    </div>\r\n                    <div class=\"col-4\">\r\n                        <label for=\"productName\">Name</label>\r\n                        <input class=\"form-control\" id=\"productName\" value=\"${saleProduct.product[0].name}\" disabled/>\r\n                    </div>\r\n                    <div class=\"col-1\">\r\n                        <label for=\"productPrice\">Price $</label>\r\n                        <input class=\"form-control\" id=\"productPrice\" value=\"$${saleProduct.price}\" disabled/>\r\n                    </div>\r\n                    <div class=\"col-1\">\r\n                        <label for=\"productPriceBs\">Price Bs</label>\r\n                        <input class=\"form-control\" id=\"productPriceBs\" value=\"Bs.S ${this.roundToNiceNumber(saleProduct.price * saleProduct.dolarReference)}\" disabled/>\r\n                    </div>\r\n                    <div class=\"col-1\">\r\n                        <label for=\"discount\">Discount</label>\r\n                        <input class=\"form-control\" id=\"discount\" value=\"${saleProduct.discount}%\" disabled/>\r\n                    </div>\r\n                    <div class=\"col-1\">\r\n                        <label for=\"productQuantity\">Quantity</label>\r\n                        <input class=\"form-control\" id=\"productQuantity\" value=\"${saleProduct.quantity}\" disabled/>\r\n                    </div>\r\n                    <div class=\"col-2\">\r\n                        <label for=\"dolarValue\">Dolar value</label>\r\n                        <input class=\"form-control\" id=\"dolarValue\" value=\"${Intl.NumberFormat(\"es-VE\", { style: \"currency\", currency: \"VES\" }).format(saleProduct.dolarReference)}\" disabled/>\r\n                    </div>\r\n            </div>\r\n            `\r\n        })\r\n        childRowInfo += \"\"\r\n        return childRowInfo\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1 className=\"text-danger float-left\">Ventas</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-3\">\r\n                    <div className=\"col-md-12\">\r\n                        <ResourceTable asyncTable={true} childFormat={this.childFormat} sourceURL={\"/api/sales\"} columns={[\r\n                            { title: \"ID\", data: \"id\" },\r\n                            {\r\n                                \"title\": \"Productos\",\r\n                                \"className\": 'details-control',\r\n                                \"orderable\": false,\r\n                                \"data\": \"productName\",\r\n                                defaultContent: '<button class=\"btn btn-success\">Ver Productos</button>'\r\n                            },\r\n                            { title: \"Fecha creación\", data: \"createdAt\" }\r\n\r\n                        ]} actions={[\"edit\", \"delete\"]} />\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Sales;","import React, { Component } from \"react\";\r\nimport moment from \"moment\";\r\nimport ResourceTable from \"./ResourceTable\";\r\n\r\nimport $ from \"jquery\";\r\nimport DataTable from \"datatables.net\";\r\nclass Suppliers extends Component {\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {\r\n            name: null,\r\n            rif: null,\r\n            success: null,\r\n            error: null\r\n        }\r\n        this.submitHandler = this.submitHandler.bind(this);\r\n        this.inputChangeHandler = this.inputChangeHandler.bind(this);\r\n        this.setModalAction = this.setModalAction.bind(this);\r\n\r\n    }\r\n\r\n    setModalAction(modalAction) {\r\n        this.setState({\r\n            modalAction\r\n        })\r\n    }\r\n\r\n    submitHandler(event) {\r\n        event.preventDefault();\r\n        if (this.state.name && this.state.rif) {\r\n            fetch(\"/api/suppliers\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                    name: this.state.name,\r\n                    rif: this.state.rif\r\n                })\r\n            })\r\n                .then(res => {\r\n                    if (res.status == 200) {\r\n                        this.setState({\r\n                            success: \"Se ha registrado de forma exitosa.\"\r\n                        });\r\n                        $(\"#resourceTable\").DataTable().draw();\r\n                    }\r\n                    else {\r\n                        res.text().then(error => {\r\n                            this.setState({\r\n                                error\r\n                            })\r\n                        })\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n    inputChangeHandler(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1 className=\"text-danger float-left\">Proveedores</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-3\">\r\n                    <div className=\"col-md-12\">\r\n                        <ResourceTable asyncTable={true} setModalAction={this.setModalAction} sourceURL={\"/api/suppliers\"} columns={[\r\n                            { title: \"ID\", data: \"id\" },\r\n                            { title: \"Nombre\", data: \"name\" },\r\n                            { title: \"RIF\", data: \"rif\" },\r\n                            { title: \"Fecha creación\", data: \"createdAt\" }\r\n\r\n                        ]} actions={[\"add\", \"edit\", \"delete\"]} modalStructure={\r\n                            <form onSubmit={this.submitHandler} className=\"float-left\">\r\n                                <div className=\"modal-header\">\r\n                                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">New Supplier</h5>\r\n                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                        <span aria-hidden=\"true\">&times;</span>\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"name\">Supplier Name: </label>\r\n                                        <input onChange={this.inputChangeHandler} className=\"form-control\" type=\"text\" name=\"name\" id=\"name\" required />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"rif\">RIF: </label>\r\n                                        <input onChange={this.inputChangeHandler} className=\"form-control\" type=\"text\" name=\"rif\" id=\"rif\" required />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Cerrar</button>\r\n                                    <button type=\"submit\" className=\"btn btn-primary\">Enviar</button>\r\n                                </div>\r\n                                {this.state.success && <span className=\"text-success\">{this.state.success}</span>}\r\n                                {this.state.error && <span className=\"text-danger\">{this.state.error}</span>}\r\n                            </form>\r\n                        } />\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Suppliers;","import React, { Component } from \"react\";\r\nimport moment from \"moment\";\r\nimport ResourceTable from \"./ResourceTable\";\r\nimport CustomSelect from \"../globalComponents/CustomSelect\";\r\n\r\nimport $ from \"jquery\";\r\nconst DataTable = require('datatables.net');\r\n\r\nclass Supplyings extends Component {\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {\r\n            supplier: null,\r\n            product: null,\r\n            price: null,\r\n            quantity: null,\r\n            success: null,\r\n            error: null\r\n        }\r\n        this.submitHandler = this.submitHandler.bind(this);\r\n        this.supplierChangeHandler = this.supplierChangeHandler.bind(this);\r\n        this.productChangeHandler = this.productChangeHandler.bind(this);\r\n        this.inputChangeHandler = this.inputChangeHandler.bind(this);\r\n        this.setModalAction = this.setModalAction.bind(this);\r\n\r\n        this.supplierSelect = React.createRef();\r\n        this.productSelect = React.createRef();\r\n        this.supplyingForm = React.createRef();\r\n\r\n    }\r\n\r\n    setModalAction(modalAction) {\r\n        this.setState({\r\n            modalAction\r\n        })\r\n    }\r\n\r\n    supplierChangeHandler(selectedOption) {\r\n        this.setState({\r\n            supplier: selectedOption\r\n        });\r\n    }\r\n\r\n    productChangeHandler(selectedOption) {\r\n        this.setState({\r\n            product: selectedOption\r\n        });\r\n    }\r\n\r\n    inputChangeHandler(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n    submitHandler(event) {\r\n        event.preventDefault();\r\n        if (this.state.supplier && this.state.product && this.state.price && this.state.quantity) {\r\n            fetch(\"/api/supplyings\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                    supplierId: this.state.supplier.id,\r\n                    productId: this.state.product.id,\r\n                    price: this.state.price,\r\n                    quantity: this.state.quantity,\r\n                    dolarReference: this.props.dolarReference\r\n                })\r\n            }).then(res => {\r\n                if (res.status == 200) {\r\n                    this.setState({\r\n                        success: \"Se ha registrado el abastecimiento con éxito\"\r\n                    })\r\n                    this.supplyingForm.current.reset();\r\n                    $(\"#resourceTable\").DataTable().draw();\r\n                }\r\n                else {\r\n                    res.text().then(error => {\r\n                        this.setState({\r\n                            error\r\n                        })\r\n                    })\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            alert(\"Por favor rellene todos los campos\")\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1 className=\"text-danger float-left\">Abastecimiento</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-3\">\r\n                    <div className=\"col-md-12\">\r\n                        <ResourceTable asyncTable={true} setModalAction={this.setModalAction} sourceURL={\"/api/supplyings\"} columns={[\r\n                            { title: \"ID\", data: \"id\" },\r\n                            { title: \"ID Proveedor\", data: \"supplierId\" },\r\n                            { title: \"Nombre Proveedor\", data: \"supplier.name\" },\r\n                            { title: \"ID Product\", data: \"productId\" },\r\n                            { title: \"Nombre Producto\", data: \"product.name\" },\r\n                            {\r\n                                render: function (data) {\r\n                                    return \"$\" + data\r\n                                }, title: \"Precio de Compra\", data: \"price\"\r\n                            },\r\n                            {\r\n                                render: function (data) {\r\n                                    return (data > 1) ? data + \" Unidades\" : data + \" Unidad\"\r\n                                }, title: \"Cantidad\", data: \"quantity\"\r\n                            },\r\n                            { title: \"Fecha creación\", data: \"createdAt\" },\r\n                            { title: \"Fecha actualización\", data: \"updatedAt\" }\r\n\r\n                        ]} actions={[\"add\", \"edit\", \"delete\"]} modalStructure={\r\n                            <form ref={this.supplyingForm} onSubmit={this.submitHandler} className=\"float-left\">\r\n                                <div className=\"modal-header\">\r\n                                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">New Supplying</h5>\r\n                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                        <span aria-hidden=\"true\">&times;</span>\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"supplierId\">Supplier ID: </label>\r\n                                        <CustomSelect sourceURL=\"/api/suppliers\"\r\n                                            isMulti={false}\r\n                                            innerRef={this.supplierSelect}\r\n                                            changeHandler={this.supplierChangeHandler} required />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"productId\">Product ID: </label>\r\n                                        <CustomSelect\r\n                                            isMulti={false}\r\n                                            innerRef={this.productSelect}\r\n                                            changeHandler={this.productChangeHandler} required />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"price\">Price: </label>\r\n                                        <input onChange={this.inputChangeHandler} className=\"form-control\" type=\"number\" step=\"0.00000000000000001\" name=\"price\" id=\"price\" required />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"quantity\">Quantity: </label>\r\n                                        <input onChange={this.inputChangeHandler} className=\"form-control\" type=\"number\" step=\"0.1\" name=\"quantity\" id=\"quantity\" required />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Cerrar</button>\r\n                                    <button type=\"submit\" className=\"btn btn-primary\">Enviar</button>\r\n                                </div>\r\n                                {this.state.success && <span className=\"text-success\">{this.state.success}</span>}\r\n                                {this.state.error && <span className=\"text-danger\">{this.state.error}</span>}\r\n                            </form>\r\n                        } />\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Supplyings;","import React, { Component } from \"react\";\r\nimport moment from \"moment\";\r\nimport ResourceTable from \"./ResourceTable\";\r\n\r\nimport $ from \"jquery\";\r\nimport DataTable from \"datatables.net\";\r\n\r\nclass Users extends Component {\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {\r\n            email: null,\r\n            password: null,\r\n            permissions: null,\r\n            success: null,\r\n            error: null\r\n        }\r\n\r\n        this.submitHandler = this.submitHandler.bind(this);\r\n\r\n        this.inputChangeHandler = this.inputChangeHandler.bind(this);\r\n\r\n        this.form = React.createRef();\r\n    }\r\n\r\n    submitHandler(event) {\r\n        event.preventDefault();\r\n\r\n        if (this.state.email && this.state.password && this.state.permissions) {\r\n\r\n            fetch(\"/api/users\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                    email: this.state.email,\r\n                    password: this.state.password,\r\n                    permissions: this.state.permissions\r\n                })\r\n            }).then(res => {\r\n                if (res.status == 200) {\r\n                    this.setState({\r\n                        success: \"Se ha registrado con éxito\"\r\n                    });\r\n                    this.form.current.reset();\r\n                    $(\"resourceTable\").DataTable().draw();\r\n                }\r\n                else {\r\n                    res.text().then(error => {\r\n                        this.setState({\r\n                            error\r\n                        })\r\n                    })\r\n                }\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    inputChangeHandler(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1 className=\"text-danger float-left\">Usuarios</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-3\">\r\n                    <div className=\"col-md-12\">\r\n                        <ResourceTable asyncTable={true} sourceURL={\"/api/users\"} columns={[\r\n                            { title: \"ID\", data: \"id\" },\r\n                            { title: \"Email\", data: \"email\" },\r\n                            { title: \"Permisos\", data: \"permissions\" },\r\n                            { title: \"Fecha creación\", data: \"createdAt\" }\r\n\r\n                        ]} actions={[\"add\", \"delete\"]} modalStructure={\r\n                            <form ref={this.form} onSubmit={this.submitHandler} className=\"float-left\">\r\n                                <div className=\"modal-header\">\r\n                                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">New Supplier</h5>\r\n                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                        <span aria-hidden=\"true\">&times;</span>\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"email\">Email: </label>\r\n                                        <input onChange={this.inputChangeHandler} className=\"form-control\" type=\"text\" name=\"email\" id=\"email\" required />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"password\">Password: </label>\r\n                                        <input onChange={this.inputChangeHandler} className=\"form-control\" type=\"password\" name=\"password\" id=\"password\" required />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"permissions\">Permissions: </label>\r\n                                        <input onChange={this.inputChangeHandler} className=\"form-control\" type=\"text\" name=\"permissions\" id=\"permissions\" required />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Cerrar</button>\r\n                                    <button type=\"submit\" className=\"btn btn-primary\">Enviar</button>\r\n                                </div>\r\n                                {this.state.success && <span className=\"text-success\">{this.state.success}</span>}\r\n                                {this.state.error && <span className=\"text-danger\">{this.state.error}</span>}\r\n                            </form>\r\n                        } />\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Users;","import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nclass Navigation extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.clickHandler = this.clickHandler.bind(this);\r\n        this.logout = this.logout.bind(this);\r\n    }\r\n\r\n    logout() {\r\n        localStorage.removeItem(\"jwt\");\r\n    }\r\n\r\n    clickHandler(event) {\r\n        this.setState({\r\n            activeNavLink: event.target.innerText\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark flex-lg-column flex-xl-row\">\r\n                <a className=\"navbar-brand text-danger\" href=\"/\">Supermercado Melquisedec</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n\r\n                <div className=\"collapse navbar-collapse row p-0 m-0\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav flex-lg-row mx-auto container-fluid p-0 m-0\">\r\n                        <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\r\n                            <NavLink className=\"nav-link\" onClick={this.clickHandler} to=\"/control-de-ventas\"><span className=\"d-md-inline\">Control de Ventas</span></NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\r\n                            <NavLink className=\"nav-link\" onClick={this.clickHandler} to=\"/inventario\"><span className=\"d-md-inline\">Inventario</span></NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\r\n                            <NavLink className=\"nav-link\" onClick={this.clickHandler} to=\"/reportes\"><span className=\"d-md-inline\">Reportes</span></NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\r\n                            <NavLink className=\"nav-link\" onClick={this.clickHandler} to=\"/deuda\"><span className=\"d-md-inline\">Deuda</span></NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\r\n                            <NavLink className=\"nav-link\" onClick={this.clickHandler} to=\"/categorias\"><span className=\"d-md-inline\">Categorías</span></NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\r\n                            <NavLink className=\"nav-link\" onClick={this.clickHandler} to=\"/clientes\"><span className=\"d-md-inline\">Clientes</span></NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\r\n                            <NavLink className=\"nav-link\" onClick={this.clickHandler} to=\"/productos\"><span className=\"d-md-inline\">Productos</span></NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\r\n                            <NavLink className=\"nav-link\" onClick={this.clickHandler} to=\"/ventas\"><span className=\"d-md-inline\">Ventas</span></NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\r\n                            <NavLink className=\"nav-link\" onClick={this.clickHandler} to=\"/abastecimiento\"><span className=\"d-md-inline\">Abastecimiento</span></NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\r\n                            <NavLink className=\"nav-link\" onClick={this.clickHandler} to=\"/proveedores\"><span className=\"d-md-inline\">Proveedores</span></NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\r\n                            <NavLink className=\"nav-link\" onClick={this.clickHandler} to=\"/usuarios\"><span className=\"d-md-inline\">Usuarios</span></NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\r\n                            <NavLink className=\"nav-link btn btn-danger px-0\" onClick={this.logout} to=\"/signin\">Cerrar Sesión</NavLink>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navigation;","import React, { Component } from \"react\";\r\n\r\nimport ResourceTable from \"./ResourceTable\";\r\n\r\nclass Inventory extends Component {\r\n\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1 className=\"text-danger float-left\">Inventario</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-3\">\r\n                    <div className=\"col-md-12\">\r\n                        <ResourceTable asyncTable={true} sourceURL={\"/api/inventory\"} columns={[\r\n                            { title: \"Product ID\", data: \"id\" },\r\n                            { title: \"Nombre Producto\", data: \"name\" },\r\n                            {\r\n                                title: \"Inventario\", data: \"stock\", render: function (data, type, row) {\r\n                                    if (data <= 0) {\r\n                                        return `<span class=\"text-danger\">${data}</span>`\r\n                                    }\r\n                                    return `<span class=\"text-success\">${data}</span>`\r\n                                }\r\n                            },\r\n                            { title: \"Total productos vendidos\", data: \"salesTotal\" },\r\n                            { title: \"Total productos comprados\", data: \"supplyingsTotal\" }\r\n                        ]} actions={[]} />\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Inventory;","import React, { Component } from \"react\"\r\nimport ResourceTable from \"./ResourceTable\";\r\n\r\nconst moment = require(\"moment\");\r\n\r\nconst $ = require(\"jquery\");\r\nconst DataTable = require(\"datatables.net\");\r\n\r\nclass Reports extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            resource: \"sales\",\r\n            parameters: \"\"\r\n        }\r\n\r\n        this.submitHandler = this.submitHandler.bind(this);\r\n        this.changeHandler = this.changeHandler.bind(this);\r\n\r\n        this.reportForm = React.createRef();\r\n        this.resourceTable = React.createRef();\r\n    }\r\n\r\n    changeHandler(event) {\r\n        let dateRangeFromValue = document.body.querySelector(\"#rangeDateFrom\").value;\r\n        let dateRangeToValue = document.body.querySelector(\"#rangeDateTo\").value;\r\n        let greaterThanDate = document.body.querySelector(\"#greaterThanDate\").value;\r\n        let lowerThanDate = document.body.querySelector(\"#lowerThanDate\").value;\r\n        let equalDate = document.body.querySelector(\"#equalDate\").value;\r\n\r\n        var previousParameters = this.state.parameters;\r\n        var parameters = \"\";\r\n        if (event.target.name == \"dateRadios\") {\r\n            $(\"form\").find(\"input[type=date]\").val(\"\");\r\n            switch (event.target.id) {\r\n                case \"today\":\r\n                    parameters = `from=${moment(new Date()).format(\"YYYY-MM-DD\")}&to=${moment(new Date()).format(\"YYYY-MM-DD\")}`\r\n                    break;\r\n                case \"yesterday\":\r\n                    parameters = `from=${moment(new Date()).subtract(1, \"days\").format(\"YYYY-MM-DD\")}&to=${moment(new Date()).subtract(1, \"days\").format(\"YYYY-MM-DD\")}`\r\n                    break;\r\n                case \"lastWeek\":\r\n                    parameters = `from=${moment(new Date()).subtract(7, \"days\").format(\"YYYY-MM-DD\")}&to=${moment(new Date()).format(\"YYYY-MM-DD\")}`\r\n                    break;\r\n                case \"fortnight\":\r\n                    parameters = `from=${moment(new Date()).subtract(15, \"days\").format(\"YYYY-MM-DD\")}&to=${moment(new Date()).format(\"YYYY-MM-DD\")}`\r\n                    break;\r\n                case \"month\":\r\n                    parameters = `from=${moment(new Date()).subtract(1, \"months\").format(\"YYYY-MM-DD\")}&to=${moment(new Date()).format(\"YYYY-MM-DD\")}`\r\n                    break;\r\n                case \"quarter\":\r\n                    parameters = `from=${moment(new Date()).subtract(3, \"months\").format(\"YYYY-MM-DD\")}&to=${moment(new Date()).format(\"YYYY-MM-DD\")}`\r\n                    break;\r\n                case \"semester\":\r\n                    parameters = `from=${moment(new Date()).subtract(6, \"months\").format(\"YYYY-MM-DD\")}&to=${moment(new Date()).format(\"YYYY-MM-DD\")}`\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            parameters += \"&group=true\"\r\n        }\r\n        else if (event.target.name == \"reportType\") {\r\n            this.setState({\r\n                resource: event.target.id,\r\n                parameters: \"\"\r\n            }, function () {\r\n                this.setState({\r\n                    parameters: previousParameters\r\n                })\r\n            });\r\n            return;\r\n        }\r\n        else {\r\n            $(\"form\").find(\"input[name=dateRadios]\").prop(\"checked\", false);\r\n            $(\"form\").find(\"input[type=date]\").val(\"\");\r\n            switch (event.target.id) {\r\n                case \"greaterThanDate\":\r\n                    parameters = `createdAt=${greaterThanDate}&operation=gte`\r\n                    event.target.value = greaterThanDate;\r\n                    break;\r\n                case \"lowerThanDate\":\r\n                    parameters = `createdAt=${lowerThanDate}&operation=lte`\r\n                    event.target.value = lowerThanDate;\r\n                    break;\r\n                case \"equalDate\":\r\n                    parameters = `createdAt=${equalDate}&operation=eq`\r\n                    event.target.value = equalDate;\r\n                    break;\r\n                case \"rangeDateFrom\":\r\n                    if (dateRangeToValue) {\r\n                        parameters = `from=${moment(dateRangeFromValue || \"\").format(\"YYYY-MM-DD\")}&to=${dateRangeToValue}`\r\n                    }\r\n                    else {\r\n                        parameters = `from=${moment(dateRangeFromValue || \"\").format(\"YYYY-MM-DD\")}`\r\n                    }\r\n                    event.target.value = dateRangeFromValue;\r\n                    $(\"#rangeDateTo\").val(dateRangeToValue);\r\n                    break;\r\n                case \"rangeDateTo\":\r\n                    if (dateRangeFromValue) {\r\n                        parameters = `from=${dateRangeFromValue}&to=${moment(dateRangeToValue || \"\").format(\"YYYY-MM-DD\")}`\r\n                    }\r\n                    else {\r\n                        parameters = `to=${moment(dateRangeToValue || \"\").format(\"YYYY-MM-DD\")}`\r\n                    }\r\n                    event.target.value = dateRangeToValue;\r\n                    $(\"#rangeDateFrom\").val(dateRangeFromValue);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            parameters += \"&group=true\"\r\n        }\r\n        this.setState({\r\n            parameters\r\n        });\r\n    }\r\n    componentDidUpdate() {\r\n        if (this.resourceTable.current) {\r\n            this.resourceTable.current.changeSourceURL(`/api/${this.state.resource}?${this.state.parameters}`);\r\n        }\r\n    }\r\n    submitHandler(event) {\r\n        event.preventDefault();\r\n        this.reportForm.current.reset();\r\n    }\r\n    render() {\r\n        var salesColumns = [\r\n            /*\r\n            {\r\n                render: function (data, type, row, meta) {\r\n                    return `<img src=\"${row.product.imagePath}\" style=\"max-width:35px;\"/>`\r\n                },\r\n                title: \"Imagen\", data: \"product.imagePath\"\r\n            },\r\n            */\r\n            { title: \"Product ID\", data: \"product.id\" },\r\n            { title: \"Nombre\", data: \"product.name\" },\r\n            //{ title: \"Transacciones\", data: \"transactions\" },\r\n            { title: \"Cantidad de productos\", data: \"salesTotal\" },\r\n            {\r\n                render: function (data, type, row, meta) {\r\n                    return Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(row.grossTotalDollars)\r\n                }, title: (this.state.resource == \"sales\") ? \"Ganancia bruta $\" : \"Costo bruto $\", data: \"grossTotalDollars\"\r\n            },\r\n            {\r\n                render: function (data, type, row, meta) {\r\n                    return Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(row.grossTotalBs)\r\n                }, title: (this.state.resource == \"sales\") ? \"Ganancia bruta Bs\" : \"Costo bruto Bs\", data: \"grossTotalBs\"\r\n            },\r\n            {\r\n                render: function (data, type, row, meta) {\r\n                    return Intl.NumberFormat('en-US', {\r\n                        style: 'currency',\r\n                        currency: 'USD',\r\n                    }).format(row.netIncomeDollars)\r\n                }, title: (this.state.resource == \"sales\") ? \"Ganancia Neta $\" : \"Ganancia neta $\", data: \"netIncomeDollars\"\r\n            },\r\n            {\r\n                render: function (data, type, row, meta) {\r\n                    return Intl.NumberFormat('es-VE', {\r\n                        style: 'currency',\r\n                        currency: 'VES',\r\n                    }).format(row.netIncomeBs)\r\n                }, title: (this.state.resource == \"sales\") ? \"Ganancia Neta Bs\" : \"Ganancia Neta Bs\", data: \"netIncomeBs\"\r\n            }\r\n        ];\r\n\r\n        var supplyingsColumns = [\r\n            /*\r\n            {\r\n                render: function (data, type, row, meta) {\r\n                    return `<img src=\"${row.product.imagePath}\" style=\"max-width:35px;\"/>`\r\n                },\r\n                title: \"Imagen\", data: \"product.imagePath\"\r\n            },\r\n            */\r\n            { title: \"Product ID\", data: \"product.id\" },\r\n            { title: \"Nombre\", data: \"product.name\" },\r\n            //{ title: \"Transacciones\", data: \"transactions\" },\r\n            { title: \"Cantidad de productos\", data: \"quantity\" },\r\n            {\r\n                render: function (data, type, row, meta) {\r\n                    return Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(row.grossTotalDollars)\r\n                }, title: (this.state.resource == \"sales\") ? \"Ganancia bruta $\" : \"Costo bruto $\", data: \"grossTotalDollars\"\r\n            },\r\n            {\r\n                render: function (data, type, row, meta) {\r\n                    return Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(row.grossTotalBs)\r\n                }, title: (this.state.resource == \"sales\") ? \"Ganancia bruta Bs\" : \"Costo bruto Bs\", data: \"grossTotalBs\"\r\n            }\r\n        ];\r\n\r\n        return (\r\n            <div className=\"\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1 className=\"text-danger float-left\">Reportes</h1>\r\n                    </div>\r\n                </div>\r\n                <hr />\r\n                <form ref={this.reportForm} onSubmit={this.submitHandler}>\r\n                    <div className=\"col-12\">\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <h3 className=\"mr-4\">Tipo de reporte:</h3>\r\n                        </div>\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input onChange={this.changeHandler} className=\"form-check-input\" type=\"radio\" name=\"reportType\" id=\"supplyings\" value=\"supplyingRadio\" />\r\n                            <label className=\"form-check-label\" htmlFor=\"supplyingRadio\">Compra</label>\r\n                        </div>\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input onChange={this.changeHandler} className=\"form-check-input\" type=\"radio\" name=\"reportType\" id=\"sales\" value=\"saleRadio\" defaultChecked />\r\n                            <label className=\"form-check-label\" htmlFor=\"saleRadio\">Venta</label>\r\n                        </div>\r\n                    </div>\r\n                    <hr className=\"col-12 p-0\" />\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 col-lg-2\">\r\n                            <h5 className=\"mr-4\">Rango de fechas:</h5>\r\n                            <div className=\"form-group\">\r\n                                <input onChange={this.changeHandler} type=\"date\" name=\"rangeDateFrom\" id=\"rangeDateFrom\" />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input onChange={this.changeHandler} type=\"date\" name=\"rangeDateTo\" id=\"rangeDateTo\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12 col-lg-4\">\r\n                            <div className=\"form-check form-check-inline\">\r\n                                <label className=\"btn btn-secondary\" htmlFor=\"semester\" name=\"labelDateRadios\">\r\n                                    <input onChange={this.changeHandler} className=\"form-check-input\" type=\"radio\" name=\"dateRadios\" id=\"semester\" />\r\n                                    6 meses\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"form-check form-check-inline\">\r\n                                <label className=\"btn btn-secondary\" htmlFor=\"quarter\" name=\"labelDateRadios\">\r\n                                    <input onChange={this.changeHandler} className=\"form-check-input\" type=\"radio\" name=\"dateRadios\" id=\"quarter\" />\r\n                                3 meses\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"form-check form-check-inline\">\r\n                                <label className=\"btn btn-secondary\" htmlFor=\"month\" name=\"labelDateRadios\">\r\n                                    <input onChange={this.changeHandler} className=\"form-check-input\" type=\"radio\" name=\"dateRadios\" id=\"month\" />\r\n                                1 mes\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"form-check form-check-inline\">\r\n                                <label className=\"btn btn-secondary\" htmlFor=\"fortnight\" name=\"labelDateRadios\">\r\n                                    <input onChange={this.changeHandler} className=\"form-check-input\" type=\"radio\" name=\"dateRadios\" id=\"fortnight\" />\r\n                                15 días\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"form-check form-check-inline\">\r\n                                <label className=\"btn btn-secondary\" htmlFor=\"lastWeek\" name=\"labelDateRadios\">\r\n                                    <input onChange={this.changeHandler} className=\"form-check-input\" type=\"radio\" name=\"dateRadios\" id=\"lastWeek\" />\r\n                                Útima semana\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"form-check form-check-inline\">\r\n                                <label className=\"btn btn-secondary\" htmlFor=\"yesterday\" name=\"labelDateRadios\">\r\n                                    <input onChange={this.changeHandler} className=\"form-check-input\" type=\"radio\" name=\"dateRadios\" id=\"yesterday\" />\r\n                                Ayer\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"form-check form-check-inline\">\r\n                                <label className=\"btn btn-secondary\" htmlFor=\"today\" name=\"labelDateRadios\">\r\n                                    <input onChange={this.changeHandler} className=\"form-check-input\" type=\"radio\" name=\"dateRadios\" id=\"today\" />\r\n                                Hoy\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12 col-lg-2\">\r\n                            <div className=\"\">\r\n                                <h5 className=\"\">Fecha mayor o igual a:</h5>\r\n                                <input onChange={this.changeHandler} type=\"date\" name=\"greaterThanDate\" id=\"greaterThanDate\" />\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className=\"col-12 col-lg-2\">\r\n                            <div className=\"\">\r\n                                <h5 className=\"\">Fecha menor o igual a:</h5>\r\n                                <input onChange={this.changeHandler} type=\"date\" name=\"lowerThanDate\" id=\"lowerThanDate\" />\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className=\"col-12 col-lg-2\">\r\n                            <div className=\"\">\r\n                                <h5 className=\"\">Fecha igual a:</h5>\r\n                                <input onChange={this.changeHandler} type=\"date\" name=\"equalDate\" id=\"equalDate\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <hr />\r\n                </form>\r\n\r\n                <div className=\"row mt-3\">\r\n                    <div className=\"col-md-12\">\r\n                        {this.state.parameters != \"\" && <ResourceTable ref={this.resourceTable} asyncTable={true} sourceURL={`/api/${this.state.resource}?${this.state.parameters}`} columns={\r\n                            (this.state.resource == \"sales\") ? salesColumns : supplyingsColumns\r\n                        } actions={[]} dolarReference={this.props.dolarReference} />}\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Reports;","const BASE_URL = \"/api/debts\";\r\n\r\nconst functions = {\r\n    fetchAll: async function () {\r\n        let debts = await fetch(BASE_URL, {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        })\r\n\r\n        let response = await debts.json();\r\n\r\n        return response;\r\n    },\r\n    fetchById: async function (id) {\r\n        let debt = await fetch(BASE_URL + `?id=${id}`, {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        })\r\n\r\n        let response = await debt.json();\r\n\r\n        return response;\r\n    },\r\n    fetchByName: async function (name) {\r\n        let debts = await fetch(BASE_URL + `?name=${name}`, {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        })\r\n\r\n        let response = await debts.json();\r\n\r\n        return response;\r\n    },\r\n    create: async function (debt) {\r\n        let newDebt = await fetch(BASE_URL, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(debt)\r\n        })\r\n\r\n        let response = await newDebt.json();\r\n\r\n        return response;\r\n    },\r\n    update: async function (debt) {\r\n        let newDebt = await fetch(BASE_URL + `/${debt.id}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(debt)\r\n        })\r\n\r\n        let response = await newDebt.json();\r\n\r\n        return response;\r\n    }\r\n}\r\n\r\nexport default functions","import React, { Component } from \"react\";\r\nimport debtsRequests from \"../requests/debts\";\r\nimport CustomSelect from \"../globalComponents/CustomSelect\";\r\nimport $ from \"jquery\";\r\nrequire(\"datatables.net\")\r\nclass Debt extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            fetchMessage: null,\r\n            submitMessage: null,\r\n            submitMessageType: null,\r\n            submitLoading: false,\r\n            debtType: 0,\r\n            debtTotal: null,\r\n            debtAction: null,\r\n            selectedRowData: null,\r\n            selectedClient: null\r\n        }\r\n        this.submitHandler = this.submitHandler.bind(this);\r\n        this.changeHandler = this.changeHandler.bind(this);\r\n        this.optionChangeHandler = this.optionChangeHandler.bind(this);\r\n\r\n        this.debtTable = React.createRef();\r\n\r\n        this.addButton = {\r\n            text: 'Add',\r\n            name: 'add',\r\n            className: \"btn btn-success\",\r\n            attr: {\r\n                \"data-toggle\": \"modal\",\r\n                \"data-target\": \"#debtModal\"\r\n            },\r\n            action: (e, datatable, node, config) => {\r\n                $(\".modal-title\").text(\"Add new debt\");\r\n                $(\"#debtTotal\").val(\"\");\r\n                this.setState({\r\n                    debtAction: \"Add\",\r\n                    selectedClient: null\r\n                })\r\n            }\r\n        }\r\n\r\n        this.editButton = {\r\n            text: 'Edit',\r\n            name: 'edit',\r\n            className: \"btn btn-secondary\",\r\n            extend: \"selected\",\r\n            attr: {\r\n                \"data-toggle\": \"modal\",\r\n                \"data-target\": \"#debtModal\"\r\n            },\r\n            action: (e, datatable, node, config) => {\r\n                let selectedRowData = datatable.row({ selected: true }).data();\r\n                $(\".modal-title\").text(\"Edit debt\");\r\n                $(\"#debtTotal\").val(selectedRowData.total);\r\n\r\n                this.setState({\r\n                    debtAction: \"Edit\",\r\n                    selectedRowData,\r\n                    selectedClient: {\r\n                        label: selectedRowData.client.name,\r\n                        value: selectedRowData.client\r\n                    },\r\n                    debtType: selectedRowData.type,\r\n                    debtTotal: selectedRowData.total\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let response = await debtsRequests.fetchAll();\r\n        if (response.data) {\r\n            $(this.debtTable.current).DataTable({\r\n                data: response.data,\r\n                columns: [\r\n                    { title: \"ID\", data: \"id\" },\r\n                    { title: \"Client ID\", data: \"client.id\" },\r\n                    { title: \"Nombre\", data: \"client.name\" },\r\n                    { title: \"Cédula\", data: \"client.cedula\" },\r\n                    { title: \"Teléfono\", data: \"client.phoneNumber\" },\r\n                    {\r\n                        render: function (data) {\r\n                            return (data == 0) ? \"Deuda\" : \"Credito\"\r\n                        }, title: \"Tipo\", data: \"type\"\r\n                    },\r\n                    {\r\n                        render: function (data) {\r\n                            return Intl.NumberFormat(\"es-VE\", { style: \"currency\", currency: \"VES\" }).format(data)\r\n                        }, title: \"Total\", data: \"total\"\r\n                    },\r\n                    {\r\n                        render: function (data) {\r\n                            return (data == 0) ? `<span class=\"text-danger\">SIN PAGAR</span>` : `<span class=\"text-success\">PAGADO</span>`\r\n                        }, title: \"Estado\", data: \"cancelled\"\r\n                    },\r\n                    { title: \"Fecha creación\", data: \"createdAt\" },\r\n                    { title: \"Fecha actualización\", data: \"updatedAt\" }\r\n                ],\r\n                dom: \"Blftip\",\r\n                buttons: [this.addButton, this.editButton],\r\n                select: \"single\",\r\n                order: [0, \"DESC\"]\r\n            })\r\n        }\r\n        else { //error\r\n            this.setState({\r\n                fetchMessage: response.toString()\r\n            })\r\n        }\r\n    }\r\n\r\n    changeHandler(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    optionChangeHandler(selectedOption, actionType) {\r\n        this.setState({\r\n            selectedClient: selectedOption\r\n        })\r\n    }\r\n\r\n    submitHandler(event) {\r\n        event.preventDefault();\r\n\r\n        var response = null;\r\n        this.setState({\r\n            submitLoading: true\r\n        }, async () => {\r\n            if (this.state.debtAction == \"Add\") {\r\n                response = await debtsRequests.create({\r\n                    clientId: this.state.selectedRowData.client.id,\r\n                    type: this.state.debtType,\r\n                    total: this.state.debtTotal\r\n                });\r\n            }\r\n            else if (this.state.debtAction == \"Edit\") {\r\n                response = await debtsRequests.update({\r\n                    id: this.state.selectedRowData.id,\r\n                    clientId: this.state.selectedRowData.clientId,\r\n                    type: this.state.debtType,\r\n                    total: this.state.debtTotal,\r\n                    cancelled: this.state.selectedRowData.cancelled\r\n                });\r\n                let rowData = $(this.debtTable.current).DataTable().rows().data();\r\n                rowData.map((row, index) => {\r\n                    if (row.id == this.state.selectedRowData.id) {\r\n                        let row = $(this.debtTable.current).DataTable().row(index);\r\n                        let rowData = row.data();\r\n                        row.data({\r\n                            ...rowData,\r\n                            type: this.state.debtType,\r\n                            total: this.state.debtTotal\r\n                        })\r\n                    }\r\n                })\r\n\r\n            }\r\n\r\n            if (response.error) {\r\n                this.setState({\r\n                    submitMessage: response.error,\r\n                    submitMessageType: \"Error\",\r\n                    submitLoading: false\r\n                })\r\n            }\r\n            else {\r\n                this.setState({\r\n                    submitMessage: \"Se ha registrado con éxito\",\r\n                    submitMessageType: \"Success\",\r\n                    submitLoading: false\r\n                })\r\n                setTimeout(() => {\r\n                    this.setState({\r\n                        submitMessage: null,\r\n                        submitMessageType: null\r\n                    })\r\n                }, 3000);\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.fetchMessage && <span className=\"text-danger\">{this.state.fetchMessage}</span>}\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1 className=\"text-danger float-left\">Deuda</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-3\">\r\n                    <div className=\"col-md-12\">\r\n                        <table ref={this.debtTable} id=\"debtTable\" name=\"debtTable\" className=\"table table-bordered\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal fade\" id=\"debtModal\" tabindex=\"-1\" aria-labelledby=\"debtModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog modal-dialog-centered\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"debtModalLabel\">Add new debt</h5>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                    <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n                            <form onSubmit={this.submitHandler}>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>Client: </label>\r\n                                        <CustomSelect\r\n                                            sourceURL=\"/api/clients\"\r\n                                            value={this.state.selectedClient}\r\n                                            changeHandler={this.optionChangeHandler} />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Type: </label>\r\n                                        <select onChange={this.changeHandler} className=\"form-control\" name=\"debtType\" id=\"debtType\">\r\n                                            <option value=\"0\">DEUDA</option>\r\n                                            <option value=\"1\">CREDITO</option>\r\n                                        </select>\r\n                                    </div>\r\n                                    <label htmlFor=\"debtTotal\">Total: </label>\r\n                                    <div className=\"input-group\">\r\n                                        <div class=\"input-group-prepend\">\r\n                                            <div class=\"input-group-text\">Bs</div>\r\n                                        </div>\r\n                                        <input onChange={this.changeHandler} className=\"form-control\" type=\"number\" step=\"0.01\" name=\"debtTotal\" id=\"debtTotal\" />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Cerrar</button>\r\n                                    <button type=\"submit\" className=\"btn btn-primary\">\r\n                                        {this.state.submitLoading && <span className=\"spinner-border spinner-border-sm mr-2\" role=\"status\" aria-hidden=\"true\" />}\r\n                                        Enviar</button>\r\n                                </div>\r\n                                {this.state.submitMessage && <span className={(this.state.submitMessageType == \"Error\") ? \"text-danger\" : \"text-success\"}>{this.state.submitMessage}</span>}\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\nexport default Debt;","import React, { Component } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport isAuthenticated from \"../requests/isAuthenticated\";\r\n\r\nclass PrivateRoute extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            loading: true,\r\n            isAuthenticated: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        isAuthenticated().then(isAuthenticated => {\r\n            this.setState({\r\n                loading: false,\r\n                isAuthenticated\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { component: Component, ...rest } = this.props\r\n        return (\r\n            <Route\r\n                render={props =>\r\n                    this.state.isAuthenticated ? (\r\n                        <Component {...props} {...rest} />\r\n                    ) : (\r\n                            this.state.loading ? (\r\n                                <div>LOADING</div>\r\n                            ) : (\r\n                                    <Redirect to={{ pathname: '/signin', state: { from: this.props.location } }} />\r\n                                )\r\n                        )\r\n                }\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default PrivateRoute;","import React, { Component } from \"react\";\r\n\r\nimport Categories from \"./Categories\";\r\nimport Clients from \"./Clients\";\r\nimport Products from \"./Products\";\r\nimport Sales from \"./Sales\";\r\nimport Suppliers from \"./Suppliers\";\r\nimport Supplyings from \"./Supplyings\";\r\nimport Users from \"./Users\";\r\nimport Navigation from \"./Navigation\";\r\nimport SalesControl from \"./SalesControl\";\r\nimport Inventory from \"./Inventory\";\r\nimport Reports from \"./Reports\";\r\nimport Debt from \"./Debt\";\r\nimport PrivateRoute from \"../components/PrivateRoute\";\r\n\r\nimport { Route } from \"react-router-dom\";\r\n\r\nimport $ from \"jquery\";\r\nclass Dashboard extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            formattedDolareReference: \"\",\r\n            dolarReference: 0,\r\n            loading: false,\r\n            newDolarReference: null\r\n        }\r\n\r\n        this.fetchDolarReference = this.fetchDolarReference.bind(this);\r\n        this.dolarReferenceSubmitHandler = this.dolarReferenceSubmitHandler.bind(this);\r\n        this.changeHandler = this.changeHandler.bind(this);\r\n        this.closeEditDolarModalButton = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchDolarReference();\r\n    }\r\n\r\n    fetchDolarReference() {\r\n        this.setState({\r\n            loading: true\r\n        });\r\n        fetch(\"/api/dolarReference\", {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if (res.data) {\r\n                    this.setState({\r\n                        dolarReference: res.data.price,\r\n                        formattedDolareReference: Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(res.data.price),\r\n                        loading: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        dolarReference: 0,\r\n                        formattedDolareReference: Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(0),\r\n                        loading: false\r\n                    })\r\n                }\r\n            })\r\n    }\r\n\r\n    changeHandler(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    dolarReferenceSubmitHandler(event) {\r\n        event.preventDefault();\r\n\r\n        fetch(\"/api/dolarReference\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({ price: this.state.newDolarReference })\r\n        })\r\n            .then(res => {\r\n                if (res.status == 204) {\r\n                    window.location.reload();\r\n                } else {\r\n                    alert(\"Error\")\r\n                }\r\n            })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row sticky-top\">\r\n                    <div className=\"col-md-12 p-0\">\r\n                        <Navigation />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"bg-danger text-light col-12\">\r\n                        Precio del Dolar <span id=\"dolarReference\" className=\"badge badge-light\">{(this.state.loading) ? \"Loading...\" : this.state.formattedDolareReference}</span>\r\n                        <button className=\"btn btn-secondary ml-4\" data-toggle=\"modal\" data-target=\"#dolarEditModal\" >Editar</button>\r\n                    </div>\r\n\r\n                </div>\r\n                <main className=\"mt-5\">\r\n                    <Route path=\"/control-de-ventas\" render={(props) => (<SalesControl {...props} dolarReference={this.state.dolarReference} />)} />\r\n                    <Route path=\"/inventario\" component={Inventory} />\r\n                    <Route path=\"/reportes\" render={(props) => (<Reports {...props} dolarReference={this.state.dolarReference} />)} />\r\n                    <Route path=\"/deuda\" render={(props) => (<Debt {...props} dolarReference={this.state.dolarReference} />)} />\r\n                    <Route path=\"/categorias\" component={Categories} />\r\n                    <Route path=\"/clientes\" component={Clients} />\r\n                    <Route path=\"/productos\" render={(props) => (<Products {...props} dolarReference={this.state.dolarReference} />)} />\r\n                    <Route path=\"/ventas\" component={Sales} />\r\n                    <Route path=\"/abastecimiento\" render={(props) => (<Supplyings {...props} dolarReference={this.state.dolarReference} />)} />\r\n                    <Route path=\"/proveedores\" component={Suppliers} />\r\n                    <Route path=\"/usuarios\" component={Users} />\r\n                </main>\r\n                <div className=\"modal fade\" id=\"dolarEditModal\" tabindex=\"-1\" aria-labelledby=\"dolarEditModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"dolarEditModalLabel\">Nuevo precio del dolar</h5>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                    <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n                            <form onSubmit={this.dolarReferenceSubmitHandler}>\r\n                                <div className=\"modal-body\">\r\n                                    <input name=\"newDolarReference\" onChange={this.changeHandler} className=\"form-control\" type=\"number\" placeholder=\"Ingrese el nuevo precio del dolar. Ej: 400000\" />\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button ref={this.closeEditDolarModalButton} type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                    <button type=\"submit\" className=\"btn btn-primary\">Save changes</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Dashboard;","const initialState = {\r\n    data: [],\r\n    next: {},\r\n    previous: {},\r\n    loading: false\r\n};\r\nexport default function productReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case \"LOAD_PRODUCTS\":\r\n            return {\r\n                ...state,\r\n                data: action.paginatedProducts.data,\r\n                next: action.paginatedProducts.next,\r\n                previous: action.paginatedProducts.previous\r\n            }\r\n        case \"LOADING\":\r\n            return { ...state, loading: action.loading }\r\n        default:\r\n            return state;\r\n    }\r\n}","\r\nconst initialState = {\r\n    activeCategoryId: 0,\r\n    activeCategoryName: \"\",\r\n    data: []\r\n}\r\nexport default function categoriesReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case \"LOAD_CATEGORIES\":\r\n            return { ...state, data: action.categories }\r\n        case \"SET_ACTIVE_CATEGORY_ID\":\r\n            return { ...state, activeCategoryId: action.categoryId }\r\n        case \"SET_ACTIVE_CATEGORY_NAME\":\r\n            return { ...state, activeCategoryName: action.categoryName }\r\n        default:\r\n            return state;\r\n    }\r\n}","import products from \"./productReducer\";\r\nimport categories from \"./categoriesReducer\";\r\n\r\nexport default { products, categories }","import { createStore, combineReducers } from \"redux\";\r\nimport reducers from \"../reducers\";\r\n\r\nconst rootReducer = combineReducers({\r\n    ...reducers\r\n})\r\nexport default function configureStore() {\r\n    return createStore(rootReducer);\r\n}","import React from 'react';\nimport './App.css';\n\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\n\nimport Header from \"./components/Header\";\nimport Navigation from \"./components/Navigation\";\nimport ProductCategories from \"./components/ProductCategories\";\nimport ProductList from \"./components/ProductList\";\nimport BackToTopButton from \"./components/BackToTopButton\";\nimport Login from \"./components/Login\";\nimport Dashboard from \"./adminComponents/Dashboard\";\n\nimport PrivateRoute from \"./components/PrivateRoute\";\n\nimport configureStore from \"./store/configureStore\";\nimport { Provider } from \"react-redux\";\n\nconst store = configureStore();\n\nfunction App() {\n\n  /*\n  <Route path=\"/\">\n              <div className=\"container-fluid\">\n                <div className=\"row bg-dark\" style={{ height: \"30px\" }} />\n                <div className=\"row sticky-top\">\n                  <div className=\"col-12\">\n                    <Header />\n                  </div>\n                </div>\n                <Navigation />\n\n                <div className=\"row\">\n                  <div className=\"col-md-12 mt-2\">\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"col-md-3 mt-2\">\n                    <div className=\"row\">\n                      <div className=\"col-12\">\n                        <ProductCategories />\n                      </div>\n                    </div>\n                    <div className=\"row\">\n                      <div className=\"col-12 d-flex flex-column align-items-center\">\n                        <BackToTopButton />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-md-8 mt-2 d-flex flex-wrap justify-content-start\">\n                    <ProductList />\n                  </div>\n                </div>\n              </div>\n            </Route>\n  */\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <Router>\n          <Switch>\n            <Route exact path=\"/signin\" component={Login} />\n            <PrivateRoute path=\"/\" component={Dashboard} />\n          </Switch>\n        </Router>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { localsName } from \"ejs\";\r\nimport React, { Component } from \"react\";\r\nimport Async from 'react-select/async';\r\n\r\nclass CustomSelect extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            options: []\r\n        }\r\n\r\n        this.searchHandler = this.searchHandler.bind(this);\r\n    }\r\n\r\n    roundToNiceNumber(value) {\r\n        var val = 0;\r\n        if (value.toString().length == 4) {\r\n            val = Math.ceil(value / 100) * 100\r\n        }\r\n        else if (value.toString().length > 4) {\r\n            val = Math.ceil(value / 1000) * 1000\r\n        }\r\n\r\n        return val;\r\n    }\r\n\r\n    searchHandler(inputValue, callback) {\r\n        fetch(this.props.sourceURL || `/api/products?name=${inputValue}`, {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        })\r\n            .then(result => result.json())\r\n            .then(results => {\r\n                if (results.data.length > 0) {\r\n                    results.data.forEach(item => {\r\n                        item.value = item.name;\r\n                        if (item.image) {\r\n                            var bufferBase64 = new Buffer.from(item.image, 'binary').toString('base64');\r\n                            item.label = [<img className=\"img img-fluid\" style={{ maxWidth: \"40px\" }} src={`data:image/png;base64,${bufferBase64}`} />, `${item.name} (${Intl.NumberFormat(\"es-VE\", { style: \"currency\", currency: \"VES\" }).format(this.roundToNiceNumber(item.price * this.props.dolarReference))})`];\r\n                        }\r\n                        else {\r\n                            item.label = `${item.name} (${Intl.NumberFormat(\"es-VE\", { style: \"currency\", currency: \"VES\" }).format(this.roundToNiceNumber(item.price * this.props.dolarReference))})`\r\n                        }\r\n                    });\r\n                    callback(results.data)\r\n                }\r\n            });\r\n    }\r\n    render() {\r\n        return (\r\n            <Async\r\n                loadOptions={this.searchHandler}\r\n                defaultOptions\r\n                placeholder=\"Buscar\"\r\n                autoFocus\r\n                inputId=\"selectedProduct\"\r\n                isMulti={this.props.isMulti}\r\n                isClearable\r\n                ref={this.props.innerRef}\r\n                name={this.props.name}\r\n                onChange={this.props.changeHandler}\r\n                value={this.props.value}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default CustomSelect;","module.exports = {\r\n    loadProducts: function (paginatedProducts) {\r\n        return { type: \"LOAD_PRODUCTS\", paginatedProducts }\r\n    },\r\n    setLoading: function (loading) {\r\n        return { type: \"LOADING\", loading }\r\n    },\r\n}","module.exports = {\r\n    loadCategories: function (categories) {\r\n        return { type: \"LOAD_CATEGORIES\", categories }\r\n    },\r\n    setActiveCategoryId: function (categoryId) {\r\n        return { type: \"SET_ACTIVE_CATEGORY_ID\", categoryId }\r\n    },\r\n    setActiveCategoryName: function (categoryName) {\r\n        return { type: \"SET_ACTIVE_CATEGORY_NAME\", categoryName }\r\n    }\r\n}","import React, { Component } from \"react\";\r\n\r\nimport CustomSelect from \"../globalComponents/CustomSelect\";\r\nimport $ from \"jquery\";\r\n\r\nclass SalesControl extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            selectedProduct: null,\r\n            addedProducts: [],\r\n            subtotalDollars: null,\r\n            subtotalBs: null,\r\n            totalDollars: null,\r\n            totalBs: null,\r\n            quantity: 1,\r\n            stockError: \"\",\r\n            error: \"\",\r\n            success: \"\"\r\n        }\r\n        this.productsHandler = this.productsHandler.bind(this);\r\n        this.submitHandler = this.submitHandler.bind(this);\r\n        this.optionChangeHandler = this.optionChangeHandler.bind(this);\r\n        this.onChangeHandler = this.onChangeHandler.bind(this);\r\n        this.clickHandler = this.clickHandler.bind(this);\r\n\r\n        this.saleSubmitButton = React.createRef();\r\n\r\n\r\n        this.sendSaleForm = React.createRef();\r\n        this.quantityInput = React.createRef();\r\n        this.CustomSelectRef = React.createRef();\r\n        this.productsTableDiv = React.createRef();\r\n        this.productsTable = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        let bodySize = document.body.getBoundingClientRect();\r\n        let tableSize = this.productsTableDiv.current.getBoundingClientRect();\r\n        let tableMaxHeight = bodySize.height - tableSize.top - tableSize.height - 30;\r\n        this.productsTableDiv.current.style.maxHeight = tableMaxHeight;\r\n\r\n        document.body.addEventListener(\"keyup\", (event) => {\r\n            let key = event.key;\r\n            if (event.ctrlKey && key == \"Enter\") {\r\n                if (this.saleSubmitButton.current) this.saleSubmitButton.current.click()\r\n            }\r\n        });\r\n    }\r\n\r\n    optionChangeHandler(selectedOption, actionType) {\r\n        if (actionType.action == \"select-option\") {\r\n            this.quantityInput.current.focus();\r\n            this.quantityInput.current.select();\r\n        }\r\n        this.setState({\r\n            selectedProduct: selectedOption\r\n        })\r\n    }\r\n    onChangeHandler(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    productsHandler(event) {\r\n        event.preventDefault();\r\n\r\n        if (this.state.selectedProduct != null) {\r\n            fetch(`/api/inventory/${this.state.selectedProduct.id}`, {\r\n                headers: {\r\n                    \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n                }\r\n            })\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    let stock = parseInt(res.data[0].stock);\r\n                    if (stock > 0 && stock >= this.state.quantity) {\r\n                        let product = this.state.selectedProduct;\r\n\r\n                        let productFormatted = {};\r\n\r\n                        let discount = 0;\r\n                        if (product.discount.length) {\r\n                            discount = product.discount[0].percent;\r\n                        }\r\n\r\n                        product.discount = discount;\r\n                        product.quantity = this.state.quantity || 1;\r\n\r\n                        product.totalDollars = product.price * product.quantity - (product.price * (discount / 100));\r\n                        product.priceBs = this.roundToNiceNumber(product.price * this.props.dolarReference);\r\n                        product.totalBs = this.roundToNiceNumber(product.priceBs * product.quantity - (product.priceBs * (discount / 100)));\r\n\r\n                        if (discount) {\r\n                            product.totalFormattedDollars = <span className={(discount) ? \"text-danger\" : \"\"}>{Intl.NumberFormat('es-VE', { style: 'currency', currency: 'USD' }).format(product.totalDollars) + ` (-${discount}%)`}</span>;\r\n                            product.totalFormattedBs = <span className={(discount) ? \"text-danger\" : \"\"}>{Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(product.totalBs) + ` (-${discount}%)`}</span>;\r\n                        }\r\n                        else {\r\n                            product.totalFormattedDollars = Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(product.totalDollars);\r\n                            product.totalFormattedBs = Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(product.totalBs);\r\n                        }\r\n\r\n                        productFormatted = {\r\n                            id: product.id,\r\n                            name: product.name,\r\n                            price: product.price,\r\n                            priceBs: product.priceBs,\r\n                            quantity: parseInt(product.quantity),\r\n                            totalDollars: product.totalDollars,\r\n                            totalBs: product.totalBs,\r\n                            image: product.image,\r\n                            totalFormattedDollars: product.totalFormattedDollars,\r\n                            totalFormattedBs: product.totalFormattedBs,\r\n                            discount: product.discount\r\n                        };\r\n\r\n                        this.CustomSelectRef.current.select.state.value = [];\r\n                        this.quantityInput.current.value = 1\r\n                        this.CustomSelectRef.current.focus();\r\n\r\n                        let productExistsInTable = false;\r\n                        this.state.addedProducts.forEach(product => {\r\n                            if (productFormatted.id == product.id) {\r\n                                productExistsInTable = true;\r\n                                productFormatted.quantity += product.quantity;\r\n                            }\r\n                        })\r\n\r\n                        if (!productExistsInTable) {\r\n                            this.setState({\r\n                                addedProducts: this.state.addedProducts.concat(productFormatted),\r\n                                quantity: 1,\r\n                                selectedProduct: null,\r\n                                stockError: \"\"\r\n                            }, function () {\r\n                                let totalDollars = 0;\r\n                                let totalBs = 0;\r\n                                this.state.addedProducts.map(product => {\r\n                                    totalDollars += parseFloat(product.totalDollars);\r\n                                    totalBs += parseFloat(product.totalBs);\r\n                                });\r\n                                this.setState({\r\n                                    subtotalDollars: totalDollars,\r\n                                    subtotalBs: totalBs,\r\n                                    totalDollars,\r\n                                    totalBs\r\n                                })\r\n                                this.productsTable.current.parentElement.scrollTop = this.productsTable.current.scrollHeight;\r\n                            });\r\n                        }\r\n                        else {\r\n                            var index = this.state.addedProducts.findIndex(product => product.id === productFormatted.id);\r\n                            this.setState({\r\n                                addedProducts: [\r\n                                    ...this.state.addedProducts.slice(0, index),\r\n                                    Object.assign({}, this.state.addedProducts[index], { ...productFormatted }),\r\n                                    ...this.state.addedProducts.slice(index + 1)\r\n                                ],\r\n                                quantity: 1,\r\n                                selectedProduct: null,\r\n                                stockError: \"\"\r\n                            }, function () {\r\n                                let totalDollars = 0;\r\n                                let totalBs = 0;\r\n                                this.state.addedProducts.map(product => {\r\n                                    totalDollars += parseFloat(product.totalDollars);\r\n                                    totalBs += parseFloat(product.totalBs);\r\n                                });\r\n                                this.setState({\r\n                                    subtotalDollars: totalDollars,\r\n                                    subtotalBs: totalBs,\r\n                                    totalDollars,\r\n                                    totalBs\r\n                                })\r\n                            })\r\n                        }\r\n                    }\r\n                    else {\r\n                        this.setState({\r\n                            stockError: \"No hay productos suficientes en el inventario\"\r\n                        });\r\n                    }\r\n                });\r\n        }\r\n        else {\r\n            this.setState({\r\n                stockError: \"Seleccione un producto\"\r\n            })\r\n        }\r\n    }\r\n    clickHandler(event) {\r\n        let newProducts = [];\r\n        let totalToSubtractDollars = 0;\r\n        let totalToSubtractBs = 0;\r\n\r\n        this.state.addedProducts.forEach(product => {\r\n            if (product.id != event.currentTarget.parentElement.parentElement.getAttribute(\"productid\")) {\r\n                newProducts.push(product);\r\n            }\r\n            else {\r\n                totalToSubtractDollars += product.totalDollars;\r\n                totalToSubtractBs += product.totalBs;\r\n            }\r\n        })\r\n        this.setState({\r\n            addedProducts: newProducts,\r\n            subtotalDollars: this.state.subtotalDollars - totalToSubtractDollars,\r\n            subtotalBs: this.state.subtotalBs - totalToSubtractBs,\r\n            totalDollars: this.state.totalDollars - totalToSubtractDollars,\r\n            totalBs: this.state.totalBs - totalToSubtractBs\r\n        });\r\n        this.CustomSelectRef.current.focus();\r\n    }\r\n\r\n    submitHandler() {\r\n        if (!this.state.addedProducts.length) {\r\n            this.setState({\r\n                stockError: \"Seleccione un producto\"\r\n            })\r\n            return\r\n        }\r\n        this.saleSubmitButton.current.disabled = true;\r\n        let saleProducts = [];\r\n        this.state.addedProducts.forEach(product => {\r\n            saleProducts.push({\r\n                id: product.id,\r\n                quantity: product.quantity,\r\n                price: product.price,\r\n                dolarReference: this.props.dolarReference,\r\n                discount: product.discount\r\n            })\r\n        });\r\n        fetch(\"/api/sales\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n                'Content-Type': 'application/json'\r\n\r\n            },\r\n            body: JSON.stringify({\r\n                products: saleProducts\r\n            })\r\n        }).then(res => res.json())\r\n            .then(res => {\r\n                if (res.err || res.error) {\r\n                    this.setState({\r\n                        error: res.err\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        success: \"La venta se ha realizado con éxito\",\r\n                        selectedProduct: null,\r\n                        addedProducts: [],\r\n                        subtotalDollars: null,\r\n                        subtotalBs: null,\r\n                        totalDollars: null,\r\n                        totalBs: null,\r\n                        quantity: 1,\r\n                        stockError: \"\",\r\n                        error: \"\",\r\n                    })\r\n                    setTimeout(() => {\r\n                        this.setState({\r\n                            success: \"\"\r\n                        })\r\n                    }, 3000);\r\n                    this.CustomSelectRef.current.select.state.value = [];\r\n                    this.quantityInput.current.value = 1\r\n                    this.CustomSelectRef.current.focus();\r\n                    this.saleSubmitButton.current.disabled = false;\r\n\r\n                }\r\n            })\r\n    }\r\n\r\n    roundToNiceNumber(value) {\r\n        var val = 0;\r\n        if (value.toString().length == 4) {\r\n            val = Math.ceil(value / 100) * 100\r\n        }\r\n        else if (value.toString().length > 4) {\r\n            val = Math.ceil(value / 1000) * 1000\r\n        }\r\n\r\n        return val;\r\n    }\r\n    render() {\r\n        var _this = this;\r\n        return (\r\n            <div className=\"container-fluid\" id=\"container\">\r\n                <div className=\"row d-none d-lg-inline-block\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1 className=\"text-danger\">Control de Ventas</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-0 mt-lg-5\">\r\n                    <div className=\"col-12\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <span className=\"text-danger\">{this.state.stockError}</span>\r\n                                <span className=\"text-danger h3\">{this.state.error}</span>\r\n                                <span className=\"text-success h3\">{this.state.success}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <form className=\"\" onSubmit={this.productsHandler}>\r\n                                    <div className=\"row mb-3\">\r\n                                        <div className=\"col-12 col-lg-7 mt-2\">\r\n                                            <CustomSelect dolarReference={_this.props.dolarReference} isMulti={false} innerRef={this.CustomSelectRef} changeHandler={this.optionChangeHandler} name={\"ProductSelect\"} />\r\n                                        </div>\r\n                                        <div className=\"col-12 col-lg-3 mt-2\">\r\n                                            <input onChange={this.onChangeHandler} ref={this.quantityInput} type=\"text\" className=\"form-control\" placeholder=\"Cantidad\" id=\"quantity\" name=\"quantity\" defaultValue=\"1\" />\r\n                                        </div>\r\n                                        <div className=\"col-12 col-lg-2 mt-2\">\r\n                                            <input type=\"submit\" className=\"form-control btn btn-info\" value=\"Enviar\" />\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-lg-2\">\r\n                        <div className=\"form-group\">\r\n                            <input ref={this.saleSubmitButton} onClick={this.submitHandler} type=\"button\" className=\"form-control btn btn-primary\" value=\"Procesar venta\" />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input ref={this.saleSubmitButton} onClick={this.submitHandler} type=\"button\" className=\"form-control btn btn-warning\" value=\"Enviar a deuda\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-lg-10\">\r\n                        <div ref={this.productsTableDiv} className=\"table-responsive\" >\r\n                            <table ref={this.productsTable} className=\"table table-dark table-striped overflow-auto\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"col\">Count</th>\r\n                                        <th scope=\"col\">Product ID</th>\r\n                                        <th scope=\"col\">Nombre</th>\r\n                                        <th scope=\"col\">Precio $</th>\r\n                                        <th scope=\"col\">Precio Bs</th>\r\n                                        <th scope=\"col\">Cantidad</th>\r\n                                        <th scope=\"col\">Total<span className=\"font-weight-bold text-warning\">{\" \" + Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(this.state.totalDollars)}</span>\r\n                                        </th>\r\n                                        <th scope=\"col\">Total<span className=\"font-weight-bold text-warning\">{\" \" + Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(this.state.totalBs)}</span>\r\n                                        </th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {this.state.addedProducts.map((product, index) => {\r\n                                        if (product.image) {\r\n                                            var bufferBase64 = new Buffer.from(product.image, 'binary').toString('base64');\r\n                                            return (\r\n                                                <tr key={index} productid={product.id}>\r\n                                                    <th>{index + 1}</th>\r\n                                                    <th>{product.id}</th>\r\n                                                    <th><img className=\"\" style={{ maxWidth: \"40px\" }} src={`data:image/png;base64,${bufferBase64}`} />{product.name}</th>\r\n                                                    <th>{Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(product.price)}</th>\r\n                                                    <th>{Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(product.priceBs)}</th>\r\n                                                    <th>{product.quantity}</th>\r\n                                                    <th>{product.totalFormattedDollars}</th>\r\n                                                    <th>{product.totalFormattedBs}</th>\r\n                                                    <th>\r\n                                                        <button onClick={this.clickHandler} className=\"btn btn-danger p-0\">Delete</button>\r\n                                                    </th>\r\n                                                </tr>\r\n                                            )\r\n                                        }\r\n                                        else {\r\n                                            return (\r\n                                                <tr key={index} productid={product.id}>\r\n                                                    <th>{index + 1}</th>\r\n                                                    <th>{product.id}</th>\r\n                                                    <th>{product.name}</th>\r\n                                                    <th>{Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(product.price)}</th>\r\n                                                    <th>{Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(product.priceBs)}</th>\r\n                                                    <th>{product.quantity}</th>\r\n                                                    <th>{product.totalFormattedDollars}</th>\r\n                                                    <th>{product.totalFormattedBs}</th>\r\n                                                    <th>\r\n                                                        <button onClick={this.clickHandler} className=\"btn btn-danger p-0\">Delete</button>\r\n                                                    </th>\r\n                                                </tr>\r\n                                            )\r\n                                        }\r\n\r\n                                    })}\r\n                                </tbody>\r\n                                <tfoot>\r\n                                </tfoot>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SalesControl;\r\n\r\n/*\r\n<div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <div className=\"d-flex flex-column align-items-end\">\r\n                            <label className=\"font-weight-bold h4\">{\"Subtotal Bs: \"}\r\n                                <span className=\"font-weight-bold h4 text-danger\">{Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(this.state.subtotalBs)}</span>\r\n                            </label>\r\n                            <label className=\"font-weight-bold h4\">{\"Total Bs: \"}\r\n                                <span className=\"font-weight-bold h4 text-danger\">{Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(this.state.totalBs)}</span>\r\n                            </label>\r\n                            <hr className=\"w-100\" />\r\n                            <label className=\"font-weight-bold h4\">{\"Subtotal $: \"}\r\n                                <span className=\"font-weight-bold h4 text-danger\">{Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(this.state.subtotalDollars)}</span>\r\n                            </label>\r\n                            <label className=\"font-weight-bold h4\">{\"Total $: \"}\r\n                                <span className=\"font-weight-bold h4 text-danger\">{Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(this.state.totalDollars)}</span>\r\n                            </label>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n                */"],"sourceRoot":""}
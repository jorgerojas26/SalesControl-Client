{"version":3,"sources":["globalComponents/Suggestions.jsx","globalComponents/SearchInput.jsx","components/Header.jsx","components/Navigation.jsx","components/ProductCategories.jsx","components/CategoryTitle.jsx","components/ProductList.jsx","components/BackToTopButton.jsx","requests/isAuthenticated.js","components/Login.jsx","requests/categories.js","adminComponents/Categories.jsx","requests/clients.js","adminComponents/Clients.jsx","adminComponents/Sales.jsx","adminComponents/Suppliers.jsx","adminComponents/Supplyings.jsx","adminComponents/Users.jsx","adminComponents/Navigation.jsx","adminComponents/Inventory.jsx","adminComponents/Reports.jsx","requests/debts.js","adminComponents/Debt.jsx","components/PrivateRoute.jsx","adminComponents/Dashboard.jsx","reducers/productReducer.js","reducers/categoriesReducer.js","reducers/index.js","store/configureStore.js","App.js","serviceWorker.js","index.js","adminComponents/ResourceTable.jsx","globalComponents/CustomSelect.jsx","actions/productActions.js","actions/categoriesActions.js","adminComponents/Products.jsx","adminComponents/SalesControl.jsx"],"names":["Suggestions","this","props","noResults","className","suggestions","map","suggestion","onlyName","onClick","clickHandler","key","id","productid","style","maxWidth","src","imagePath","alt","name","minWidth","type","defaultValue","value","price","Component","SearchInput","state","showSuggestions","searchHandler","debounce","headerContainer","React","createRef","onBlurHandler","bind","event","target","length","fetch","then","result","json","data","setState","parentClassName","onChange","persist","placeholder","ref","suggestionBox","onOutsideClick","ProductCategories","fetchProducts","categoryHandler","categories","dispatch","categoriesActions","document","querySelector","getAttribute","innerText","preventDefault","includes","parentElement","classList","remove","add","page","limit","productActions","paginatedProducts","category","index","categoryid","connect","ownProps","activeCategory","CategoryTitle","activeCategoryName","ProductList","observer","IntersectionObserver","loadMoreProductsHandler","elementToObserve","current","observe","actions","products","concat","entries","isIntersecting","next","product","push","speed","viewBox","backgroundColor","foregroundColor","x","y","rx","ry","width","height","unshift","loading","previous","a","token","localStorage","getItem","res","auth","isAuthenticated","Login","onSubmitHandler","inputHandler","email","password","logginError","authenticated","history","method","headers","body","JSON","stringify","err","setItem","onSubmit","action","BASE_URL","functions","fetchAll","response","fetchById","fetchByName","create","newCategory","update","require","Categories","fetchMessage","submitMessage","submitMessageType","submitLoading","categoryName","categoryAction","selectedRowData","submitHandler","changeHandler","categoriesTable","addButton","text","attr","e","datatable","node","config","$","val","editButton","extend","row","selected","categoriesRequests","DataTable","columns","title","dom","buttons","select","toString","edit","rows","rowData","error","setTimeout","tabindex","aria-labelledby","aria-hidden","data-dismiss","aria-label","htmlFor","required","role","clients","client","newClient","Clients","cedula","phoneNumber","clientAction","optionChangeHandler","clientTable","customSelectRef","clientRequests","console","log","order","selectedOption","actionType","selectedClient","Sales","roundToNiceNumber","childFormat","Math","ceil","d","childRowInfo","saleProducts","forEach","saleProduct","productId","dolarReference","discount","quantity","Intl","NumberFormat","currency","format","ResourceTable","asyncTable","sourceURL","defaultContent","Suppliers","rif","success","inputChangeHandler","setModalAction","modalAction","status","draw","modalStructure","Supplyings","supplier","supplierChangeHandler","productChangeHandler","supplierSelect","productSelect","supplyingForm","supplierId","reset","alert","render","CustomSelect","isMulti","innerRef","step","Users","permissions","form","Navigation","logout","removeItem","activeNavLink","href","data-toggle","data-target","aria-controls","aria-expanded","to","Inventory","moment","Reports","resource","parameters","reportForm","resourceTable","dateRangeFromValue","dateRangeToValue","greaterThanDate","lowerThanDate","equalDate","previousParameters","find","Date","subtract","prop","changeSourceURL","salesColumns","meta","grossTotalDollars","grossTotalBs","netIncomeDollars","netIncomeBs","supplyingsColumns","defaultChecked","debts","debt","newDebt","Debt","debtType","debtTotal","debtAction","debtTable","total","label","debtsRequests","clientId","cancelled","class","PrivateRoute","component","rest","pathname","from","location","Dashboard","formattedDolareReference","newDolarReference","fetchDolarReference","dolarReferenceSubmitHandler","closeEditDolarModalButton","window","reload","path","SalesControl","Products","initialState","activeCategoryId","categoryId","rootReducer","combineReducers","reducers","store","createStore","App","exact","Boolean","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message","jsZip","JSZip","recordsTable","modal","newSourceURL","ajax","url","load","$recordsTable","_this","initComplete","api","every","column","dataSrc","header","append","on","splittedDataSrc","split","parameter","charAt","toUpperCase","slice","trim","footerCallback","totalDollars","reduce","b","pageTotalDollars","footer","html","totalBs","pageTotalBs","messageTop","customize","win","css","exportOptions","modifier","setSelectedRowData","confirm","discountId","serverSide","results","count","profitPercent","start","xhr","code","paging","lengthMenu","pageLength","columnDefs","ordering","sorting","tr","closest","child","isShown","hide","removeClass","show","addClass","addEventListener","children","focus","tabIndex","options","inputValue","callback","item","image","bufferBase64","Buffer","loadOptions","defaultOptions","autoFocus","inputId","isClearable","module","exports","loadProducts","setLoading","loadCategories","setActiveCategoryId","setActiveCategoryName","selectedCategories","productImageFile","discountPercent","discountStartDate","discountEndDate","discountSubmitHandler","CustomSelectRef","productForm","closeButton","selectedOptions","files","categoriesID","formData","FormData","click","percent","startDate","endDate","disc","min","selectedProduct","addedProducts","subtotalDollars","subtotalBs","stockError","productsHandler","onChangeHandler","saleSubmitButton","sendSaleForm","quantityInput","productsTable","ctrlKey","stock","productFormatted","priceBs","totalFormattedDollars","totalFormattedBs","productExistsInTable","findIndex","Object","assign","parseFloat","scrollTop","scrollHeight","newProducts","totalToSubtractDollars","totalToSubtractBs","currentTarget","disabled","scope"],"mappings":"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","file":"static/js/main.61d8bf1c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Suggestions extends Component {\r\n\r\n    render() {\r\n        if (this.props.noResults) {\r\n            return (\r\n                <ul className=\"list-group position-absolute w-100\" >\r\n                    <li className=\"list-group-item text-justify\">No se encontraron resultados</li>\r\n                </ul>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <ul className=\"list-group position-absolute w-100 suggestionsBox\" >\r\n                    {this.props.suggestions.map(suggestion => {\r\n                        if (this.props.onlyName) {\r\n                            return <div onClick={this.props.clickHandler} key={suggestion.id} productid={suggestion.id} className=\"text-justify\">\r\n                                <li className=\"list-group-item\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-1\">\r\n                                            <img style={{ maxWidth: \"35px\" }} src={suggestion.imagePath} alt=\"IMG\" />\r\n                                        </div>\r\n                                        <div className=\"col-6 float-left\">\r\n                                            <h5 className=\"font-weight-bold\" id=\"productName\">{suggestion.name}</h5>\r\n                                        </div>\r\n                                    </div>\r\n                                </li>\r\n                            </div>\r\n                        }\r\n                        else {\r\n                            return <li onClick={this.props.clickHandler} key={suggestion.id} className=\"list-group-item text-justify\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12 col-sm-6 col-md-12 col-lg-12 col-xl-6\">\r\n                                        <img className=\"\" style={{ maxWidth: \"35px\" }} src={suggestion.imagePath} alt=\"IMG\" />\r\n                                        <span id=\"productName font-weight-bold\">{suggestion.name}</span>\r\n                                    </div>\r\n                                    <div className=\"col-6 col-sm-4 col-md-6 col-lg-6 col-xl-4\">\r\n                                        <div className=\"input-group \">\r\n                                            <input className=\"form-control text-center\" style={{ minWidth: \"45px\", maxWidth: \"70px\" }} type=\"number\" defaultValue=\"1\" name=\"numberOfItems\" id=\"numberOfItems\" />\r\n                                            <input className=\"bg-dark text-light\" type=\"button\" value=\"Comprar\" />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-6 col-sm-2 col-md-6 col-lg-6 col-xl-2 \">\r\n                                        <span className=\"text-danger\">{`${suggestion.price} Bs.`}</span>\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n                        }\r\n                    })}\r\n                </ul>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Suggestions","import React, { Component } from \"react\";\r\nimport OutsideClickHandler from 'react-outside-click-handler';\r\nimport Suggestions from \"./Suggestions\";\r\nimport debounce from \"lodash.debounce\";\r\n\r\nclass SearchInput extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {\r\n            showSuggestions: false,\r\n            suggestions: [],\r\n            noResults: false\r\n        };\r\n\r\n        this.searchHandler = debounce(this.searchHandler, 500);\r\n        this.headerContainer = React.createRef();\r\n        this.onBlurHandler = this.onBlurHandler.bind(this);\r\n    }\r\n\r\n    searchHandler(event) {\r\n        if (event.target.value.length > 0) {\r\n            fetch(`/api/products?name=${event.target.value}&page=1&limit=10`)\r\n                .then(result => result.json())\r\n                .then(result => {\r\n                    if (result.data.length > 0) {\r\n                        this.setState({\r\n                            showSuggestions: true,\r\n                            suggestions: result.data,\r\n                            noResults: false\r\n                        });\r\n                    }\r\n                    else {\r\n                        this.setState({\r\n                            showSuggestions: true,\r\n                            noResults: true\r\n                        });\r\n                    }\r\n\r\n                });\r\n        }\r\n        else {\r\n            this.setState({\r\n                showSuggestions: false,\r\n                suggestions: []\r\n            })\r\n        }\r\n    }\r\n    onBlurHandler() {\r\n        this.setState({\r\n            showSuggestions: false\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={this.props.parentClassName}>\r\n                <input onChange={event => {\r\n                    event.persist();\r\n                    this.searchHandler(event);\r\n                }} className={this.props.className} type=\"text\" placeholder=\"Buscar Producto\" id=\"searchInput\" />\r\n                <div ref={this.suggestionBox} className=\"\">\r\n                    {this.state.showSuggestions &&\r\n                        <OutsideClickHandler\r\n                            onOutsideClick={this.onBlurHandler}><Suggestions suggestions={this.state.suggestions} noResults={this.state.noResults} clickHandler={this.props.clickHandler} onlyName={this.props.onlyName}></Suggestions>\r\n                        </OutsideClickHandler>}\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchInput;","import React, { Component } from \"react\";\r\nimport SearchInput from \"../globalComponents/SearchInput\";\r\n\r\nclass Header extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.headerContainer = React.createRef();\r\n        this.scrollHandler = this.scrollHandler.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener(\"scroll\", this.scrollHandler);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"scroll\", this.scrollHandler);\r\n    }\r\n\r\n    scrollHandler() {\r\n        if (window.scrollY > 100) {\r\n            this.headerContainer.current.parentElement.style.backgroundColor = \"#3c4055\";\r\n            this.headerContainer.current.parentElement.style.outlineStyle = \"solid\";\r\n            this.headerContainer.current.parentElement.style.outlineWidth = \"2px\";\r\n            //this.headerContainer.current.querySelector(\"#brand-title\").classList.replace(\"text-danger\", \"text-light\")\r\n        }\r\n        else {\r\n            this.headerContainer.current.parentElement.style.backgroundColor = \"white\";\r\n            this.headerContainer.current.parentElement.style.outlineStyle = \"none\";\r\n            //this.headerContainer.current.querySelector(\"#brand-title\").classList.replace(\"text-light\", \"text-danger\")\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div ref={this.headerContainer} className=\"row\">\r\n                <div className=\"col-12 col-lg-5 brand-image-container\">\r\n                    <div className=\"brand-image h-100\" />\r\n                </div>\r\n                <SearchInput parentClassName={\"col-10 col-lg-4 my-auto\"} className={\"form-control\"} />\r\n                <div className=\"col-1 d-flex\">\r\n                    <img className=\"align-items-middle mx-auto\" src=\"/icons/shopping-cart.svg\" alt=\"Shopping Cart\" />\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component } from \"react\";\r\n\r\nclass Navigation extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row mt-3 mt-lg-0\">\r\n                <div className=\"col-12\">\r\n                    <nav className=\"navbar navbar-expand-md navbar-dark bg-dark pl-0 pr-0\">\r\n                        <button className=\"navbar-toggler col-sm-12\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                            <span className=\"navbar-toggler-icon\"></span>\r\n                        </button>\r\n                        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                            <ul className=\"navbar-nav mr-auto container\">\r\n                                <li className=\"nav-item\">\r\n                                    <a className=\"nav-link text-light font-weight-bold\" href=\"#\">HOME</a>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <a className=\"nav-link text-light font-weight-bold\" href=\"#\">PRODUCTOS</a>\r\n                                </li>\r\n\r\n                                <li className=\"nav-item\">\r\n                                    <a className=\"nav-link text-light font-weight-bold\" href=\"#\">SERVICIOS</a>\r\n                                </li>\r\n\r\n                                <li className=\"nav-item\">\r\n                                    <a className=\"nav-link text-light font-weight-bold\" href=\"#\">DESCUENTOS</a>\r\n                                </li>\r\n\r\n                                <li className=\"nav-item\">\r\n                                    <a className=\"nav-link text-light font-weight-bold\" href=\"#\">PROMOCIONES</a>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navigation","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as productActions from \"../actions/productActions\";\r\nimport * as categoriesActions from \"../actions/categoriesActions\";\r\n\r\nclass ProductCategories extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.fetchProducts = this.fetchProducts.bind(this);\r\n        this.categoryHandler = this.categoryHandler.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        fetch(\"/api/categories\")\r\n            .then(categories => categories.json())\r\n            .then(categories => {\r\n                if (categories.data.length > 0) {\r\n                    this.props.dispatch(categoriesActions.loadCategories(categories.data))\r\n                    this.props.dispatch(categoriesActions.setActiveCategoryId(document.querySelector(\".categoryItem, active\").getAttribute(\"categoryId\")))\r\n                    this.props.dispatch(categoriesActions.setActiveCategoryName(document.querySelector(\".categoryItem, active\").innerText));\r\n                }\r\n            });\r\n\r\n    }\r\n\r\n    categoryHandler(event) {\r\n        event.preventDefault();\r\n        if (!event.target.className.includes(\"active\")) {\r\n            event.target.parentElement.querySelector(\".active\").classList.remove(\"active\");\r\n            event.target.classList.add(\"active\");\r\n            this.props.dispatch(categoriesActions.setActiveCategoryId(event.target.getAttribute(\"categoryid\")))\r\n            this.props.dispatch(categoriesActions.setActiveCategoryName(event.target.innerText))\r\n            this.fetchProducts(1, 16, event.target.getAttribute(\"categoryid\"))\r\n        }\r\n    }\r\n\r\n    fetchProducts(page, limit, categories) {\r\n        this.props.dispatch(productActions.setLoading(true));\r\n        fetch(`/api/products?page=${page}&limit=${limit}&categories=${categories}`)\r\n            .then(result => result.json())\r\n            .then(paginatedProducts => {\r\n                this.props.dispatch(productActions.loadProducts(paginatedProducts));\r\n                this.props.dispatch(productActions.setLoading(false));\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"col-xs-6 col-sm-12 col-md-12 p-0 mt-0 mt-md-5 productcategoriesContainer\">\r\n                <div className=\"card rounded-0\">\r\n                    <div className=\"card-header\">\r\n                        <h5 className=\"card-title text-danger font-weight-bold\">Categorias</h5>\r\n                    </div>\r\n                    <div className=\"card-body p-0\">\r\n                        <div className=\"list-group\">\r\n                            {\r\n                                this.props.categories ?\r\n                                    this.props.categories.map((category, index) => {\r\n                                        if (index === 0) {\r\n                                            return <li onClick={this.categoryHandler} categoryid={category.id} key={category.id} className=\"categoryItem list-group-item active btn\">{category.name}</li>\r\n                                        }\r\n                                        else {\r\n                                            return <li onClick={this.categoryHandler} categoryid={category.id} key={category.id} className=\"categoryItem list-group-item btn\">{category.name}</li>\r\n                                        }\r\n                                    })\r\n                                    :\r\n                                    <span>No hay categorias</span>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\nfunction mapStateToProps(state, ownProps) {\r\n    return {\r\n        categories: state.categories.data,\r\n        activeCategory: state.categories.activeCategory\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(ProductCategories);","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass CategoryTitle extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <h3 className=\"float-left text-danger mt-2\">{this.props.activeCategory}</h3>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n    return {\r\n        activeCategory: state.categories.activeCategoryName\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(CategoryTitle);","import React, { Component } from \"react\";\r\nimport ContentLoader from 'react-content-loader'\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../actions/productActions\";\r\nimport CategoryTitle from \"../components/CategoryTitle\";\r\n\r\nclass ProductList extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.observer = new IntersectionObserver(this.loadMoreProductsHandler.bind(this));\r\n        this.elementToObserve = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchProducts(1, 16);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.elementToObserve.current) {\r\n            this.observer.observe(this.elementToObserve.current)\r\n        }\r\n    }\r\n\r\n    fetchProducts(page, limit, categories = 1) {\r\n        this.props.dispatch(actions.setLoading(true));\r\n        fetch(`/api/products?page=${page}&limit=${limit}&categories=${categories}`)\r\n            .then(result => result.json())\r\n            .then(paginatedProducts => {\r\n                paginatedProducts.data = this.props.products.concat(paginatedProducts.data);\r\n                this.props.dispatch(actions.loadProducts(paginatedProducts));\r\n                this.props.dispatch(actions.setLoading(false));\r\n            });\r\n    }\r\n\r\n    loadMoreProductsHandler(entries) {\r\n        if (entries[0].isIntersecting) {\r\n            if (this.props.next) {\r\n                this.fetchProducts(this.props.next.page, this.props.next.limit, this.props.activeCategory)\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.props.products.length > 0) {\r\n            let products = this.props.products.map((product, index) => {\r\n                return (\r\n                    <div className=\"col-6 col-sm-6 col-md-4 col-lg-3 p-0 pr-2 pb-2\" key={index}>\r\n                        <div className=\"card\">\r\n                            <img className=\"card-img-top productImage\" src={product.imagePath} alt=\"Imagen del producto\" />\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title font-weight-bold overflow-hidden text-truncate text-dark\">{product.name}</h5>\r\n                                <h5 className=\"text-danger\">Bs. {product.price}</h5>\r\n                            </div>\r\n                            <div className=\"card-footer\">\r\n                                <div className=\"input-group d-flex justify-content-center\">\r\n                                    <input className=\"form-control text-center\" style={{ maxWidth: \"35%\" }} type=\"number\" defaultValue=\"1\" name=\"numberOfItems\" id=\"numberOfItems\" />\r\n                                    <input className=\"bg-dark text-light\" type=\"button\" value=\"Comprar\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            });\r\n\r\n            if (this.props.next) {\r\n                products.push((\r\n                    <div className=\"col-xs-12 col-sm-6 col-md-4 col-lg-3 p-0 pr-2 pb-2\" key=\"contentLoader\" ref={this.elementToObserve}>\r\n                        <ContentLoader\r\n                            speed={1}\r\n                            viewBox=\"0 0 200 400\"\r\n                            backgroundColor=\"#f3f3f3\"\r\n                            foregroundColor=\"#ecebeb\"\r\n                        >\r\n                            <rect x=\"0\" y=\"6\" rx=\"0\" ry=\"0\" width=\"239\" height=\"250\" />\r\n                            <rect x=\"0\" y=\"292\" rx=\"0\" ry=\"0\" width=\"239\" height=\"15\" />\r\n                            <rect x=\"59\" y=\"291\" rx=\"0\" ry=\"0\" width=\"2\" height=\"0\" />\r\n                            <rect x=\"0\" y=\"313\" rx=\"0\" ry=\"0\" width=\"239\" height=\"15\" />\r\n                            <rect x=\"0\" y=\"361\" rx=\"0\" ry=\"0\" width=\"239\" height=\"36\" />\r\n                        </ContentLoader >\r\n                    </div>\r\n                ))\r\n            }\r\n            products.unshift(<div className=\"col-12\">\r\n                <CategoryTitle />\r\n            </div>)\r\n            return products\r\n        }\r\n        else if (this.props.loading) {\r\n            return <p>Loading</p>\r\n        }\r\n        else {\r\n            return <p>No hay productos</p>\r\n        }\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n    return {\r\n        products: state.products.data,\r\n        next: state.products.next,\r\n        previous: state.products.previous,\r\n        loading: state.products.loading,\r\n        activeCategory: state.categories.activeCategory\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ProductList);","import React, { Component } from \"react\";\r\n\r\nclass BackToTopButton extends Component {\r\n    constructor() {\r\n        super()\r\n        this.backToTopButton = React.createRef();\r\n\r\n        this.state = {\r\n            show: false\r\n        }\r\n\r\n        this.scrollHandler = this.scrollHandler.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener(\"scroll\", this.scrollHandler)\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener('scroll', this.scrollHandler);\r\n    }\r\n    scrollHandler() {\r\n        if (window.scrollY > 100) {\r\n            this.setState({\r\n                show: true\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                show: false\r\n            });\r\n        }\r\n    }\r\n\r\n    clickHandler() {\r\n        window.scrollTo(0, 0);\r\n    }\r\n    render() {\r\n        return this.state.show && <button ref={this.backToTopButton} onClick={this.clickHandler} id=\"back-to-top\" className=\"btn btn-secondary btn-lg back-to-top\">Back to Top</button>\r\n    }\r\n}\r\n\r\nexport default BackToTopButton","async function isAuthenticated() {\r\n    let token = localStorage.getItem(\"jwt\");\r\n    if (!token) return false;\r\n    return fetch(`/sessions/isAuthenticated?token=${token}`)\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            return res.auth;\r\n        });\r\n}\r\n\r\nexport default isAuthenticated","import React, { Component } from \"react\";\r\nimport isAuthenticated from \"../requests/isAuthenticated\"\r\nclass Login extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.onSubmitHandler = this.onSubmitHandler.bind(this);\r\n        this.inputHandler = this.inputHandler.bind(this);\r\n\r\n        this.state = {\r\n            email: null,\r\n            password: null,\r\n            logginError: null\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        isAuthenticated().then(authenticated => {\r\n            if (authenticated) {\r\n                this.props.history.push(\"/\")\r\n            }\r\n        })\r\n    }\r\n    onSubmitHandler(event) {\r\n        event.preventDefault();\r\n        this.setState({\r\n            logginError: null\r\n        })\r\n        fetch(\"/sessions\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                email: this.state.email,\r\n                password: this.state.password\r\n            })\r\n        }).then(result => result.json())\r\n            .then(result => {\r\n                if (result.err) {\r\n                    this.setState({\r\n                        logginError: result.err\r\n                    })\r\n                }\r\n                else {\r\n                    localStorage.setItem(\"jwt\", result.token);\r\n                    this.props.history.push(\"/\");\r\n                }\r\n            });\r\n    }\r\n\r\n    inputHandler(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container h-100 col-10 col-md-4\">\r\n                <div className=\"row h-100 justify-content-center align-items-center\">\r\n                    <form onSubmit={this.onSubmitHandler} className=\"col-12\" action=\"/sessions\" method=\"POST\">\r\n                        <div className=\"form-group\">\r\n                            <input onChange={this.inputHandler} type=\"text\" className=\"form-control\" name=\"email\" id=\"email\" placeholder=\"Email\" />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input onChange={this.inputHandler} type=\"password\" className=\"form-control\" name=\"password\" id=\"password\" placeholder=\"Password\" />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <button className=\"btn btn-primary\" type=\"submit\">Enviar</button>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <p className=\"text-danger\">{this.state.logginError}</p>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Login;","const BASE_URL = \"/api/categories\";\r\n\r\nconst functions = {\r\n    fetchAll: async function () {\r\n        let categories = await fetch(BASE_URL, {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        })\r\n\r\n        let response = await categories.json();\r\n\r\n        return response;\r\n    },\r\n    fetchById: async function (id) {\r\n        let category = await fetch(BASE_URL + `?id=${id}`, {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        })\r\n\r\n        let response = await category.json();\r\n\r\n        return response;\r\n    },\r\n    fetchByName: async function (name) {\r\n        let categories = await fetch(BASE_URL + `?name=${name}`, {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        })\r\n\r\n        let response = await categories.json();\r\n\r\n        return response;\r\n    },\r\n    create: async function (category) {\r\n        let newCategory = await fetch(BASE_URL, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(category)\r\n        })\r\n\r\n        let response = await newCategory.json();\r\n\r\n        return response;\r\n    },\r\n    update: async function (category) {\r\n        let newCategory = await fetch(BASE_URL + `/${category.id}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify()\r\n        })\r\n\r\n        let response = await newCategory.json();\r\n\r\n        return response;\r\n    }\r\n}\r\n\r\nexport default functions","import React, { Component } from \"react\";\r\nimport categoriesRequests from \"../requests/categories\";\r\n\r\nimport $ from \"jquery\";\r\nrequire(\"datatables.net\")\r\nclass Categories extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            fetchMessage: null,\r\n            submitMessage: null,\r\n            submitMessageType: null,\r\n            submitLoading: false,\r\n            categoryName: null,\r\n            categoryAction: null,\r\n            selectedRowData: null\r\n        }\r\n        this.submitHandler = this.submitHandler.bind(this);\r\n        this.changeHandler = this.changeHandler.bind(this);\r\n\r\n        this.categoriesTable = React.createRef();\r\n\r\n        this.addButton = {\r\n            text: 'Add',\r\n            name: 'add',\r\n            className: \"btn btn-success\",\r\n            attr: {\r\n                \"data-toggle\": \"modal\",\r\n                \"data-target\": \"#categoryModal\"\r\n            },\r\n            action: (e, datatable, node, config) => {\r\n                $(\".modal-title\").text(\"Add new category\");\r\n                $(\"#categoryName\").val(\"\");\r\n                this.setState({\r\n                    categoryAction: \"Add\"\r\n                })\r\n            }\r\n        }\r\n\r\n        this.editButton = {\r\n            text: 'Edit',\r\n            name: 'edit',\r\n            className: \"btn btn-secondary\",\r\n            extend: \"selected\",\r\n            attr: {\r\n                \"data-toggle\": \"modal\",\r\n                \"data-target\": \"#categoryModal\"\r\n            },\r\n            action: (e, datatable, node, config) => {\r\n                let selectedRowData = datatable.row({ selected: true }).data();\r\n                $(\".modal-title\").text(\"Edit category\");\r\n                $(\"#categoryName\").val(selectedRowData.name);\r\n                this.setState({\r\n                    categoryAction: \"Edit\",\r\n                    selectedRowData\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let response = await categoriesRequests.fetchAll();\r\n        if (response.data) {\r\n            $(this.categoriesTable.current).DataTable({\r\n                data: response.data,\r\n                columns: [\r\n                    { title: \"ID\", data: \"id\" },\r\n                    { title: \"Nombre\", data: \"name\" },\r\n                    { title: \"Fecha creación\", data: \"createdAt\" }\r\n                ],\r\n                dom: \"Blftip\",\r\n                buttons: [this.addButton, this.editButton],\r\n                select: \"single\",\r\n\r\n            })\r\n        }\r\n        else { //error\r\n            this.setState({\r\n                fetchMessage: response.toString()\r\n            })\r\n        }\r\n    }\r\n\r\n    changeHandler(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    submitHandler(event) {\r\n        event.preventDefault();\r\n\r\n        var response = null;\r\n\r\n        this.setState({\r\n            submitLoading: true\r\n        }, async () => {\r\n            if (this.state.categoryAction == \"Add\") {\r\n                response = await categoriesRequests.create({\r\n                    name: this.state.categoryName\r\n                });\r\n\r\n\r\n            }\r\n            else if (this.state.categoryAction == \"Edit\") {\r\n                response = await categoriesRequests.edit({\r\n                    id: this.state.selectedRowData.id,\r\n                    name: this.state.categoryName\r\n                });\r\n\r\n\r\n                let rowData = $(this.categoriesTable.current).DataTable().rows().data();\r\n                rowData.map((row, index) => {\r\n                    if (row.id == this.state.selectedRowData.id) {\r\n                        let row = $(this.categoriesTable.current).DataTable().row(index);\r\n                        let rowData = row.data();\r\n                        row.data({\r\n                            ...rowData,\r\n                            name: this.state.categoryName\r\n                        })\r\n                    }\r\n                })\r\n\r\n            }\r\n\r\n            if (response.error) {\r\n                this.setState({\r\n                    submitMessage: response.error,\r\n                    submitMessageType: \"Error\",\r\n                    submitLoading: false\r\n                })\r\n            }\r\n            else {\r\n                this.setState({\r\n                    submitMessage: \"Se ha registrado con éxito\",\r\n                    submitMessageType: \"Success\",\r\n                    submitLoading: false\r\n                })\r\n                setTimeout(() => {\r\n                    this.setState({\r\n                        submitMessage: null,\r\n                        submitMessageType: null\r\n                    })\r\n                }, 3000);\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.fetchMessage && <span className=\"text-danger\">{this.state.fetchMessage}</span>}\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1 className=\"text-danger float-left\">Categorías</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-3\">\r\n                    <div className=\"col-md-12\">\r\n                        <table ref={this.categoriesTable} id=\"categoriesTable\" name=\"categoriesTable\" className=\"table table-bordered\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal fade\" id=\"categoryModal\" tabindex=\"-1\" aria-labelledby=\"categoryModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog modal-dialog-centered\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"categoryModalLabel\">Add new category</h5>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                    <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n                            <form onSubmit={this.submitHandler}>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"name\">Category Name: </label>\r\n                                        <input onChange={this.changeHandler} className=\"form-control\" type=\"text\" name=\"categoryName\" id=\"categoryName\" required />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Cerrar</button>\r\n                                    <button type=\"submit\" className=\"btn btn-primary\">\r\n                                        {this.state.submitLoading && <span className=\"spinner-border spinner-border-sm mr-2\" role=\"status\" aria-hidden=\"true\" />}\r\n                                        Enviar</button>\r\n                                </div>\r\n                                {this.state.submitMessage && <span className={(this.state.submitMessageType == \"Error\") ? \"text-danger\" : \"text-success\"}>{this.state.submitMessage}</span>}\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\nexport default Categories;","const BASE_URL = \"/api/clients\";\r\n\r\nconst functions = {\r\n    fetchAll: async function () {\r\n        let clients = await fetch(BASE_URL, {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        })\r\n\r\n        let response = await clients.json();\r\n\r\n        return response;\r\n    },\r\n    fetchById: async function (id) {\r\n        let client = await fetch(BASE_URL + `?id=${id}`, {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        })\r\n\r\n        let response = await client.json();\r\n\r\n        return response;\r\n    },\r\n    fetchByName: async function (name) {\r\n        let clients = await fetch(BASE_URL + `?name=${name}`, {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        })\r\n\r\n        let response = await clients.json();\r\n\r\n        return response;\r\n    },\r\n    create: async function (client) {\r\n        let newClient = await fetch(BASE_URL, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(client)\r\n        })\r\n\r\n        let response = await newClient.json();\r\n\r\n        return response;\r\n    },\r\n    update: async function (client) {\r\n        let response = await fetch(BASE_URL + `/${client.id}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(client)\r\n        })\r\n\r\n        let clients = await response.json();\r\n\r\n        return clients;\r\n    }\r\n}\r\n\r\nexport default functions","import React, { Component } from \"react\";\r\nimport clientRequests from \"../requests/clients\";\r\nimport $ from \"jquery\";\r\n\r\nrequire(\"datatables.net\")\r\nclass Clients extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            fetchMessage: null,\r\n            submitMessage: null,\r\n            submitMessageType: null,\r\n            submitLoading: false,\r\n            name: null,\r\n            cedula: null,\r\n            phoneNumber: null,\r\n            selectedRowData: null,\r\n            clientAction: null\r\n\r\n        }\r\n        this.submitHandler = this.submitHandler.bind(this);\r\n        this.changeHandler = this.changeHandler.bind(this);\r\n        this.optionChangeHandler = this.optionChangeHandler.bind(this);\r\n\r\n        this.clientTable = React.createRef();\r\n        this.customSelectRef = React.createRef();\r\n\r\n        this.addButton = {\r\n            text: 'Add',\r\n            name: 'add',\r\n            className: \"btn btn-success\",\r\n            attr: {\r\n                \"data-toggle\": \"modal\",\r\n                \"data-target\": \"#clientModal\"\r\n            },\r\n            action: (e, datatable, node, config) => {\r\n                $(\".modal-title\").text(\"Add new client\");\r\n                $(\"#name\").val(\"\");\r\n                $(\"#cedula\").val(\"\");\r\n                $(\"#phoneNumber\").val(\"\");\r\n                this.setState({\r\n                    clientAction: \"Add\"\r\n                })\r\n            }\r\n        }\r\n\r\n        this.editButton = {\r\n            text: 'Edit',\r\n            name: 'edit',\r\n            className: \"btn btn-secondary\",\r\n            extend: \"selected\",\r\n            attr: {\r\n                \"data-toggle\": \"modal\",\r\n                \"data-target\": \"#clientModal\"\r\n            },\r\n            action: (e, datatable, node, config) => {\r\n                let selectedRowData = datatable.row({ selected: true }).data();\r\n                $(\".modal-title\").text(\"Edit client\");\r\n                $(\"#name\").val(selectedRowData.name);\r\n                $(\"#cedula\").val(selectedRowData.cedula);\r\n                $(\"#phoneNumber\").val(selectedRowData.phoneNumber);\r\n                this.setState({\r\n                    clientAction: \"Edit\",\r\n                    selectedRowData,\r\n                    name: selectedRowData.name,\r\n                    cedula: selectedRowData.cedula,\r\n                    phoneNumber: selectedRowData.phoneNumber\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let response = await clientRequests.fetchAll();\r\n        if (response.data) {\r\n            console.log(response.data);\r\n            $(this.clientTable.current).DataTable({\r\n                data: response.data,\r\n                columns: [\r\n                    { title: \"ID\", data: \"id\" },\r\n                    { title: \"Nombre\", data: \"name\" },\r\n                    { title: \"Cédula\", data: \"cedula\" },\r\n                    { title: \"Teléfono\", data: \"phoneNumber\" },\r\n                    { title: \"Fecha creación\", data: \"createdAt\" }\r\n                ],\r\n                dom: \"Blftip\",\r\n                buttons: [this.addButton, this.editButton],\r\n                select: \"single\",\r\n                order: [0, \"DESC\"]\r\n            })\r\n        }\r\n        else { //error\r\n            this.setState({\r\n                fetchMessage: response.toString()\r\n            })\r\n        }\r\n    }\r\n\r\n    changeHandler(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    optionChangeHandler(selectedOption, actionType) {\r\n        this.setState({\r\n            selectedClient: selectedOption\r\n        })\r\n    }\r\n\r\n    submitHandler(event) {\r\n        event.preventDefault();\r\n\r\n        var response = null;\r\n\r\n        this.setState({\r\n            submitLoading: true\r\n        }, async () => {\r\n            if (this.state.clientAction == \"Add\") {\r\n                response = await clientRequests.create({\r\n                    name: this.state.name,\r\n                    cedula: this.state.cedula,\r\n                    phoneNumber: this.state.phoneNumber\r\n                });\r\n            }\r\n            else if (this.state.clientAction == \"Edit\") {\r\n                console.log(this.state);\r\n                response = await clientRequests.update({\r\n                    id: this.state.selectedRowData.id,\r\n                    name: this.state.name,\r\n                    cedula: this.state.cedula,\r\n                    phoneNumber: this.state.phoneNumber\r\n                });\r\n                let rowData = $(this.clientTable.current).DataTable().rows().data();\r\n                rowData.map((row, index) => {\r\n                    if (row.id == this.state.selectedRowData.id) {\r\n                        let row = $(this.clientTable.current).DataTable().row(index);\r\n                        let rowData = row.data();\r\n                        row.data({\r\n                            ...rowData,\r\n                            name: this.state.name,\r\n                            cedula: this.state.cedula,\r\n                            phoneNumber: this.state.phoneNumber\r\n                        })\r\n                    }\r\n                })\r\n\r\n            }\r\n\r\n            if (response && response.error) {\r\n                this.setState({\r\n                    submitMessage: JSON.stringify(response.error),\r\n                    submitMessageType: \"Error\",\r\n                    submitLoading: false\r\n                })\r\n            }\r\n            else {\r\n                this.setState({\r\n                    submitMessage: \"Se ha registrado con éxito\",\r\n                    submitMessageType: \"Success\",\r\n                    submitLoading: false\r\n                })\r\n                setTimeout(() => {\r\n                    this.setState({\r\n                        submitMessage: null,\r\n                        submitMessageType: null\r\n                    })\r\n                }, 3000);\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.fetchMessage && <span className=\"text-danger\">{this.state.fetchMessage}</span>}\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1 className=\"text-danger float-left\">Clientes</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-3\">\r\n                    <div className=\"col-md-12\">\r\n                        <table ref={this.clientTable} id=\"clientTable\" name=\"clientTable\" className=\"table table-bordered\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal fade\" id=\"clientModal\" tabindex=\"-1\" aria-labelledby=\"clientModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog modal-dialog-centered\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"clientModalLabel\">Add new client</h5>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                    <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n                            <form onSubmit={this.submitHandler}>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>Nombre: </label>\r\n                                        <input onChange={this.changeHandler} type=\"text\" className=\"form-control\" name=\"name\" id=\"name\" required />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Cédula: </label>\r\n                                        <input onChange={this.changeHandler} type=\"text\" className=\"form-control\" name=\"cedula\" id=\"cedula\" required />\r\n                                    </div>\r\n                                    <label htmlFor=\"debtTotal\">Teléfono: </label>\r\n                                    <input onChange={this.changeHandler} type=\"text\" className=\"form-control\" name=\"phoneNumber\" id=\"phoneNumber\" />\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Cerrar</button>\r\n                                    <button type=\"submit\" className=\"btn btn-primary\">\r\n                                        {this.state.submitLoading && <span className=\"spinner-border spinner-border-sm mr-2\" role=\"status\" aria-hidden=\"true\" />}\r\n                                        Enviar</button>\r\n                                </div>\r\n                                {this.state.submitMessage && <span className={(this.state.submitMessageType == \"Error\") ? \"text-danger\" : \"text-success\"}>{this.state.submitMessage}</span>}\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\nexport default Clients;","import React, { Component } from \"react\";\r\n\r\nimport moment from \"moment\";\r\nimport ResourceTable from \"./ResourceTable\";\r\nclass Sales extends Component {\r\n    constructor() {\r\n        super()\r\n        this.submitHandler = this.submitHandler.bind(this);\r\n        this.roundToNiceNumber = this.roundToNiceNumber.bind(this);\r\n        this.childFormat = this.childFormat.bind(this);\r\n    }\r\n\r\n    submitHandler(event) {\r\n        event.preventDefault()\r\n        console.log(\"hola\");\r\n    }\r\n\r\n    roundToNiceNumber(value) {\r\n        var val = 0;\r\n        if (value.toString().length == 4) {\r\n            val = Math.ceil(value / 100) * 100\r\n        }\r\n        else if (value.toString().length > 4) {\r\n            val = Math.ceil(value / 1000) * 1000\r\n        }\r\n\r\n        return val;\r\n    }\r\n\r\n    childFormat(d) {\r\n        let childRowInfo = \"\";\r\n        d.saleProducts.forEach(saleProduct => {\r\n            childRowInfo += `\r\n            <div class='form-row align-items-center'>\r\n                    <div class=\"col-1\">\r\n                        <label for=\"productId\">Product ID</label>\r\n                        <input class=\"form-control\" id=\"productId\" value=\"${saleProduct.productId}\" disabled/>\r\n                    </div>\r\n                    <div class=\"col-4\">\r\n                        <label for=\"productName\">Name</label>\r\n                        <input class=\"form-control\" id=\"productName\" value=\"${saleProduct.product[0].name}\" disabled/>\r\n                    </div>\r\n                    <div class=\"col-1\">\r\n                        <label for=\"productPrice\">Price $</label>\r\n                        <input class=\"form-control\" id=\"productPrice\" value=\"$${saleProduct.price}\" disabled/>\r\n                    </div>\r\n                    <div class=\"col-1\">\r\n                        <label for=\"productPriceBs\">Price Bs</label>\r\n                        <input class=\"form-control\" id=\"productPriceBs\" value=\"Bs.S ${this.roundToNiceNumber(saleProduct.price * saleProduct.dolarReference)}\" disabled/>\r\n                    </div>\r\n                    <div class=\"col-1\">\r\n                        <label for=\"discount\">Discount</label>\r\n                        <input class=\"form-control\" id=\"discount\" value=\"${saleProduct.discount}%\" disabled/>\r\n                    </div>\r\n                    <div class=\"col-1\">\r\n                        <label for=\"productQuantity\">Quantity</label>\r\n                        <input class=\"form-control\" id=\"productQuantity\" value=\"${saleProduct.quantity}\" disabled/>\r\n                    </div>\r\n                    <div class=\"col-2\">\r\n                        <label for=\"dolarValue\">Dolar value</label>\r\n                        <input class=\"form-control\" id=\"dolarValue\" value=\"${Intl.NumberFormat(\"es-VE\", { style: \"currency\", currency: \"VES\" }).format(saleProduct.dolarReference)}\" disabled/>\r\n                    </div>\r\n            </div>\r\n            `\r\n        })\r\n        childRowInfo += \"\"\r\n        return childRowInfo\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1 className=\"text-danger float-left\">Ventas</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-3\">\r\n                    <div className=\"col-md-12\">\r\n                        <ResourceTable asyncTable={true} childFormat={this.childFormat} sourceURL={\"/api/sales\"} columns={[\r\n                            { title: \"ID\", data: \"id\" },\r\n                            {\r\n                                \"title\": \"Productos\",\r\n                                \"className\": 'details-control',\r\n                                \"orderable\": false,\r\n                                \"data\": \"productName\",\r\n                                defaultContent: '<button class=\"btn btn-success\">Ver Productos</button>'\r\n                            },\r\n                            { title: \"Fecha creación\", data: \"createdAt\" }\r\n\r\n                        ]} actions={[\"edit\", \"delete\"]} />\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Sales;","import React, { Component } from \"react\";\r\nimport moment from \"moment\";\r\nimport ResourceTable from \"./ResourceTable\";\r\n\r\nimport $ from \"jquery\";\r\nimport DataTable from \"datatables.net\";\r\nclass Suppliers extends Component {\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {\r\n            name: null,\r\n            rif: null,\r\n            success: null,\r\n            error: null\r\n        }\r\n        this.submitHandler = this.submitHandler.bind(this);\r\n        this.inputChangeHandler = this.inputChangeHandler.bind(this);\r\n        this.setModalAction = this.setModalAction.bind(this);\r\n\r\n    }\r\n\r\n    setModalAction(modalAction) {\r\n        this.setState({\r\n            modalAction\r\n        })\r\n    }\r\n\r\n    submitHandler(event) {\r\n        event.preventDefault();\r\n        if (this.state.name && this.state.rif) {\r\n            fetch(\"/api/suppliers\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                    name: this.state.name,\r\n                    rif: this.state.rif\r\n                })\r\n            })\r\n                .then(res => {\r\n                    if (res.status == 200) {\r\n                        this.setState({\r\n                            success: \"Se ha registrado de forma exitosa.\"\r\n                        });\r\n                        $(\"#resourceTable\").DataTable().draw();\r\n                    }\r\n                    else {\r\n                        res.text().then(error => {\r\n                            this.setState({\r\n                                error\r\n                            })\r\n                        })\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n    inputChangeHandler(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1 className=\"text-danger float-left\">Proveedores</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-3\">\r\n                    <div className=\"col-md-12\">\r\n                        <ResourceTable asyncTable={true} setModalAction={this.setModalAction} sourceURL={\"/api/suppliers\"} columns={[\r\n                            { title: \"ID\", data: \"id\" },\r\n                            { title: \"Nombre\", data: \"name\" },\r\n                            { title: \"RIF\", data: \"rif\" },\r\n                            { title: \"Fecha creación\", data: \"createdAt\" }\r\n\r\n                        ]} actions={[\"add\", \"edit\", \"delete\"]} modalStructure={\r\n                            <form onSubmit={this.submitHandler} className=\"float-left\">\r\n                                <div className=\"modal-header\">\r\n                                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">New Supplier</h5>\r\n                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                        <span aria-hidden=\"true\">&times;</span>\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"name\">Supplier Name: </label>\r\n                                        <input onChange={this.inputChangeHandler} className=\"form-control\" type=\"text\" name=\"name\" id=\"name\" required />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"rif\">RIF: </label>\r\n                                        <input onChange={this.inputChangeHandler} className=\"form-control\" type=\"text\" name=\"rif\" id=\"rif\" required />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Cerrar</button>\r\n                                    <button type=\"submit\" className=\"btn btn-primary\">Enviar</button>\r\n                                </div>\r\n                                {this.state.success && <span className=\"text-success\">{this.state.success}</span>}\r\n                                {this.state.error && <span className=\"text-danger\">{this.state.error}</span>}\r\n                            </form>\r\n                        } />\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Suppliers;","import React, { Component } from \"react\";\r\nimport moment from \"moment\";\r\nimport ResourceTable from \"./ResourceTable\";\r\nimport CustomSelect from \"../globalComponents/CustomSelect\";\r\n\r\nimport $ from \"jquery\";\r\nconst DataTable = require('datatables.net');\r\n\r\nclass Supplyings extends Component {\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {\r\n            supplier: null,\r\n            product: null,\r\n            price: null,\r\n            quantity: null,\r\n            success: null,\r\n            error: null\r\n        }\r\n        this.submitHandler = this.submitHandler.bind(this);\r\n        this.supplierChangeHandler = this.supplierChangeHandler.bind(this);\r\n        this.productChangeHandler = this.productChangeHandler.bind(this);\r\n        this.inputChangeHandler = this.inputChangeHandler.bind(this);\r\n        this.setModalAction = this.setModalAction.bind(this);\r\n\r\n        this.supplierSelect = React.createRef();\r\n        this.productSelect = React.createRef();\r\n        this.supplyingForm = React.createRef();\r\n\r\n    }\r\n\r\n    setModalAction(modalAction) {\r\n        this.setState({\r\n            modalAction\r\n        })\r\n    }\r\n\r\n    supplierChangeHandler(selectedOption) {\r\n        this.setState({\r\n            supplier: selectedOption\r\n        });\r\n    }\r\n\r\n    productChangeHandler(selectedOption) {\r\n        this.setState({\r\n            product: selectedOption\r\n        });\r\n    }\r\n\r\n    inputChangeHandler(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n    submitHandler(event) {\r\n        event.preventDefault();\r\n        if (this.state.supplier && this.state.product && this.state.price && this.state.quantity) {\r\n            fetch(\"/api/supplyings\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                    supplierId: this.state.supplier.id,\r\n                    productId: this.state.product.id,\r\n                    price: this.state.price,\r\n                    quantity: this.state.quantity,\r\n                    dolarReference: this.props.dolarReference\r\n                })\r\n            }).then(res => {\r\n                if (res.status == 200) {\r\n                    this.setState({\r\n                        success: \"Se ha registrado el abastecimiento con éxito\"\r\n                    })\r\n                    this.supplyingForm.current.reset();\r\n                    $(\"#resourceTable\").DataTable().draw();\r\n                }\r\n                else {\r\n                    res.text().then(error => {\r\n                        this.setState({\r\n                            error\r\n                        })\r\n                    })\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            alert(\"Por favor rellene todos los campos\")\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1 className=\"text-danger float-left\">Abastecimiento</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-3\">\r\n                    <div className=\"col-md-12\">\r\n                        <ResourceTable asyncTable={true} setModalAction={this.setModalAction} sourceURL={\"/api/supplyings\"} columns={[\r\n                            { title: \"ID\", data: \"id\" },\r\n                            { title: \"ID Proveedor\", data: \"supplierId\" },\r\n                            { title: \"Nombre Proveedor\", data: \"supplier.name\" },\r\n                            { title: \"ID Product\", data: \"productId\" },\r\n                            { title: \"Nombre Producto\", data: \"product.name\" },\r\n                            {\r\n                                render: function (data) {\r\n                                    return \"$\" + data\r\n                                }, title: \"Precio de Compra\", data: \"price\"\r\n                            },\r\n                            {\r\n                                render: function (data) {\r\n                                    return (data > 1) ? data + \" Unidades\" : data + \" Unidad\"\r\n                                }, title: \"Cantidad\", data: \"quantity\"\r\n                            },\r\n                            { title: \"Fecha creación\", data: \"createdAt\" },\r\n                            { title: \"Fecha actualización\", data: \"updatedAt\" }\r\n\r\n                        ]} actions={[\"add\", \"edit\", \"delete\"]} modalStructure={\r\n                            <form ref={this.supplyingForm} onSubmit={this.submitHandler} className=\"float-left\">\r\n                                <div className=\"modal-header\">\r\n                                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">New Supplying</h5>\r\n                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                        <span aria-hidden=\"true\">&times;</span>\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"supplierId\">Supplier ID: </label>\r\n                                        <CustomSelect sourceURL=\"/api/suppliers\"\r\n                                            isMulti={false}\r\n                                            innerRef={this.supplierSelect}\r\n                                            changeHandler={this.supplierChangeHandler} required />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"productId\">Product ID: </label>\r\n                                        <CustomSelect\r\n                                            isMulti={false}\r\n                                            innerRef={this.productSelect}\r\n                                            changeHandler={this.productChangeHandler} required />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"price\">Price: </label>\r\n                                        <input onChange={this.inputChangeHandler} className=\"form-control\" type=\"number\" step=\"0.00000000000000001\" name=\"price\" id=\"price\" required />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"quantity\">Quantity: </label>\r\n                                        <input onChange={this.inputChangeHandler} className=\"form-control\" type=\"number\" step=\"0.1\" name=\"quantity\" id=\"quantity\" required />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Cerrar</button>\r\n                                    <button type=\"submit\" className=\"btn btn-primary\">Enviar</button>\r\n                                </div>\r\n                                {this.state.success && <span className=\"text-success\">{this.state.success}</span>}\r\n                                {this.state.error && <span className=\"text-danger\">{this.state.error}</span>}\r\n                            </form>\r\n                        } />\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Supplyings;","import React, { Component } from \"react\";\r\nimport moment from \"moment\";\r\nimport ResourceTable from \"./ResourceTable\";\r\n\r\nimport $ from \"jquery\";\r\nimport DataTable from \"datatables.net\";\r\n\r\nclass Users extends Component {\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {\r\n            email: null,\r\n            password: null,\r\n            permissions: null,\r\n            success: null,\r\n            error: null\r\n        }\r\n\r\n        this.submitHandler = this.submitHandler.bind(this);\r\n\r\n        this.inputChangeHandler = this.inputChangeHandler.bind(this);\r\n\r\n        this.form = React.createRef();\r\n    }\r\n\r\n    submitHandler(event) {\r\n        event.preventDefault();\r\n\r\n        if (this.state.email && this.state.password && this.state.permissions) {\r\n\r\n            fetch(\"/api/users\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                    email: this.state.email,\r\n                    password: this.state.password,\r\n                    permissions: this.state.permissions\r\n                })\r\n            }).then(res => {\r\n                if (res.status == 200) {\r\n                    this.setState({\r\n                        success: \"Se ha registrado con éxito\"\r\n                    });\r\n                    this.form.current.reset();\r\n                    $(\"resourceTable\").DataTable().draw();\r\n                }\r\n                else {\r\n                    res.text().then(error => {\r\n                        this.setState({\r\n                            error\r\n                        })\r\n                    })\r\n                }\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    inputChangeHandler(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1 className=\"text-danger float-left\">Usuarios</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-3\">\r\n                    <div className=\"col-md-12\">\r\n                        <ResourceTable asyncTable={true} sourceURL={\"/api/users\"} columns={[\r\n                            { title: \"ID\", data: \"id\" },\r\n                            { title: \"Email\", data: \"email\" },\r\n                            { title: \"Permisos\", data: \"permissions\" },\r\n                            { title: \"Fecha creación\", data: \"createdAt\" }\r\n\r\n                        ]} actions={[\"add\", \"delete\"]} modalStructure={\r\n                            <form ref={this.form} onSubmit={this.submitHandler} className=\"float-left\">\r\n                                <div className=\"modal-header\">\r\n                                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">New Supplier</h5>\r\n                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                        <span aria-hidden=\"true\">&times;</span>\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"email\">Email: </label>\r\n                                        <input onChange={this.inputChangeHandler} className=\"form-control\" type=\"text\" name=\"email\" id=\"email\" required />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"password\">Password: </label>\r\n                                        <input onChange={this.inputChangeHandler} className=\"form-control\" type=\"password\" name=\"password\" id=\"password\" required />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"permissions\">Permissions: </label>\r\n                                        <input onChange={this.inputChangeHandler} className=\"form-control\" type=\"text\" name=\"permissions\" id=\"permissions\" required />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Cerrar</button>\r\n                                    <button type=\"submit\" className=\"btn btn-primary\">Enviar</button>\r\n                                </div>\r\n                                {this.state.success && <span className=\"text-success\">{this.state.success}</span>}\r\n                                {this.state.error && <span className=\"text-danger\">{this.state.error}</span>}\r\n                            </form>\r\n                        } />\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Users;","import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nclass Navigation extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.clickHandler = this.clickHandler.bind(this);\r\n        this.logout = this.logout.bind(this);\r\n    }\r\n\r\n    logout() {\r\n        localStorage.removeItem(\"jwt\");\r\n    }\r\n\r\n    clickHandler(event) {\r\n        this.setState({\r\n            activeNavLink: event.target.innerText\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark flex-lg-column flex-xl-row\">\r\n                <a className=\"navbar-brand text-danger\" href=\"/\">Supermercado Melquisedec</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n\r\n                <div className=\"collapse navbar-collapse row p-0 m-0\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav flex-lg-row mx-auto container-fluid p-0 m-0\">\r\n                        <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\r\n                            <NavLink className=\"nav-link\" onClick={this.clickHandler} to=\"/control-de-ventas\"><span className=\"d-md-inline\">Control de Ventas</span></NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\r\n                            <NavLink className=\"nav-link\" onClick={this.clickHandler} to=\"/inventario\"><span className=\"d-md-inline\">Inventario</span></NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\r\n                            <NavLink className=\"nav-link\" onClick={this.clickHandler} to=\"/reportes\"><span className=\"d-md-inline\">Reportes</span></NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\r\n                            <NavLink className=\"nav-link\" onClick={this.clickHandler} to=\"/deuda\"><span className=\"d-md-inline\">Deuda</span></NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\r\n                            <NavLink className=\"nav-link\" onClick={this.clickHandler} to=\"/categorias\"><span className=\"d-md-inline\">Categorías</span></NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\r\n                            <NavLink className=\"nav-link\" onClick={this.clickHandler} to=\"/clientes\"><span className=\"d-md-inline\">Clientes</span></NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\r\n                            <NavLink className=\"nav-link\" onClick={this.clickHandler} to=\"/productos\"><span className=\"d-md-inline\">Productos</span></NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\r\n                            <NavLink className=\"nav-link\" onClick={this.clickHandler} to=\"/ventas\"><span className=\"d-md-inline\">Ventas</span></NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\r\n                            <NavLink className=\"nav-link\" onClick={this.clickHandler} to=\"/abastecimiento\"><span className=\"d-md-inline\">Abastecimiento</span></NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\r\n                            <NavLink className=\"nav-link\" onClick={this.clickHandler} to=\"/proveedores\"><span className=\"d-md-inline\">Proveedores</span></NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\r\n                            <NavLink className=\"nav-link\" onClick={this.clickHandler} to=\"/usuarios\"><span className=\"d-md-inline\">Usuarios</span></NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\r\n                            <NavLink className=\"nav-link btn btn-danger px-0\" onClick={this.logout} to=\"/signin\">Cerrar Sesión</NavLink>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navigation;","import React, { Component } from \"react\";\r\n\r\nimport ResourceTable from \"./ResourceTable\";\r\n\r\nclass Inventory extends Component {\r\n\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1 className=\"text-danger float-left\">Inventario</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-3\">\r\n                    <div className=\"col-md-12\">\r\n                        <ResourceTable asyncTable={true} sourceURL={\"/api/inventory\"} columns={[\r\n                            { title: \"Product ID\", data: \"id\" },\r\n                            { title: \"Nombre Producto\", data: \"name\" },\r\n                            {\r\n                                title: \"Inventario\", data: \"stock\", render: function (data, type, row) {\r\n                                    if (data <= 0) {\r\n                                        return `<span class=\"text-danger\">${data}</span>`\r\n                                    }\r\n                                    return `<span class=\"text-success\">${data}</span>`\r\n                                }\r\n                            },\r\n                            { title: \"Total productos vendidos\", data: \"salesTotal\" },\r\n                            { title: \"Total productos comprados\", data: \"supplyingsTotal\" }\r\n                        ]} actions={[]} />\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Inventory;","import React, { Component } from \"react\"\r\nimport ResourceTable from \"./ResourceTable\";\r\n\r\nconst moment = require(\"moment\");\r\n\r\nconst $ = require(\"jquery\");\r\nconst DataTable = require(\"datatables.net\");\r\n\r\nclass Reports extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            resource: \"sales\",\r\n            parameters: \"\"\r\n        }\r\n\r\n        this.submitHandler = this.submitHandler.bind(this);\r\n        this.changeHandler = this.changeHandler.bind(this);\r\n\r\n        this.reportForm = React.createRef();\r\n        this.resourceTable = React.createRef();\r\n    }\r\n\r\n    changeHandler(event) {\r\n        let dateRangeFromValue = document.body.querySelector(\"#rangeDateFrom\").value;\r\n        let dateRangeToValue = document.body.querySelector(\"#rangeDateTo\").value;\r\n        let greaterThanDate = document.body.querySelector(\"#greaterThanDate\").value;\r\n        let lowerThanDate = document.body.querySelector(\"#lowerThanDate\").value;\r\n        let equalDate = document.body.querySelector(\"#equalDate\").value;\r\n\r\n        var previousParameters = this.state.parameters;\r\n        var parameters = \"\";\r\n        if (event.target.name == \"dateRadios\") {\r\n            $(\"form\").find(\"input[type=date]\").val(\"\");\r\n            switch (event.target.id) {\r\n                case \"today\":\r\n                    parameters = `from=${moment(new Date()).format(\"YYYY-MM-DD\")}&to=${moment(new Date()).format(\"YYYY-MM-DD\")}`\r\n                    break;\r\n                case \"yesterday\":\r\n                    parameters = `from=${moment(new Date()).subtract(1, \"days\").format(\"YYYY-MM-DD\")}&to=${moment(new Date()).subtract(1, \"days\").format(\"YYYY-MM-DD\")}`\r\n                    break;\r\n                case \"lastWeek\":\r\n                    parameters = `from=${moment(new Date()).subtract(7, \"days\").format(\"YYYY-MM-DD\")}&to=${moment(new Date()).format(\"YYYY-MM-DD\")}`\r\n                    break;\r\n                case \"fortnight\":\r\n                    parameters = `from=${moment(new Date()).subtract(15, \"days\").format(\"YYYY-MM-DD\")}&to=${moment(new Date()).format(\"YYYY-MM-DD\")}`\r\n                    break;\r\n                case \"month\":\r\n                    parameters = `from=${moment(new Date()).subtract(1, \"months\").format(\"YYYY-MM-DD\")}&to=${moment(new Date()).format(\"YYYY-MM-DD\")}`\r\n                    break;\r\n                case \"quarter\":\r\n                    parameters = `from=${moment(new Date()).subtract(3, \"months\").format(\"YYYY-MM-DD\")}&to=${moment(new Date()).format(\"YYYY-MM-DD\")}`\r\n                    break;\r\n                case \"semester\":\r\n                    parameters = `from=${moment(new Date()).subtract(6, \"months\").format(\"YYYY-MM-DD\")}&to=${moment(new Date()).format(\"YYYY-MM-DD\")}`\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            parameters += \"&group=true\"\r\n        }\r\n        else if (event.target.name == \"reportType\") {\r\n            this.setState({\r\n                resource: event.target.id,\r\n                parameters: \"\"\r\n            }, function () {\r\n                this.setState({\r\n                    parameters: previousParameters\r\n                })\r\n            });\r\n            return;\r\n        }\r\n        else {\r\n            $(\"form\").find(\"input[name=dateRadios]\").prop(\"checked\", false);\r\n            $(\"form\").find(\"input[type=date]\").val(\"\");\r\n            switch (event.target.id) {\r\n                case \"greaterThanDate\":\r\n                    parameters = `createdAt=${greaterThanDate}&operation=gte`\r\n                    event.target.value = greaterThanDate;\r\n                    break;\r\n                case \"lowerThanDate\":\r\n                    parameters = `createdAt=${lowerThanDate}&operation=lte`\r\n                    event.target.value = lowerThanDate;\r\n                    break;\r\n                case \"equalDate\":\r\n                    parameters = `createdAt=${equalDate}&operation=eq`\r\n                    event.target.value = equalDate;\r\n                    break;\r\n                case \"rangeDateFrom\":\r\n                    if (dateRangeToValue) {\r\n                        parameters = `from=${moment(dateRangeFromValue || \"\").format(\"YYYY-MM-DD\")}&to=${dateRangeToValue}`\r\n                    }\r\n                    else {\r\n                        parameters = `from=${moment(dateRangeFromValue || \"\").format(\"YYYY-MM-DD\")}`\r\n                    }\r\n                    event.target.value = dateRangeFromValue;\r\n                    $(\"#rangeDateTo\").val(dateRangeToValue);\r\n                    break;\r\n                case \"rangeDateTo\":\r\n                    if (dateRangeFromValue) {\r\n                        parameters = `from=${dateRangeFromValue}&to=${moment(dateRangeToValue || \"\").format(\"YYYY-MM-DD\")}`\r\n                    }\r\n                    else {\r\n                        parameters = `to=${moment(dateRangeToValue || \"\").format(\"YYYY-MM-DD\")}`\r\n                    }\r\n                    event.target.value = dateRangeToValue;\r\n                    $(\"#rangeDateFrom\").val(dateRangeFromValue);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            parameters += \"&group=true\"\r\n        }\r\n        this.setState({\r\n            parameters\r\n        });\r\n    }\r\n    componentDidUpdate() {\r\n        if (this.resourceTable.current) {\r\n            this.resourceTable.current.changeSourceURL(`/api/${this.state.resource}?${this.state.parameters}`);\r\n        }\r\n    }\r\n    submitHandler(event) {\r\n        event.preventDefault();\r\n        this.reportForm.current.reset();\r\n    }\r\n    render() {\r\n        var salesColumns = [\r\n            /*\r\n            {\r\n                render: function (data, type, row, meta) {\r\n                    return `<img src=\"${row.product.imagePath}\" style=\"max-width:35px;\"/>`\r\n                },\r\n                title: \"Imagen\", data: \"product.imagePath\"\r\n            },\r\n            */\r\n            { title: \"Product ID\", data: \"product.id\" },\r\n            { title: \"Nombre\", data: \"product.name\" },\r\n            //{ title: \"Transacciones\", data: \"transactions\" },\r\n            { title: \"Cantidad de productos\", data: \"salesTotal\" },\r\n            {\r\n                render: function (data, type, row, meta) {\r\n                    return Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(row.grossTotalDollars)\r\n                }, title: (this.state.resource == \"sales\") ? \"Ganancia bruta $\" : \"Costo bruto $\", data: \"grossTotalDollars\"\r\n            },\r\n            {\r\n                render: function (data, type, row, meta) {\r\n                    return Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(row.grossTotalBs)\r\n                }, title: (this.state.resource == \"sales\") ? \"Ganancia bruta Bs\" : \"Costo bruto Bs\", data: \"grossTotalBs\"\r\n            },\r\n            {\r\n                render: function (data, type, row, meta) {\r\n                    return Intl.NumberFormat('en-US', {\r\n                        style: 'currency',\r\n                        currency: 'USD',\r\n                    }).format(row.netIncomeDollars)\r\n                }, title: (this.state.resource == \"sales\") ? \"Ganancia Neta $\" : \"Ganancia neta $\", data: \"netIncomeDollars\"\r\n            },\r\n            {\r\n                render: function (data, type, row, meta) {\r\n                    return Intl.NumberFormat('es-VE', {\r\n                        style: 'currency',\r\n                        currency: 'VES',\r\n                    }).format(row.netIncomeBs)\r\n                }, title: (this.state.resource == \"sales\") ? \"Ganancia Neta Bs\" : \"Ganancia Neta Bs\", data: \"netIncomeBs\"\r\n            }\r\n        ];\r\n\r\n        var supplyingsColumns = [\r\n            /*\r\n            {\r\n                render: function (data, type, row, meta) {\r\n                    return `<img src=\"${row.product.imagePath}\" style=\"max-width:35px;\"/>`\r\n                },\r\n                title: \"Imagen\", data: \"product.imagePath\"\r\n            },\r\n            */\r\n            { title: \"Product ID\", data: \"product.id\" },\r\n            { title: \"Nombre\", data: \"product.name\" },\r\n            //{ title: \"Transacciones\", data: \"transactions\" },\r\n            { title: \"Cantidad de productos\", data: \"quantity\" },\r\n            {\r\n                render: function (data, type, row, meta) {\r\n                    return Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(row.grossTotalDollars)\r\n                }, title: (this.state.resource == \"sales\") ? \"Ganancia bruta $\" : \"Costo bruto $\", data: \"grossTotalDollars\"\r\n            },\r\n            {\r\n                render: function (data, type, row, meta) {\r\n                    return Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(row.grossTotalBs)\r\n                }, title: (this.state.resource == \"sales\") ? \"Ganancia bruta Bs\" : \"Costo bruto Bs\", data: \"grossTotalBs\"\r\n            }\r\n        ];\r\n\r\n        return (\r\n            <div className=\"\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1 className=\"text-danger float-left\">Reportes</h1>\r\n                    </div>\r\n                </div>\r\n                <hr />\r\n                <form ref={this.reportForm} onSubmit={this.submitHandler}>\r\n                    <div className=\"col-12\">\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <h3 className=\"mr-4\">Tipo de reporte:</h3>\r\n                        </div>\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input onChange={this.changeHandler} className=\"form-check-input\" type=\"radio\" name=\"reportType\" id=\"supplyings\" value=\"supplyingRadio\" />\r\n                            <label className=\"form-check-label\" htmlFor=\"supplyingRadio\">Compra</label>\r\n                        </div>\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input onChange={this.changeHandler} className=\"form-check-input\" type=\"radio\" name=\"reportType\" id=\"sales\" value=\"saleRadio\" defaultChecked />\r\n                            <label className=\"form-check-label\" htmlFor=\"saleRadio\">Venta</label>\r\n                        </div>\r\n                    </div>\r\n                    <hr className=\"col-12 p-0\" />\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 col-lg-2\">\r\n                            <h5 className=\"mr-4\">Rango de fechas:</h5>\r\n                            <div className=\"form-group\">\r\n                                <input onChange={this.changeHandler} type=\"date\" name=\"rangeDateFrom\" id=\"rangeDateFrom\" />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input onChange={this.changeHandler} type=\"date\" name=\"rangeDateTo\" id=\"rangeDateTo\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12 col-lg-4\">\r\n                            <div className=\"form-check form-check-inline\">\r\n                                <label className=\"btn btn-secondary\" htmlFor=\"semester\" name=\"labelDateRadios\">\r\n                                    <input onChange={this.changeHandler} className=\"form-check-input\" type=\"radio\" name=\"dateRadios\" id=\"semester\" />\r\n                                    6 meses\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"form-check form-check-inline\">\r\n                                <label className=\"btn btn-secondary\" htmlFor=\"quarter\" name=\"labelDateRadios\">\r\n                                    <input onChange={this.changeHandler} className=\"form-check-input\" type=\"radio\" name=\"dateRadios\" id=\"quarter\" />\r\n                                3 meses\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"form-check form-check-inline\">\r\n                                <label className=\"btn btn-secondary\" htmlFor=\"month\" name=\"labelDateRadios\">\r\n                                    <input onChange={this.changeHandler} className=\"form-check-input\" type=\"radio\" name=\"dateRadios\" id=\"month\" />\r\n                                1 mes\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"form-check form-check-inline\">\r\n                                <label className=\"btn btn-secondary\" htmlFor=\"fortnight\" name=\"labelDateRadios\">\r\n                                    <input onChange={this.changeHandler} className=\"form-check-input\" type=\"radio\" name=\"dateRadios\" id=\"fortnight\" />\r\n                                15 días\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"form-check form-check-inline\">\r\n                                <label className=\"btn btn-secondary\" htmlFor=\"lastWeek\" name=\"labelDateRadios\">\r\n                                    <input onChange={this.changeHandler} className=\"form-check-input\" type=\"radio\" name=\"dateRadios\" id=\"lastWeek\" />\r\n                                Útima semana\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"form-check form-check-inline\">\r\n                                <label className=\"btn btn-secondary\" htmlFor=\"yesterday\" name=\"labelDateRadios\">\r\n                                    <input onChange={this.changeHandler} className=\"form-check-input\" type=\"radio\" name=\"dateRadios\" id=\"yesterday\" />\r\n                                Ayer\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"form-check form-check-inline\">\r\n                                <label className=\"btn btn-secondary\" htmlFor=\"today\" name=\"labelDateRadios\">\r\n                                    <input onChange={this.changeHandler} className=\"form-check-input\" type=\"radio\" name=\"dateRadios\" id=\"today\" />\r\n                                Hoy\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12 col-lg-2\">\r\n                            <div className=\"\">\r\n                                <h5 className=\"\">Fecha mayor o igual a:</h5>\r\n                                <input onChange={this.changeHandler} type=\"date\" name=\"greaterThanDate\" id=\"greaterThanDate\" />\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className=\"col-12 col-lg-2\">\r\n                            <div className=\"\">\r\n                                <h5 className=\"\">Fecha menor o igual a:</h5>\r\n                                <input onChange={this.changeHandler} type=\"date\" name=\"lowerThanDate\" id=\"lowerThanDate\" />\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className=\"col-12 col-lg-2\">\r\n                            <div className=\"\">\r\n                                <h5 className=\"\">Fecha igual a:</h5>\r\n                                <input onChange={this.changeHandler} type=\"date\" name=\"equalDate\" id=\"equalDate\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <hr />\r\n                </form>\r\n\r\n                <div className=\"row mt-3\">\r\n                    <div className=\"col-md-12\">\r\n                        {this.state.parameters != \"\" && <ResourceTable ref={this.resourceTable} asyncTable={true} sourceURL={`/api/${this.state.resource}?${this.state.parameters}`} columns={\r\n                            (this.state.resource == \"sales\") ? salesColumns : supplyingsColumns\r\n                        } actions={[]} dolarReference={this.props.dolarReference} />}\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Reports;","const BASE_URL = \"/api/debts\";\r\n\r\nconst functions = {\r\n    fetchAll: async function () {\r\n        let debts = await fetch(BASE_URL, {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        })\r\n\r\n        let response = await debts.json();\r\n\r\n        return response;\r\n    },\r\n    fetchById: async function (id) {\r\n        let debt = await fetch(BASE_URL + `?id=${id}`, {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        })\r\n\r\n        let response = await debt.json();\r\n\r\n        return response;\r\n    },\r\n    fetchByName: async function (name) {\r\n        let debts = await fetch(BASE_URL + `?name=${name}`, {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        })\r\n\r\n        let response = await debts.json();\r\n\r\n        return response;\r\n    },\r\n    create: async function (debt) {\r\n        let newDebt = await fetch(BASE_URL, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(debt)\r\n        })\r\n\r\n        let response = await newDebt.json();\r\n\r\n        return response;\r\n    },\r\n    update: async function (debt) {\r\n        let newDebt = await fetch(BASE_URL + `/${debt.id}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(debt)\r\n        })\r\n\r\n        let response = await newDebt.json();\r\n\r\n        return response;\r\n    }\r\n}\r\n\r\nexport default functions","import React, { Component } from \"react\";\r\nimport debtsRequests from \"../requests/debts\";\r\nimport CustomSelect from \"../globalComponents/CustomSelect\";\r\nimport $ from \"jquery\";\r\nrequire(\"datatables.net\")\r\nclass Debt extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            fetchMessage: null,\r\n            submitMessage: null,\r\n            submitMessageType: null,\r\n            submitLoading: false,\r\n            debtType: 0,\r\n            debtTotal: null,\r\n            debtAction: null,\r\n            selectedRowData: null,\r\n            selectedClient: null\r\n        }\r\n        this.submitHandler = this.submitHandler.bind(this);\r\n        this.changeHandler = this.changeHandler.bind(this);\r\n        this.optionChangeHandler = this.optionChangeHandler.bind(this);\r\n\r\n        this.debtTable = React.createRef();\r\n\r\n        this.addButton = {\r\n            text: 'Add',\r\n            name: 'add',\r\n            className: \"btn btn-success\",\r\n            attr: {\r\n                \"data-toggle\": \"modal\",\r\n                \"data-target\": \"#debtModal\"\r\n            },\r\n            action: (e, datatable, node, config) => {\r\n                $(\".modal-title\").text(\"Add new debt\");\r\n                $(\"#debtTotal\").val(\"\");\r\n                this.setState({\r\n                    debtAction: \"Add\",\r\n                    selectedClient: null\r\n                })\r\n            }\r\n        }\r\n\r\n        this.editButton = {\r\n            text: 'Edit',\r\n            name: 'edit',\r\n            className: \"btn btn-secondary\",\r\n            extend: \"selected\",\r\n            attr: {\r\n                \"data-toggle\": \"modal\",\r\n                \"data-target\": \"#debtModal\"\r\n            },\r\n            action: (e, datatable, node, config) => {\r\n                let selectedRowData = datatable.row({ selected: true }).data();\r\n                $(\".modal-title\").text(\"Edit debt\");\r\n                $(\"#debtTotal\").val(selectedRowData.total);\r\n\r\n                this.setState({\r\n                    debtAction: \"Edit\",\r\n                    selectedRowData,\r\n                    selectedClient: {\r\n                        label: selectedRowData.client.name,\r\n                        value: selectedRowData.client\r\n                    },\r\n                    debtType: selectedRowData.type,\r\n                    debtTotal: selectedRowData.total\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let response = await debtsRequests.fetchAll();\r\n        if (response.data) {\r\n            $(this.debtTable.current).DataTable({\r\n                data: response.data,\r\n                columns: [\r\n                    { title: \"ID\", data: \"id\" },\r\n                    { title: \"Client ID\", data: \"client.id\" },\r\n                    { title: \"Nombre\", data: \"client.name\" },\r\n                    { title: \"Cédula\", data: \"client.cedula\" },\r\n                    { title: \"Teléfono\", data: \"client.phoneNumber\" },\r\n                    {\r\n                        render: function (data) {\r\n                            return (data == 0) ? \"Deuda\" : \"Credito\"\r\n                        }, title: \"Tipo\", data: \"type\"\r\n                    },\r\n                    {\r\n                        render: function (data) {\r\n                            return Intl.NumberFormat(\"es-VE\", { style: \"currency\", currency: \"VES\" }).format(data)\r\n                        }, title: \"Total\", data: \"total\"\r\n                    },\r\n                    {\r\n                        render: function (data) {\r\n                            return (data == 0) ? `<span class=\"text-danger\">SIN PAGAR</span>` : `<span class=\"text-success\">PAGADO</span>`\r\n                        }, title: \"Estado\", data: \"cancelled\"\r\n                    },\r\n                    { title: \"Fecha creación\", data: \"createdAt\" },\r\n                    { title: \"Fecha actualización\", data: \"updatedAt\" }\r\n                ],\r\n                dom: \"Blftip\",\r\n                buttons: [this.addButton, this.editButton],\r\n                select: \"single\",\r\n                order: [0, \"DESC\"]\r\n            })\r\n        }\r\n        else { //error\r\n            this.setState({\r\n                fetchMessage: response.toString()\r\n            })\r\n        }\r\n    }\r\n\r\n    changeHandler(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    optionChangeHandler(selectedOption, actionType) {\r\n        this.setState({\r\n            selectedClient: selectedOption\r\n        })\r\n    }\r\n\r\n    submitHandler(event) {\r\n        event.preventDefault();\r\n\r\n        var response = null;\r\n        this.setState({\r\n            submitLoading: true\r\n        }, async () => {\r\n            if (this.state.debtAction == \"Add\") {\r\n                response = await debtsRequests.create({\r\n                    clientId: this.state.selectedRowData.client.id,\r\n                    type: this.state.debtType,\r\n                    total: this.state.debtTotal\r\n                });\r\n            }\r\n            else if (this.state.debtAction == \"Edit\") {\r\n                response = await debtsRequests.update({\r\n                    id: this.state.selectedRowData.id,\r\n                    clientId: this.state.selectedRowData.clientId,\r\n                    type: this.state.debtType,\r\n                    total: this.state.debtTotal,\r\n                    cancelled: this.state.selectedRowData.cancelled\r\n                });\r\n                let rowData = $(this.debtTable.current).DataTable().rows().data();\r\n                rowData.map((row, index) => {\r\n                    if (row.id == this.state.selectedRowData.id) {\r\n                        let row = $(this.debtTable.current).DataTable().row(index);\r\n                        let rowData = row.data();\r\n                        row.data({\r\n                            ...rowData,\r\n                            type: this.state.debtType,\r\n                            total: this.state.debtTotal\r\n                        })\r\n                    }\r\n                })\r\n\r\n            }\r\n\r\n            if (response.error) {\r\n                this.setState({\r\n                    submitMessage: response.error,\r\n                    submitMessageType: \"Error\",\r\n                    submitLoading: false\r\n                })\r\n            }\r\n            else {\r\n                this.setState({\r\n                    submitMessage: \"Se ha registrado con éxito\",\r\n                    submitMessageType: \"Success\",\r\n                    submitLoading: false\r\n                })\r\n                setTimeout(() => {\r\n                    this.setState({\r\n                        submitMessage: null,\r\n                        submitMessageType: null\r\n                    })\r\n                }, 3000);\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.fetchMessage && <span className=\"text-danger\">{this.state.fetchMessage}</span>}\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1 className=\"text-danger float-left\">Deuda</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-3\">\r\n                    <div className=\"col-md-12\">\r\n                        <table ref={this.debtTable} id=\"debtTable\" name=\"debtTable\" className=\"table table-bordered\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal fade\" id=\"debtModal\" tabindex=\"-1\" aria-labelledby=\"debtModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog modal-dialog-centered\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"debtModalLabel\">Add new debt</h5>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                    <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n                            <form onSubmit={this.submitHandler}>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>Client: </label>\r\n                                        <CustomSelect\r\n                                            sourceURL=\"/api/clients\"\r\n                                            value={this.state.selectedClient}\r\n                                            changeHandler={this.optionChangeHandler} />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Type: </label>\r\n                                        <select onChange={this.changeHandler} className=\"form-control\" name=\"debtType\" id=\"debtType\">\r\n                                            <option value=\"0\">DEUDA</option>\r\n                                            <option value=\"1\">CREDITO</option>\r\n                                        </select>\r\n                                    </div>\r\n                                    <label htmlFor=\"debtTotal\">Total: </label>\r\n                                    <div className=\"input-group\">\r\n                                        <div class=\"input-group-prepend\">\r\n                                            <div class=\"input-group-text\">Bs</div>\r\n                                        </div>\r\n                                        <input onChange={this.changeHandler} className=\"form-control\" type=\"number\" step=\"0.01\" name=\"debtTotal\" id=\"debtTotal\" />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Cerrar</button>\r\n                                    <button type=\"submit\" className=\"btn btn-primary\">\r\n                                        {this.state.submitLoading && <span className=\"spinner-border spinner-border-sm mr-2\" role=\"status\" aria-hidden=\"true\" />}\r\n                                        Enviar</button>\r\n                                </div>\r\n                                {this.state.submitMessage && <span className={(this.state.submitMessageType == \"Error\") ? \"text-danger\" : \"text-success\"}>{this.state.submitMessage}</span>}\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\nexport default Debt;","import React, { Component } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport isAuthenticated from \"../requests/isAuthenticated\";\r\n\r\nclass PrivateRoute extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            loading: true,\r\n            isAuthenticated: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        isAuthenticated().then(isAuthenticated => {\r\n            this.setState({\r\n                loading: false,\r\n                isAuthenticated\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { component: Component, ...rest } = this.props\r\n        return (\r\n            <Route\r\n                render={props =>\r\n                    this.state.isAuthenticated ? (\r\n                        <Component {...props} {...rest} />\r\n                    ) : (\r\n                            this.state.loading ? (\r\n                                <div>LOADING</div>\r\n                            ) : (\r\n                                    <Redirect to={{ pathname: '/signin', state: { from: this.props.location } }} />\r\n                                )\r\n                        )\r\n                }\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default PrivateRoute;","import React, { Component } from \"react\";\r\n\r\nimport Categories from \"./Categories\";\r\nimport Clients from \"./Clients\";\r\nimport Products from \"./Products\";\r\nimport Sales from \"./Sales\";\r\nimport Suppliers from \"./Suppliers\";\r\nimport Supplyings from \"./Supplyings\";\r\nimport Users from \"./Users\";\r\nimport Navigation from \"./Navigation\";\r\nimport SalesControl from \"./SalesControl\";\r\nimport Inventory from \"./Inventory\";\r\nimport Reports from \"./Reports\";\r\nimport Debt from \"./Debt\";\r\nimport PrivateRoute from \"../components/PrivateRoute\";\r\n\r\nimport { Route } from \"react-router-dom\";\r\n\r\nimport $ from \"jquery\";\r\nclass Dashboard extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            formattedDolareReference: \"\",\r\n            dolarReference: 0,\r\n            loading: false,\r\n            newDolarReference: null\r\n        }\r\n\r\n        this.fetchDolarReference = this.fetchDolarReference.bind(this);\r\n        this.dolarReferenceSubmitHandler = this.dolarReferenceSubmitHandler.bind(this);\r\n        this.changeHandler = this.changeHandler.bind(this);\r\n        this.closeEditDolarModalButton = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchDolarReference();\r\n    }\r\n\r\n    fetchDolarReference() {\r\n        this.setState({\r\n            loading: true\r\n        });\r\n        fetch(\"/api/dolarReference\", {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if (res.data) {\r\n                    this.setState({\r\n                        dolarReference: res.data.price,\r\n                        formattedDolareReference: Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(res.data.price),\r\n                        loading: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        dolarReference: 0,\r\n                        formattedDolareReference: Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(0),\r\n                        loading: false\r\n                    })\r\n                }\r\n            })\r\n    }\r\n\r\n    changeHandler(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    dolarReferenceSubmitHandler(event) {\r\n        event.preventDefault();\r\n\r\n        fetch(\"/api/dolarReference\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({ price: this.state.newDolarReference })\r\n        })\r\n            .then(res => {\r\n                if (res.status == 204) {\r\n                    window.location.reload();\r\n                } else {\r\n                    alert(\"Error\")\r\n                }\r\n            })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row sticky-top\">\r\n                    <div className=\"col-md-12 p-0\">\r\n                        <Navigation />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"bg-danger text-light col-12\">\r\n                        Precio del Dolar <span id=\"dolarReference\" className=\"badge badge-light\">{(this.state.loading) ? \"Loading...\" : this.state.formattedDolareReference}</span>\r\n                        <button className=\"btn btn-secondary ml-4\" data-toggle=\"modal\" data-target=\"#dolarEditModal\" >Editar</button>\r\n                    </div>\r\n\r\n                </div>\r\n                <main className=\"mt-5\">\r\n                    <Route path=\"/control-de-ventas\" render={(props) => (<SalesControl {...props} dolarReference={this.state.dolarReference} />)} />\r\n                    <Route path=\"/inventario\" component={Inventory} />\r\n                    <Route path=\"/reportes\" render={(props) => (<Reports {...props} dolarReference={this.state.dolarReference} />)} />\r\n                    <Route path=\"/deuda\" render={(props) => (<Debt {...props} dolarReference={this.state.dolarReference} />)} />\r\n                    <Route path=\"/categorias\" component={Categories} />\r\n                    <Route path=\"/clientes\" component={Clients} />\r\n                    <Route path=\"/productos\" render={(props) => (<Products {...props} dolarReference={this.state.dolarReference} />)} />\r\n                    <Route path=\"/ventas\" component={Sales} />\r\n                    <Route path=\"/abastecimiento\" render={(props) => (<Supplyings {...props} dolarReference={this.state.dolarReference} />)} />\r\n                    <Route path=\"/proveedores\" component={Suppliers} />\r\n                    <Route path=\"/usuarios\" component={Users} />\r\n                </main>\r\n                <div className=\"modal fade\" id=\"dolarEditModal\" tabindex=\"-1\" aria-labelledby=\"dolarEditModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"dolarEditModalLabel\">Nuevo precio del dolar</h5>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                    <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n                            <form onSubmit={this.dolarReferenceSubmitHandler}>\r\n                                <div className=\"modal-body\">\r\n                                    <input name=\"newDolarReference\" onChange={this.changeHandler} className=\"form-control\" type=\"number\" placeholder=\"Ingrese el nuevo precio del dolar. Ej: 400000\" />\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button ref={this.closeEditDolarModalButton} type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                    <button type=\"submit\" className=\"btn btn-primary\">Save changes</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Dashboard;","const initialState = {\r\n    data: [],\r\n    next: {},\r\n    previous: {},\r\n    loading: false\r\n};\r\nexport default function productReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case \"LOAD_PRODUCTS\":\r\n            return {\r\n                ...state,\r\n                data: action.paginatedProducts.data,\r\n                next: action.paginatedProducts.next,\r\n                previous: action.paginatedProducts.previous\r\n            }\r\n        case \"LOADING\":\r\n            return { ...state, loading: action.loading }\r\n        default:\r\n            return state;\r\n    }\r\n}","\r\nconst initialState = {\r\n    activeCategoryId: 0,\r\n    activeCategoryName: \"\",\r\n    data: []\r\n}\r\nexport default function categoriesReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case \"LOAD_CATEGORIES\":\r\n            return { ...state, data: action.categories }\r\n        case \"SET_ACTIVE_CATEGORY_ID\":\r\n            return { ...state, activeCategoryId: action.categoryId }\r\n        case \"SET_ACTIVE_CATEGORY_NAME\":\r\n            return { ...state, activeCategoryName: action.categoryName }\r\n        default:\r\n            return state;\r\n    }\r\n}","import products from \"./productReducer\";\r\nimport categories from \"./categoriesReducer\";\r\n\r\nexport default { products, categories }","import { createStore, combineReducers } from \"redux\";\r\nimport reducers from \"../reducers\";\r\n\r\nconst rootReducer = combineReducers({\r\n    ...reducers\r\n})\r\nexport default function configureStore() {\r\n    return createStore(rootReducer);\r\n}","import React from 'react';\nimport './App.css';\n\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\n\nimport Header from \"./components/Header\";\nimport Navigation from \"./components/Navigation\";\nimport ProductCategories from \"./components/ProductCategories\";\nimport ProductList from \"./components/ProductList\";\nimport BackToTopButton from \"./components/BackToTopButton\";\nimport Login from \"./components/Login\";\nimport Dashboard from \"./adminComponents/Dashboard\";\n\nimport PrivateRoute from \"./components/PrivateRoute\";\n\nimport configureStore from \"./store/configureStore\";\nimport { Provider } from \"react-redux\";\n\nconst store = configureStore();\n\nfunction App() {\n\n  /*\n  <Route path=\"/\">\n              <div className=\"container-fluid\">\n                <div className=\"row bg-dark\" style={{ height: \"30px\" }} />\n                <div className=\"row sticky-top\">\n                  <div className=\"col-12\">\n                    <Header />\n                  </div>\n                </div>\n                <Navigation />\n\n                <div className=\"row\">\n                  <div className=\"col-md-12 mt-2\">\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"col-md-3 mt-2\">\n                    <div className=\"row\">\n                      <div className=\"col-12\">\n                        <ProductCategories />\n                      </div>\n                    </div>\n                    <div className=\"row\">\n                      <div className=\"col-12 d-flex flex-column align-items-center\">\n                        <BackToTopButton />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-md-8 mt-2 d-flex flex-wrap justify-content-start\">\n                    <ProductList />\n                  </div>\n                </div>\n              </div>\n            </Route>\n  */\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <Router>\n          <Switch>\n            <Route exact path=\"/signin\" component={Login} />\n            <PrivateRoute path=\"/\" component={Dashboard} />\n          </Switch>\n        </Router>\n      </div>\n\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { Component } from \"react\";\r\nimport debounce from \"lodash.debounce\";\r\n\r\n\r\nconst $ = require('jquery');\r\nconst DataTable = require('datatables.net');\r\nconst jsZip = require('jszip');\r\nrequire('pdfmake');\r\nrequire('datatables.net-buttons-dt');\r\nrequire('datatables.net-buttons/js/buttons.html5.js');\r\nrequire('datatables.net-buttons/js/buttons.print.js');\r\nrequire('datatables.net-buttons/js/buttons.colVis.js');\r\nrequire('datatables.net-select-dt');\r\nwindow.JSZip = jsZip;\r\n\r\nclass ResourceTable extends Component {\r\n\r\n    constructor(props) {\r\n        super();\r\n\r\n        this.recordsTable = React.createRef();\r\n        this.modal = React.createRef();\r\n\r\n        this.state = {\r\n            selectedRowData: null,\r\n            sourceURL: props.sourceURL\r\n        }\r\n\r\n    }\r\n\r\n    changeSourceURL(newSourceURL) {\r\n        let recordsTable = this.recordsTable.current;\r\n        let $recordsTable = $(recordsTable);\r\n\r\n        $recordsTable.DataTable().ajax.url(newSourceURL).load();\r\n    }\r\n\r\n    componentDidMount() {\r\n        let recordsTable = this.recordsTable.current;\r\n        let $recordsTable = $(recordsTable);\r\n        var _this = this;\r\n        if (this.props.asyncTable) {\r\n            $recordsTable = $recordsTable.DataTable({\r\n                initComplete: function () {\r\n                    this.api().columns().every(function () {\r\n                        var column = this;\r\n                        if (column.dataSrc() == \"createdAt\" || column.dataSrc() == \"updatedAt\") {\r\n                            $(this.header()).append(\"<br><input class='p-0 m-0 h-100' type='date' />\");\r\n                        }\r\n                        else {\r\n                            $(this.header()).append(\"<br><input class='p-0 m-0 h-100' type='text' placeholder='Filtrar'/>\");\r\n                        }\r\n                        $('input', this.header()).on(\"keyup change\", function () {\r\n                            let splittedDataSrc = column.dataSrc().split(\".\");\r\n                            let parameter = \"\";\r\n                            splittedDataSrc.forEach((split, index) => {\r\n                                if (index == 0) {\r\n                                    parameter = splittedDataSrc[0];\r\n                                }\r\n                                else {\r\n                                    parameter += splittedDataSrc[index].charAt(0).toUpperCase() + splittedDataSrc[index].slice(1);\r\n                                }\r\n                            });\r\n                            if (_this.props.sourceURL.includes(\"?\")) {\r\n                                $recordsTable.ajax.url(`${_this.props.sourceURL}&${parameter}=${this.value.trim()}`).load();\r\n                            }\r\n                            else {\r\n                                $recordsTable.ajax.url(`${_this.props.sourceURL}?${parameter}=${this.value.trim()}`).load();\r\n\r\n                            }\r\n                        });\r\n\r\n                    });\r\n                },\r\n                footerCallback: function (row, data) {\r\n                    var api = this.api();\r\n                    api.columns().every(function () {\r\n                        var column = this;\r\n                        if (column.dataSrc() == \"grossTotalDollars\") {\r\n                            let totalDollars = api\r\n                                .column(3)\r\n                                .data()\r\n                                .reduce(function (a, b) {\r\n                                    return a + b\r\n                                }, 0);\r\n                            let pageTotalDollars = api\r\n                                .column(3, { page: 'current' })\r\n                                .data()\r\n                                .reduce(function (a, b) {\r\n                                    return a + b\r\n                                }, 0);\r\n\r\n                            if (totalDollars) {\r\n                                $(column.footer()).html(\r\n                                    `${Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(pageTotalDollars)} <br>\r\n                                            <span class=\"text-danger\">(${Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(totalDollars)} Total)</span>`\r\n                                );\r\n                            }\r\n                            else {\r\n                                $(column.footer()).html(\"\");\r\n                            }\r\n\r\n                        }\r\n                        if (column.dataSrc() == \"grossTotalBs\") {\r\n                            let totalBs = api\r\n                                .column(4)\r\n                                .data()\r\n                                .reduce(function (a, b) {\r\n                                    return a + b\r\n                                }, 0);\r\n\r\n                            let pageTotalBs = api\r\n                                .column(4, { page: 'current' })\r\n                                .data()\r\n                                .reduce(function (a, b) {\r\n                                    return a + b\r\n                                }, 0);\r\n                            if (pageTotalBs) {\r\n                                $(column.footer()).html(\r\n                                    `${Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(pageTotalBs)} <br>\r\n                                        <span class=\"text-danger\">(${Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(totalBs)} Total)</span>`\r\n                                );\r\n                            } else {\r\n                                $(column.footer()).html(\"\");\r\n                            }\r\n                        }\r\n                        if (column.dataSrc() == \"netIncomeDollars\") {\r\n                            let totalDollars = api\r\n                                .column(5)\r\n                                .data()\r\n                                .reduce(function (a, b) {\r\n                                    return a + b\r\n                                }, 0);\r\n\r\n                            let pageTotalDollars = api\r\n                                .column(5, { page: 'current' })\r\n                                .data()\r\n                                .reduce(function (a, b) {\r\n                                    return a + b\r\n                                }, 0);\r\n                            if (pageTotalDollars) {\r\n                                $(column.footer()).html(\r\n                                    `${Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(pageTotalDollars)} <br>\r\n                                        <span class=\"text-danger\">(${Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(totalDollars)} Total)</span>`\r\n                                );\r\n                            } else {\r\n                                $(column.footer()).html(\"\");\r\n                            }\r\n                        }\r\n                        if (column.dataSrc() == \"netIncomeBs\") {\r\n                            let totalBs = api\r\n                                .column(6)\r\n                                .data()\r\n                                .reduce(function (a, b) {\r\n                                    return a + b\r\n                                }, 0);\r\n\r\n                            let pageTotalBs = api\r\n                                .column(6, { page: 'current' })\r\n                                .data()\r\n                                .reduce(function (a, b) {\r\n                                    return a + b\r\n                                }, 0);\r\n                            if (pageTotalBs) {\r\n                                $(column.footer()).html(\r\n                                    `${Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(pageTotalBs)} <br>\r\n                                        <span class=\"text-danger\">(${Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(totalBs)} Total)</span>`\r\n                                );\r\n                            } else {\r\n                                $(column.footer()).html(\"\");\r\n                            }\r\n                        }\r\n                    })\r\n                },\r\n                dom: 'Brltip',\r\n                select: \"single\",\r\n                buttons: [{\r\n                    text: \"Imprimir\",\r\n                    name: \"imprimir\",\r\n                    className: \"btn btn-secondary float-right\",\r\n                    extend: \"print\",\r\n                    messageTop: \"Lista de precios\",\r\n                    footer: true,\r\n                    title: (_this.props.sourceURL.includes(\"productss\")) ? \"Lista de precios\" : \"\",\r\n                    customize: function (win) {\r\n                        $(win.document.body).find('#messageTop').css('text-align', 'center');\r\n                    },\r\n                    exportOptions: {\r\n                        modifier: {\r\n                            page: 'all'\r\n                        },\r\n                        columns: (_this.props.sourceURL.includes(\"products\")) ? [1, 2, 3] : \":visible\"\r\n                    }\r\n                }].concat(this.props.actions.map(action => {\r\n                    if (action == \"add\") {\r\n                        return {\r\n                            text: 'Add',\r\n                            name: 'add',\r\n                            className: \"btn btn-success\",\r\n                            attr: {\r\n                                \"data-toggle\": \"modal\",\r\n                                \"data-target\": \"#exampleModal\"\r\n                            },\r\n                            action: function () {\r\n                                _this.props.setModalAction(\"add\")\r\n                            }\r\n                        }\r\n                    }\r\n                    if (action == \"edit\") {\r\n                        return {\r\n                            text: 'Edit',\r\n                            name: 'edit',\r\n                            className: \"btn btn-secondary\",\r\n                            extend: \"selected\",\r\n                            attr: {\r\n                                \"data-toggle\": \"modal\",\r\n                                \"data-target\": \"#exampleModal\"\r\n                            },\r\n                            action: (e, datatable, node, config) => {\r\n                                var selectedRowData = datatable.row({ selected: true }).data();\r\n                                _this.props.setSelectedRowData(selectedRowData);\r\n                                _this.props.setModalAction(\"edit\");\r\n                            }\r\n                        };\r\n                    }\r\n                    if (action == \"delete\") {\r\n                        return {\r\n                            text: 'Delete',\r\n                            name: 'delete',\r\n                            className: \"btn btn-danger\",\r\n                            extend: \"selected\",\r\n                            action: function (e, datatable, node, config) {\r\n                                var selectedRowData = datatable.row({ selected: true }).data();\r\n                                var r = window.confirm(\"¿Está seguro que desea eliminar este registro?\");\r\n                                if (r == true) {\r\n                                    fetch(`${_this.props.sourceURL}/${selectedRowData.id}`, {\r\n                                        method: \"DELETE\",\r\n                                        headers: {\r\n                                            \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n                                        }\r\n                                    })\r\n                                        .then(res => {\r\n                                            if (res.status == 204) {\r\n                                                datatable.ajax.reload();\r\n                                            }\r\n                                            else {\r\n                                                res.json().then(error => {\r\n                                                    _this.setState({\r\n                                                        error\r\n                                                    })\r\n                                                })\r\n                                            }\r\n                                        })\r\n                                        .catch(error => {\r\n                                            _this.setState({\r\n                                                error\r\n                                            })\r\n                                        })\r\n                                }\r\n\r\n                            }\r\n                        }\r\n                    }\r\n                    if (action == \"date-range\") {\r\n                        return {\r\n                            text: 'Reload',\r\n                            name: 'reload',\r\n                            className: \"btn btn-primary\",\r\n                            action: function (e, datatable, node, config) {\r\n                                datatable.ajax.url(_this.state.sourceURL).load();\r\n                            }\r\n                        }\r\n                    }\r\n                    if (action == \"discount\") {\r\n                        return [\r\n                            {\r\n                                text: 'Apply Discount',\r\n                                name: 'discountButton',\r\n                                className: \"btn btn-primary\",\r\n                                attr: {\r\n                                    \"data-toggle\": \"modal\",\r\n                                    \"data-target\": \"#discountModal\"\r\n                                },\r\n                                extend: \"selected\",\r\n                                action: function (e, datatable, node, config) {\r\n                                    var selectedRowData = datatable.row({ selected: true }).data();\r\n                                    _this.props.setSelectedRowData(selectedRowData);\r\n                                    _this.props.setModalAction(\"applyDiscount\")\r\n\r\n                                }\r\n\r\n                            },\r\n                            {\r\n                                text: 'Cancel Discount',\r\n                                name: 'cancelDiscountButton',\r\n                                className: \"btn btn-danger\",\r\n                                extend: \"selected\",\r\n                                action: function (e, datatable, node, config) {\r\n                                    let response = window.confirm(\"¿Seguro que desea eliminar el descuento?\");\r\n                                    if (response == true) {\r\n                                        let selectedRowData = datatable.row({ selected: true }).data();\r\n                                        let discountId = selectedRowData.discount[0].id;\r\n                                        fetch(`/api/discounts/${discountId}`, {\r\n                                            headers: {\r\n                                                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n                                            },\r\n                                            method: \"DELETE\"\r\n                                        })\r\n                                            .then(res => {\r\n                                                if (res.status == 204) {\r\n                                                    datatable.ajax.reload();\r\n                                                }\r\n                                            })\r\n                                    }\r\n                                    else {\r\n\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                        ]\r\n                    }\r\n\r\n                })),\r\n                serverSide: true,\r\n                ajax: {\r\n                    url: this.state.sourceURL,\r\n                    dataSrc: function (results) {\r\n                        if (typeof results.count == \"object\") {\r\n                            results.data.forEach((row, index) => {\r\n                                if (row.productId == results.count[index].id) {\r\n                                    row.count = results.count[index].count\r\n                                }\r\n                            })\r\n                        }\r\n\r\n                        if (_this.props.sourceURL.includes(\"/api/sales\") && _this.props.sourceURL.includes(\"group=true\")) {\r\n                            results.data.forEach((row, index) => {\r\n                                row.product = row.product[0];\r\n                                //row.transactions = results.count.reverse()[index].count;\r\n                                row.grossTotalBs = row.grossTotalDollars * row.dolarReference;\r\n\r\n                                row.netIncomeDollars = row.grossTotalDollars * (row.product.profitPercent / 100);\r\n                                row.netIncomeBs = row.netIncomeDollars * row.dolarReference;\r\n                            })\r\n                        }\r\n                        else if (_this.props.sourceURL.includes(\"/api/supplyings\") && _this.props.sourceURL.includes(\"group=true\")) {\r\n                            results.data.forEach((row, index) => {\r\n                                //row.transactions = results.count.reverse()[index].count;\r\n                                row.grossTotalBs = row.grossTotalDollars * row.dolarReference;\r\n                            })\r\n                        }\r\n                        return results.data;\r\n                    },\r\n                    headers: { 'Authorization': `Bearer ${localStorage.getItem(\"jwt\")}` },\r\n                    data: function (d) {\r\n                        if (d.length != -1) {\r\n                            d.page = d.start / d.length + 1;\r\n                            d.limit = d.length;\r\n                        }\r\n                        else {\r\n                            d.page = 1;\r\n                            d.limit = 0;\r\n                        }\r\n\r\n                    },\r\n                    error: function (xhr, error, code) {\r\n                        //alert(code)\r\n                    }\r\n                },\r\n                paging: true,\r\n                lengthMenu: [[10, 25, 50, 100, 1000000000000000], [10, 25, 50, 100, \"All\"]],\r\n                pageLength: (this.props.sourceURL.includes(\"group=true\")) ? 1000000000000000 : 10,\r\n                columns: this.props.columns,\r\n                columnDefs: (this.props.sourceURL.includes(\"products\")) ? [\r\n                    { width: \"30%\", \"targets\": 1 }\r\n                ] : null,\r\n                ordering: false,\r\n                order: _this.props.sorting || [[0, \"desc\"]]\r\n            });\r\n\r\n            if (this.props.actions.includes(\"date-range\")) {\r\n                $(\".dt-buttons\").append(`<div class=\"d-flex justify-content-end\">\r\n                    <label class=\"mr-2\" for=\"dateFrom\">From:</label>\r\n                    <input type=\"date\" id=\"dateFrom\" name=\"dateFrom\">\r\n                    <label class=\"mr-2 ml-2\" for=\"dateTo\">To:</label>\r\n                    <input type=\"date\" id=\"dateTo\" name=\"dateTo\">\r\n                    </div>`)\r\n\r\n                $(\".dt-buttons input[type=date]\").on(\"change\", function () {\r\n                    $recordsTable.ajax.url(`${_this.state.sourceURL}?from=${$(\"#dateFrom\").val()}&to=${$(\"#dateTo\").val()}`).load();\r\n                })\r\n            }\r\n\r\n            $('#resourceTable tbody').on('click', 'td.details-control', function () {\r\n                var tr = $(this).closest('tr');\r\n                var row = $recordsTable.row(tr);\r\n\r\n                if (row.child.isShown()) {\r\n                    // This row is already open - close it\r\n                    row.child.hide();\r\n                    tr.removeClass('shown');\r\n                }\r\n                else {\r\n                    // Open this row\r\n                    row.child(_this.props.childFormat(row.data())).show();\r\n                    tr.addClass('shown');\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            $recordsTable = $recordsTable.DataTable({\r\n                dom: \"\",\r\n                data: this.props.data,\r\n                columns: this.props.columns,\r\n\r\n            });\r\n        }\r\n\r\n\r\n\r\n        this.modal.current.addEventListener(\"focus\", () => {\r\n            this.modal.current.querySelector(\".form-group\").children[0].focus();\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"bg-light table-responsive\">\r\n                <table id=\"resourceTable\" className=\"table table-bordered\" ref={this.recordsTable} >\r\n                    <thead></thead>\r\n                    <tbody></tbody>\r\n                    <tfoot>\r\n                        <tr>\r\n                            {this.props.columns.map((column, index) => {\r\n                                return <td key={index}></td>\r\n                            })}\r\n                        </tr>\r\n                    </tfoot>\r\n                </table>\r\n                {this.state.error && <span className=\"text-danger\">{this.state.error}</span>}\r\n                <div ref={this.modal} className=\"modal\" id=\"exampleModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n                        <div className=\"modal-content\">\r\n                            {this.props.modalStructure}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ResourceTable;","import { localsName } from \"ejs\";\r\nimport React, { Component } from \"react\";\r\nimport Async from 'react-select/async';\r\n\r\nclass CustomSelect extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            options: []\r\n        }\r\n\r\n        this.searchHandler = this.searchHandler.bind(this);\r\n    }\r\n\r\n    roundToNiceNumber(value) {\r\n        var val = 0;\r\n        if (value.toString().length == 4) {\r\n            val = Math.ceil(value / 100) * 100\r\n        }\r\n        else if (value.toString().length > 4) {\r\n            val = Math.ceil(value / 1000) * 1000\r\n        }\r\n\r\n        return val;\r\n    }\r\n\r\n    searchHandler(inputValue, callback) {\r\n        fetch(this.props.sourceURL || `/api/products?name=${inputValue}`, {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        })\r\n            .then(result => result.json())\r\n            .then(results => {\r\n                if (results.data.length > 0) {\r\n                    results.data.forEach(item => {\r\n                        item.value = item.name;\r\n                        if (item.image) {\r\n                            var bufferBase64 = new Buffer.from(item.image, 'binary').toString('base64');\r\n                            item.label = [<img className=\"img img-fluid\" style={{ maxWidth: \"40px\" }} src={`data:image/png;base64,${bufferBase64}`} />, `${item.name} (${Intl.NumberFormat(\"es-VE\", { style: \"currency\", currency: \"VES\" }).format(this.roundToNiceNumber(item.price * this.props.dolarReference))})`];\r\n                        }\r\n                        else {\r\n                            item.label = `${item.name} (${Intl.NumberFormat(\"es-VE\", { style: \"currency\", currency: \"VES\" }).format(this.roundToNiceNumber(item.price * this.props.dolarReference))})`\r\n                        }\r\n                    });\r\n                    callback(results.data)\r\n                }\r\n            });\r\n    }\r\n    render() {\r\n        return (\r\n            <Async\r\n                loadOptions={this.searchHandler}\r\n                defaultOptions\r\n                placeholder=\"Buscar\"\r\n                autoFocus\r\n                inputId=\"selectedProduct\"\r\n                isMulti={this.props.isMulti}\r\n                isClearable\r\n                ref={this.props.innerRef}\r\n                name={this.props.name}\r\n                onChange={this.props.changeHandler}\r\n                value={this.props.value}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default CustomSelect;","module.exports = {\r\n    loadProducts: function (paginatedProducts) {\r\n        return { type: \"LOAD_PRODUCTS\", paginatedProducts }\r\n    },\r\n    setLoading: function (loading) {\r\n        return { type: \"LOADING\", loading }\r\n    },\r\n}","module.exports = {\r\n    loadCategories: function (categories) {\r\n        return { type: \"LOAD_CATEGORIES\", categories }\r\n    },\r\n    setActiveCategoryId: function (categoryId) {\r\n        return { type: \"SET_ACTIVE_CATEGORY_ID\", categoryId }\r\n    },\r\n    setActiveCategoryName: function (categoryName) {\r\n        return { type: \"SET_ACTIVE_CATEGORY_NAME\", categoryName }\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport ResourceTable from \"./ResourceTable\";\r\nimport CustomSelect from \"../globalComponents/CustomSelect\";\r\n\r\n\r\nimport moment from \"moment\";\r\nimport $ from \"jquery\";\r\nconst DataTable = require('datatables.net');\r\n\r\nclass Products extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {\r\n            selectedCategories: null,\r\n            name: null,\r\n            productImageFile: null,\r\n            profitPercent: null,\r\n            success: null,\r\n            error: null,\r\n            modalAction: null,\r\n            discountPercent: null,\r\n            discountStartDate: null,\r\n            discountEndDate: null,\r\n            selectedRowData: null\r\n        }\r\n\r\n        this.submitHandler = this.submitHandler.bind(this);\r\n        this.discountSubmitHandler = this.discountSubmitHandler.bind(this);\r\n        this.optionChangeHandler = this.optionChangeHandler.bind(this);\r\n        this.changeHandler = this.changeHandler.bind(this);\r\n        this.setModalAction = this.setModalAction.bind(this);\r\n        this.setSelectedRowData = this.setSelectedRowData.bind(this);\r\n\r\n        this.CustomSelectRef = React.createRef();\r\n        this.productForm = React.createRef();\r\n        this.closeButton = React.createRef();\r\n    }\r\n\r\n    setModalAction(modalAction) {\r\n        this.setState({\r\n            modalAction\r\n        })\r\n    }\r\n\r\n    setSelectedRowData(selectedRowData) {\r\n        let categories = [];\r\n        selectedRowData.category.forEach(category => {\r\n            categories.push({ id: category.id, label: category.name, value: category.name });\r\n        })\r\n\r\n        this.setState({\r\n            selectedRowData,\r\n            selectedCategories: categories,\r\n            name: selectedRowData.name,\r\n            profitPercent: selectedRowData.profitPercent,\r\n        }, () => {\r\n            $(\"#name\").val(this.state.selectedRowData.name);\r\n            $(\"#profitPercent\").val(this.state.selectedRowData.profitPercent);\r\n        })\r\n    }\r\n\r\n    optionChangeHandler(selectedOptions, actionType) {\r\n        this.setState({\r\n            selectedCategories: selectedOptions\r\n        });\r\n    }\r\n\r\n    changeHandler(event) {\r\n        this.setState({\r\n            [event.target.name]: (event.target.type == \"file\") ? event.target.files[0] : event.target.value\r\n        });\r\n    }\r\n\r\n    submitHandler(event) {\r\n        event.preventDefault();\r\n        var categoriesID = \"\";\r\n        if (this.state.selectedCategories) {\r\n            this.state.selectedCategories.forEach((category, index) => {\r\n                categoriesID += category.id\r\n                if (index != this.state.selectedCategories.length - 1) {\r\n                    categoriesID += \",\"\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            alert(\"Seleccione las categorías\")\r\n        }\r\n\r\n        var formData = new FormData();\r\n\r\n        formData.append(\"productImageFile\", this.state.productImageFile);\r\n        formData.append(\"name\", this.state.name);\r\n        formData.append(\"profitPercent\", this.state.profitPercent);\r\n        formData.append(\"categories\", categoriesID);\r\n\r\n        fetch((this.state.modalAction == \"add\") ? \"/api/products\" : `/api/products/${this.state.selectedRowData.id}`, {\r\n            method: (this.state.modalAction == \"add\") ? \"POST\" : \"PATCH\",\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n                \"Accept\": \"application/json\"\r\n            },\r\n            body: formData\r\n        })\r\n            .then(res => {\r\n                if (res.status == 200) {\r\n                    this.setState({\r\n                        success: \"El producto se ha registrado con exito\"\r\n                    });\r\n                    this.productForm.current.reset();\r\n                    this.closeButton.current.click();\r\n                    $(\"#resourceTable\").DataTable().ajax.reload(null, false);\r\n                }\r\n                else if (res.status == 409) {\r\n                    res.json().then(response => {\r\n                        this.setState({\r\n                            error: response.error || response.err\r\n                        })\r\n                    })\r\n\r\n                }\r\n            })\r\n            .catch(error => {\r\n                this.setState({\r\n                    error: error\r\n                })\r\n            })\r\n    }\r\n\r\n    discountSubmitHandler(event) {\r\n        event.preventDefault();\r\n        if (this.state.discountPercent && this.state.discountStartDate && this.state.discountEndDate) {\r\n            fetch(\"/api/discounts\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                    productId: this.state.selectedRowData.id,\r\n                    percent: this.state.discountPercent,\r\n                    startDate: this.state.discountStartDate,\r\n                    endDate: this.state.discountEndDate\r\n                })\r\n            })\r\n                .then(res => {\r\n                    if (res.status == 200) {\r\n                        this.setState({\r\n                            success: \"Se ha registrado con éxito\"\r\n                        })\r\n                    } else {\r\n                        res.json().then(res => {\r\n                            this.setState({\r\n                                error: res.error || res.err\r\n                            })\r\n                        })\r\n                    }\r\n                })\r\n        }\r\n        else {\r\n            alert(\"Rellene todos los campos\")\r\n        }\r\n    }\r\n\r\n    roundToNiceNumber(value) {\r\n        var val = 0;\r\n        if (value.toString().length == 4) {\r\n            val = Math.ceil(value / 100) * 100\r\n        }\r\n        else if (value.toString().length > 4) {\r\n            val = Math.ceil(value / 1000) * 1000\r\n        }\r\n\r\n        return val;\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1 className=\"text-danger float-left\">Productos</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-3\">\r\n                    <div className=\"col-md-12\">\r\n                        <ResourceTable asyncTable={true} setSelectedRowData={this.setSelectedRowData} setModalAction={this.setModalAction} sourceURL={\"/api/products\"} columns={[\r\n                            { title: \"ID\", data: \"id\" },\r\n                            {\r\n                                render: function (data, type, row, meta) {\r\n                                    if (row.image) {\r\n                                        var bufferBase64 = new Buffer.from(row.image, 'binary').toString('base64');\r\n                                        return `<span class=\"p-0\"><img class=\"img-responsive m-0 p-0\" src=\"data:image/png;base64,${bufferBase64}\" style=\"max-width:40px;\"></img>${data}</span>`\r\n                                    }\r\n                                    else {\r\n                                        return data\r\n                                    }\r\n                                },\r\n                                title: \"Nombre\", data: \"name\"\r\n                            },\r\n                            { title: \"Precio $\", data: \"price\" },\r\n                            {\r\n                                render: (data) => {\r\n                                    return Intl.NumberFormat(\"es-Ve\", { style: \"currency\", currency: \"VES\" }).format(this.roundToNiceNumber(data * this.props.dolarReference))\r\n                                }, title: \"Precio Bs\", data: \"price\"\r\n                            },\r\n                            {\r\n                                render: function (data) {\r\n                                    return data + \"%\"\r\n                                }, title: \"Porcentaje de Ganancia\", data: \"profitPercent\"\r\n                            },\r\n                            {\r\n                                render: function (data, type, row, meta) {\r\n                                    let disc = data.map(discount => {\r\n                                        return discount.percent\r\n                                    })\r\n\r\n                                    return (disc.length) ? disc + \"%\" : 0 + \"%\"\r\n                                }, title: \"Descuento\", data: \"discount\"\r\n                            },\r\n                            /*\r\n                            {\r\n                                title: \"Descuento desde\", data: \"discount[0].startDate\"\r\n                            },\r\n                            {\r\n                                title: \"Descuento hasta\", data: \"discount[0].endDate\"\r\n                            },\r\n                            */\r\n                            { title: \"Fecha creación\", data: \"createdAt\" },\r\n                            { title: \"Fecha actualización\", data: \"updatedAt\" }\r\n                        ]} actions={[\"add\", \"edit\", \"delete\", \"discount\"]} modalStructure={\r\n                            <form ref={this.productForm} onSubmit={this.submitHandler} className=\"float-left\">\r\n                                <div className=\"modal-header\">\r\n                                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">New Product</h5>\r\n                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                        <span aria-hidden=\"true\">&times;</span>\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"name\">Product Name: </label>\r\n                                        <input onChange={this.changeHandler} className=\"form-control\" type=\"text\" name=\"name\" id=\"name\" required />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"profitPercent\">Profit Percent: </label>\r\n                                        <div className=\"input-group\">\r\n                                            <div className=\"input-group-prepend\">\r\n                                                <div className=\"input-group-text\">%</div>\r\n                                            </div>\r\n                                            <input onChange={this.changeHandler} className=\"form-control\" type=\"number\" step=\"0.1\" name=\"profitPercent\" id=\"profitPercent\" required />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"productImageFile\">Imagen: </label>\r\n                                        <div className=\"custom-file\">\r\n                                            <input onChange={this.changeHandler} type=\"file\" className=\"custom-file-input\" id=\"productImageFile\" name=\"productImageFile\" />\r\n                                            <label className=\"custom-file-label\" htmlFor=\"image\">Choose file</label>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"price\">Categorías: </label>\r\n                                        <CustomSelect sourceURL=\"/api/categories\"\r\n                                            isMulti={true}\r\n                                            innerRef={this.CustomSelectRef}\r\n                                            changeHandler={this.optionChangeHandler}\r\n                                            value={this.state.selectedCategories}\r\n                                            required />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button ref={this.closeButton} type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Cerrar</button>\r\n                                    <button type=\"submit\" className=\"btn btn-primary\">Enviar</button>\r\n                                </div>\r\n                                {this.state.success && <span className=\"text-success\">{this.state.success}</span>}\r\n                                {this.state.error && <span className=\"text-danger\">{this.state.error}</span>}\r\n                            </form>\r\n                        } />\r\n                        <div id=\"discountModal\" className=\"modal\" tabIndex=\"-1\">\r\n                            <div className=\"modal-dialog\">\r\n                                <div className=\"modal-content\">\r\n                                    <div className=\"modal-header\">\r\n                                        <h5 className=\"modal-title\"></h5>\r\n                                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                            <span aria-hidden=\"true\">&times;</span>\r\n                                        </button>\r\n                                    </div>\r\n                                    <form onSubmit={this.discountSubmitHandler}>\r\n                                        <div className=\"modal-body\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"discountPercent\">Discount Percent: </label>\r\n                                                <div className=\"input-group\">\r\n                                                    <input onChange={this.changeHandler} className=\"form-control\" type=\"number\" step=\"0.01\" min=\"0\" name=\"discountPercent\" id=\"discountPercent\" required />\r\n                                                    <div className=\"input-group-append\">\r\n                                                        <div className=\"input-group-text\">%</div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <label htmlFor=\"discountStartDate\">Start Date:</label>\r\n                                                <div className=\"input-group\">\r\n                                                    <input onChange={this.changeHandler} className=\"form-control\" type=\"date\" name=\"discountStartDate\" id=\"discountStartDate\" required />\r\n                                                </div>\r\n                                                <label htmlFor=\"discountEndDate\">End Date:</label>\r\n                                                <div className=\"input-group\">\r\n                                                    <input onChange={this.changeHandler} className=\"form-control\" type=\"date\" name=\"discountEndDate\" id=\"discountEndDate\" required />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"modal-footer\">\r\n                                            <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Cerrar</button>\r\n                                            <button type=\"submit\" className=\"btn btn-primary\">Enviar</button>\r\n                                        </div>\r\n                                        {this.state.success && <span className=\"text-success\">{this.state.success}</span>}\r\n                                        {this.state.error && <span className=\"text-danger\">{this.state.error}</span>}\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Products;","import React, { Component } from \"react\";\r\n\r\nimport CustomSelect from \"../globalComponents/CustomSelect\";\r\nimport $ from \"jquery\";\r\n\r\nclass SalesControl extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            selectedProduct: null,\r\n            addedProducts: [],\r\n            subtotalDollars: null,\r\n            subtotalBs: null,\r\n            totalDollars: null,\r\n            totalBs: null,\r\n            quantity: 1,\r\n            stockError: \"\",\r\n            error: \"\",\r\n            success: \"\"\r\n        }\r\n        this.productsHandler = this.productsHandler.bind(this);\r\n        this.submitHandler = this.submitHandler.bind(this);\r\n        this.optionChangeHandler = this.optionChangeHandler.bind(this);\r\n        this.onChangeHandler = this.onChangeHandler.bind(this);\r\n        this.clickHandler = this.clickHandler.bind(this);\r\n\r\n        this.saleSubmitButton = React.createRef();\r\n\r\n\r\n        this.sendSaleForm = React.createRef();\r\n        this.quantityInput = React.createRef();\r\n        this.CustomSelectRef = React.createRef();\r\n        this.productsTable = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.body.addEventListener(\"keyup\", (event) => {\r\n            let key = event.key;\r\n            if (event.ctrlKey && key == \"Enter\") {\r\n                if (this.saleSubmitButton.current) this.saleSubmitButton.current.click()\r\n            }\r\n        });\r\n    }\r\n\r\n    optionChangeHandler(selectedOption, actionType) {\r\n        if (actionType.action == \"select-option\") {\r\n            this.quantityInput.current.focus();\r\n            this.quantityInput.current.select();\r\n        }\r\n        this.setState({\r\n            selectedProduct: selectedOption\r\n        })\r\n    }\r\n    onChangeHandler(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    productsHandler(event) {\r\n        event.preventDefault();\r\n\r\n        if (this.state.selectedProduct != null) {\r\n            fetch(`/api/inventory/${this.state.selectedProduct.id}`, {\r\n                headers: {\r\n                    \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n                }\r\n            })\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    let stock = res.data[0].stock;\r\n                    if (stock > 0 && stock >= this.state.quantity) {\r\n                        let product = this.state.selectedProduct;\r\n\r\n                        let productFormatted = {};\r\n\r\n                        let discount = 0;\r\n                        if (product.discount.length) {\r\n                            discount = product.discount[0].percent;\r\n                        }\r\n\r\n                        product.discount = discount;\r\n                        product.quantity = this.state.quantity || 1;\r\n\r\n                        product.totalDollars = product.price * product.quantity - (product.price * (discount / 100));\r\n                        product.priceBs = this.roundToNiceNumber(product.price * this.props.dolarReference);\r\n                        product.totalBs = this.roundToNiceNumber(product.priceBs * product.quantity - (product.priceBs * (discount / 100)));\r\n\r\n                        if (discount) {\r\n                            product.totalFormattedDollars = <span className={(discount) ? \"text-danger\" : \"\"}>{Intl.NumberFormat('es-VE', { style: 'currency', currency: 'USD' }).format(product.totalDollars) + ` (-${discount}%)`}</span>;\r\n                            product.totalFormattedBs = <span className={(discount) ? \"text-danger\" : \"\"}>{Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(product.totalBs) + ` (-${discount}%)`}</span>;\r\n                        }\r\n                        else {\r\n                            product.totalFormattedDollars = Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(product.totalDollars);\r\n                            product.totalFormattedBs = Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(product.totalBs);\r\n                        }\r\n\r\n                        productFormatted = {\r\n                            id: product.id,\r\n                            name: product.name,\r\n                            price: product.price,\r\n                            priceBs: product.priceBs,\r\n                            quantity: product.quantity,\r\n                            totalDollars: product.totalDollars,\r\n                            totalBs: product.totalBs,\r\n                            image: product.image,\r\n                            totalFormattedDollars: product.totalFormattedDollars,\r\n                            totalFormattedBs: product.totalFormattedBs,\r\n                            discount: product.discount\r\n                        };\r\n\r\n                        this.CustomSelectRef.current.select.state.value = [];\r\n                        this.quantityInput.current.value = 1\r\n                        this.CustomSelectRef.current.focus();\r\n\r\n                        let productExistsInTable = false;\r\n                        this.state.addedProducts.forEach(product => {\r\n                            if (productFormatted.id == product.id) {\r\n                                productExistsInTable = true;\r\n                                product.quantity += productFormatted.quantity;\r\n                            }\r\n                        })\r\n                        if (!productExistsInTable) {\r\n                            this.setState({\r\n                                quantity: 1,\r\n                                addedProducts: this.state.addedProducts.concat(productFormatted),\r\n                                selectedProduct: null,\r\n                                stockError: \"\"\r\n                            }, function () {\r\n                                let totalDollars = 0;\r\n                                let totalBs = 0;\r\n                                this.state.addedProducts.map(product => {\r\n                                    totalDollars += parseFloat(product.totalDollars);\r\n                                    totalBs += parseFloat(product.totalBs);\r\n                                });\r\n                                this.setState({\r\n                                    subtotalDollars: totalDollars,\r\n                                    subtotalBs: totalBs,\r\n                                    totalDollars,\r\n                                    totalBs\r\n                                })\r\n                            });\r\n                        }\r\n                        else {\r\n                            var index = this.state.addedProducts.findIndex(product => product.id === productFormatted.id);\r\n\r\n                            this.setState({\r\n                                addedProducts: [\r\n                                    ...this.state.addedProducts.slice(0, index),\r\n                                    Object.assign({}, this.state.addedProducts[index], { ...productFormatted }),\r\n                                    ...this.state.addedProducts.slice(index + 1)\r\n                                ],\r\n                                quantity: 1,\r\n                                selectedProduct: null,\r\n                                stockError: \"\"\r\n                            }, function () {\r\n                                let totalDollars = 0;\r\n                                let totalBs = 0;\r\n                                this.state.addedProducts.map(product => {\r\n                                    totalDollars += parseFloat(product.totalDollars);\r\n                                    totalBs += parseFloat(product.totalBs);\r\n                                });\r\n                                this.setState({\r\n                                    subtotalDollars: totalDollars,\r\n                                    subtotalBs: totalBs,\r\n                                    totalDollars,\r\n                                    totalBs\r\n                                })\r\n                            })\r\n                        }\r\n                        this.productsTable.current.scrollTop = this.productsTable.current.scrollHeight;\r\n                    }\r\n                    else {\r\n                        this.setState({\r\n                            stockError: \"No hay productos suficientes en el inventario\"\r\n                        });\r\n                    }\r\n                });\r\n        }\r\n        else {\r\n            this.setState({\r\n                stockError: \"Seleccione un producto\"\r\n            })\r\n        }\r\n    }\r\n    clickHandler(event) {\r\n        let newProducts = [];\r\n        let totalToSubtractDollars = 0;\r\n        let totalToSubtractBs = 0;\r\n\r\n        this.state.addedProducts.forEach(product => {\r\n            if (product.id != event.currentTarget.parentElement.parentElement.getAttribute(\"productid\")) {\r\n                newProducts.push(product);\r\n            }\r\n            else {\r\n                totalToSubtractDollars += product.totalDollars;\r\n                totalToSubtractBs += product.totalBs;\r\n            }\r\n        })\r\n        this.setState({\r\n            addedProducts: newProducts,\r\n            subtotalDollars: this.state.subtotalDollars - totalToSubtractDollars,\r\n            subtotalBs: this.state.subtotalBs - totalToSubtractBs,\r\n            totalDollars: this.state.totalDollars - totalToSubtractDollars,\r\n            totalBs: this.state.totalBs - totalToSubtractBs\r\n        });\r\n        this.CustomSelectRef.current.focus();\r\n    }\r\n\r\n    submitHandler() {\r\n        if (!this.state.addedProducts.length) {\r\n            this.setState({\r\n                stockError: \"Seleccione un producto\"\r\n            })\r\n            return\r\n        }\r\n        this.saleSubmitButton.current.disabled = true;\r\n        let saleProducts = [];\r\n        this.state.addedProducts.forEach(product => {\r\n            saleProducts.push({\r\n                id: product.id,\r\n                quantity: product.quantity,\r\n                price: product.price,\r\n                dolarReference: this.props.dolarReference,\r\n                discount: product.discount\r\n            })\r\n        });\r\n        fetch(\"/api/sales\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n                'Content-Type': 'application/json'\r\n\r\n            },\r\n            body: JSON.stringify({\r\n                products: saleProducts\r\n            })\r\n        }).then(res => res.json())\r\n            .then(res => {\r\n                if (res.err || res.error) {\r\n                    this.setState({\r\n                        error: res.err\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        success: \"La venta se ha realizado con éxito\",\r\n                        selectedProduct: null,\r\n                        addedProducts: [],\r\n                        subtotalDollars: null,\r\n                        subtotalBs: null,\r\n                        totalDollars: null,\r\n                        totalBs: null,\r\n                        quantity: 1,\r\n                        stockError: \"\",\r\n                        error: \"\",\r\n                    })\r\n                    setTimeout(() => {\r\n                        this.setState({\r\n                            success: \"\"\r\n                        })\r\n                    }, 3000);\r\n                    this.CustomSelectRef.current.select.state.value = [];\r\n                    this.quantityInput.current.value = 1\r\n                    this.CustomSelectRef.current.focus();\r\n                    this.saleSubmitButton.current.disabled = false;\r\n\r\n                }\r\n            })\r\n    }\r\n\r\n    roundToNiceNumber(value) {\r\n        var val = 0;\r\n        if (value.toString().length == 4) {\r\n            val = Math.ceil(value / 100) * 100\r\n        }\r\n        else if (value.toString().length > 4) {\r\n            val = Math.ceil(value / 1000) * 1000\r\n        }\r\n\r\n        return val;\r\n    }\r\n    render() {\r\n        var _this = this;\r\n        return (\r\n            <div className=\"container-fluid\" id=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1 className=\"text-danger\">Control de Ventas</h1>\r\n                    </div>\r\n                </div>\r\n                <form className=\"mt-5\" onSubmit={this.productsHandler}>\r\n                    <div className=\"col\">\r\n                        <span className=\"text-danger\">{this.state.stockError}</span>\r\n                        <span className=\"text-danger h3\">{this.state.error}</span>\r\n                        <span className=\"text-success h3\">{this.state.success}</span>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 col-md-7 mt-2\">\r\n                            <CustomSelect dolarReference={_this.props.dolarReference} isMulti={false} innerRef={this.CustomSelectRef} changeHandler={this.optionChangeHandler} name={\"ProductSelect\"} />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-3 mt-2\">\r\n                            <input onChange={this.onChangeHandler} ref={this.quantityInput} type=\"text\" className=\"form-control\" placeholder=\"Cantidad\" id=\"quantity\" name=\"quantity\" defaultValue=\"1\" />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-10 col-lg-2 mt-2\">\r\n                            <input type=\"submit\" className=\"form-control btn btn-info\" value=\"Enviar\" />\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                <div className=\"row\">\r\n                    <div className=\"col-2\">\r\n                        <div className=\"form-group\">\r\n                            <input ref={this.saleSubmitButton} onClick={this.submitHandler} type=\"button\" className=\"form-control btn btn-primary\" value=\"Procesar venta\" />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input ref={this.saleSubmitButton} onClick={this.submitHandler} type=\"button\" className=\"form-control btn btn-warning\" value=\"Enviar a deuda\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-10\">\r\n                        <div className=\"table-responsive w-100 h-100\" >\r\n                            <table ref={this.productsTable} className=\"table table-dark table-striped overflow-auto\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"col\">Count</th>\r\n                                        <th scope=\"col\">Product ID</th>\r\n                                        <th scope=\"col\">Nombre</th>\r\n                                        <th scope=\"col\">Precio $</th>\r\n                                        <th scope=\"col\">Precio Bs</th>\r\n                                        <th scope=\"col\">Cantidad</th>\r\n                                        <th scope=\"col\">Total<span className=\"font-weight-bold text-danger\">{\" \" + Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(this.state.totalDollars)}</span>\r\n                                        </th>\r\n                                        <th scope=\"col\">Total<span className=\"font-weight-bold text-danger\">{\" \" + Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(this.state.totalBs)}</span>\r\n                                        </th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {this.state.addedProducts.map((product, index) => {\r\n                                        if (product.image) {\r\n                                            var bufferBase64 = new Buffer.from(product.image, 'binary').toString('base64');\r\n                                            return (\r\n                                                <tr key={index} productid={product.id}>\r\n                                                    <th>{index + 1}</th>\r\n                                                    <th>{product.id}</th>\r\n                                                    <th><img className=\"\" style={{ maxWidth: \"40px\" }} src={`data:image/png;base64,${bufferBase64}`} />{product.name}</th>\r\n                                                    <th>{Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(product.price)}</th>\r\n                                                    <th>{Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(product.priceBs)}</th>\r\n                                                    <th>{product.quantity}</th>\r\n                                                    <th>{product.totalFormattedDollars}</th>\r\n                                                    <th>{product.totalFormattedBs}</th>\r\n                                                    <th>\r\n                                                        <button onClick={this.clickHandler} className=\"btn btn-danger p-0\">Delete</button>\r\n                                                    </th>\r\n                                                </tr>\r\n                                            )\r\n                                        }\r\n                                        else {\r\n                                            return (\r\n                                                <tr key={index} productid={product.id}>\r\n                                                    <th>{index + 1}</th>\r\n                                                    <th>{product.id}</th>\r\n                                                    <th>{product.name}</th>\r\n                                                    <th>{Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(product.price)}</th>\r\n                                                    <th>{Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(product.priceBs)}</th>\r\n                                                    <th>{product.quantity}</th>\r\n                                                    <th>{product.totalFormattedDollars}</th>\r\n                                                    <th>{product.totalFormattedBs}</th>\r\n                                                    <th>\r\n                                                        <button onClick={this.clickHandler} className=\"btn btn-danger p-0\">Delete</button>\r\n                                                    </th>\r\n                                                </tr>\r\n                                            )\r\n                                        }\r\n\r\n                                    })}\r\n                                </tbody>\r\n                                <tfoot>\r\n\r\n                                </tfoot>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SalesControl;\r\n\r\n/*\r\n<div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <div className=\"d-flex flex-column align-items-end\">\r\n                            <label className=\"font-weight-bold h4\">{\"Subtotal Bs: \"}\r\n                                <span className=\"font-weight-bold h4 text-danger\">{Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(this.state.subtotalBs)}</span>\r\n                            </label>\r\n                            <label className=\"font-weight-bold h4\">{\"Total Bs: \"}\r\n                                <span className=\"font-weight-bold h4 text-danger\">{Intl.NumberFormat('es-VE', { style: 'currency', currency: 'VES' }).format(this.state.totalBs)}</span>\r\n                            </label>\r\n                            <hr className=\"w-100\" />\r\n                            <label className=\"font-weight-bold h4\">{\"Subtotal $: \"}\r\n                                <span className=\"font-weight-bold h4 text-danger\">{Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(this.state.subtotalDollars)}</span>\r\n                            </label>\r\n                            <label className=\"font-weight-bold h4\">{\"Total $: \"}\r\n                                <span className=\"font-weight-bold h4 text-danger\">{Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(this.state.totalDollars)}</span>\r\n                            </label>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n                */"],"sourceRoot":""}